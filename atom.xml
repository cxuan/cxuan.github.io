<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>靛青</title>
  <subtitle>青，取之于藍而青于藍。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://c-xuan.com/"/>
  <updated>2019-03-13T10:45:41.974Z</updated>
  <id>https://c-xuan.com/</id>
  
  <author>
    <name>c-xuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Python 3 基础】字典dict创建方法及常用操作</title>
    <link href="https://c-xuan.com/2019/03/13/20190313001_python_dict/"/>
    <id>https://c-xuan.com/2019/03/13/20190313001_python_dict/</id>
    <published>2019-03-13T10:41:12.000Z</published>
    <updated>2019-03-13T10:45:41.974Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Ptyhon 3中字典创建方法，以及字典排序，合并等常用操作。</p>
<a id="more"></a>
<h3 id="创建字典方法"><a href="#创建字典方法" class="headerlink" title="创建字典方法"></a>创建字典方法</h3><h4 id="方式"><a href="#方式" class="headerlink" title="{} 方式"></a>{} 方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dict1 = &#123;&#125; <span class="comment">#创建空字典</span></div><div class="line">dict2 = &#123;<span class="string">'a'</span>:<span class="number">11</span>,<span class="string">'b'</span>:<span class="number">12</span>&#125; <span class="comment">#创建含有值得字典</span></div></pre></td></tr></table></figure>
<h4 id="dict-函数-方式"><a href="#dict-函数-方式" class="headerlink" title="dict()函数 方式"></a>dict()函数 方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dict3 = dict() <span class="comment">#创建空字典</span></div><div class="line">dict4 = dict(a=<span class="string">'11'</span>,b=<span class="string">'ddd'</span>,c=<span class="string">'ssss'</span>) <span class="comment">#创建含有值的字典，注意键值如果加引号会报错</span></div><div class="line"><span class="comment">#dict5 = dict('a'='11',b='ddd',c='ssss') # SyntaxError: keyword can't be an expression</span></div><div class="line"></div><div class="line">keys = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>]</div><div class="line">values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">dict6 = dict(zip(keys,values)) <span class="comment">#键或值的列表元素个数不必相同，以少的为准</span></div><div class="line"><span class="comment"># &#123;'a': 1, 'b': 2, 'c': 3, 'd': 4&#125;</span></div></pre></td></tr></table></figure>
<h3 id="字典排序"><a href="#字典排序" class="headerlink" title="字典排序"></a>字典排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> operator</div><div class="line">test = &#123;<span class="string">'a'</span>:<span class="number">1</span>,<span class="string">'c'</span>:<span class="number">2</span>,<span class="string">'b'</span>:<span class="number">7</span>,<span class="string">'f'</span>:<span class="number">5</span>&#125;</div></pre></td></tr></table></figure>
<h4 id="根据键排序"><a href="#根据键排序" class="headerlink" title="根据键排序"></a>根据键排序</h4><h5 id="sorted-方式"><a href="#sorted-方式" class="headerlink" title="sorted() 方式"></a>sorted() 方式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(sorted(test.items())) <span class="comment">#升序</span></div><div class="line">print(sorted(test.items(),reverse=<span class="keyword">True</span>)) <span class="comment">#降序</span></div></pre></td></tr></table></figure>
<h5 id="sorted-operator-方式"><a href="#sorted-operator-方式" class="headerlink" title="sorted + operator 方式"></a>sorted + operator 方式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(sorted(test.items(),key=operator.itemgetter(<span class="number">0</span>))) <span class="comment">#升序</span></div><div class="line">print(sorted(test.items(),key=operator.itemgetter(<span class="number">0</span>),reverse=<span class="keyword">True</span>)) <span class="comment">#降序</span></div></pre></td></tr></table></figure>
<h5 id="sorted-lambda-方式"><a href="#sorted-lambda-方式" class="headerlink" title="sorted + lambda 方式"></a>sorted + lambda 方式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(sorted(test.items(),key=<span class="keyword">lambda</span> x : x[<span class="number">0</span>])) <span class="comment">#升序</span></div><div class="line">print(sorted(test.items(),key=<span class="keyword">lambda</span> x : x[<span class="number">0</span>],reverse=<span class="keyword">True</span>)) <span class="comment">#降序</span></div></pre></td></tr></table></figure>
<h4 id="根据值排序"><a href="#根据值排序" class="headerlink" title="根据值排序"></a>根据值排序</h4><h5 id="sorted-operator-方式-1"><a href="#sorted-operator-方式-1" class="headerlink" title="sorted + operator 方式"></a>sorted + operator 方式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(sorted(test.items(),key=operator.itemgetter(<span class="number">1</span>))) <span class="comment">#升序</span></div><div class="line">print(sorted(test.items(),key=operator.itemgetter(<span class="number">1</span>),reverse=<span class="keyword">True</span>)) <span class="comment">#降序</span></div></pre></td></tr></table></figure>
<h5 id="sorted-lambda-方式-1"><a href="#sorted-lambda-方式-1" class="headerlink" title="sorted + lambda 方式"></a>sorted + lambda 方式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(sorted(test.items(),key=<span class="keyword">lambda</span> x : x[<span class="number">1</span>])) <span class="comment">#升序</span></div><div class="line">print(sorted(test.items(),key=<span class="keyword">lambda</span> x : x[<span class="number">1</span>],reverse=<span class="keyword">True</span>)) <span class="comment">#降序</span></div></pre></td></tr></table></figure>
<p><strong> 注意，如果值的数据类型不一样，以上根据值排序会报错，例如一下字典，值有int和str类型,lambda中要进行类型转换 </strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">test2 = &#123;<span class="string">'a'</span>:<span class="number">1</span>,<span class="string">'c'</span>:<span class="number">2</span>,<span class="string">'b'</span>:<span class="number">7</span>,<span class="string">'f'</span>:<span class="string">'5'</span>&#125;</div><div class="line">print(sorted(test2.items(),key=<span class="keyword">lambda</span> x : str(x[<span class="number">1</span>]))) <span class="comment">#升序</span></div><div class="line"><span class="comment">#输出 [('a', 1), ('c', 2), ('f', '5'), ('b', 7)]</span></div></pre></td></tr></table></figure></p>
<h3 id="字典合并"><a href="#字典合并" class="headerlink" title="字典合并"></a>字典合并</h3><h4 id="update方法"><a href="#update方法" class="headerlink" title="update方法"></a>update方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dictA = &#123;<span class="string">'a'</span>:<span class="number">3</span>,<span class="string">'b'</span>:<span class="number">7</span>,<span class="string">'c'</span>:<span class="string">'2'</span>&#125;</div><div class="line">dictB = &#123;<span class="string">'d'</span>:<span class="number">12</span>,<span class="string">'f'</span>:<span class="string">'44'</span>&#125;</div><div class="line">dictA.update(dictB)</div><div class="line">print(dictA) <span class="comment">#输出 &#123;'a': 3, 'b': 7, 'c': '2', 'd': 12, 'f': '44'&#125;</span></div></pre></td></tr></table></figure>
<h4 id="方法"><a href="#方法" class="headerlink" title="**方法"></a>**方法</h4><p><strong> 高版本python中可用 </strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dictC = &#123;**dictA,**dictB&#125;</div><div class="line">print(dictC) <span class="comment">#输出 &#123;'a': 3, 'b': 7, 'c': '2', 'd': 12, 'f': '44'&#125;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Ptyhon 3中字典创建方法，以及字典排序，合并等常用操作。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CSS视差效果设计</title>
    <link href="https://c-xuan.com/2019/03/05/20190305001_css_parallax_effects/"/>
    <id>https://c-xuan.com/2019/03/05/20190305001_css_parallax_effects/</id>
    <published>2019-03-05T11:16:42.000Z</published>
    <updated>2019-03-05T11:16:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>codepen上不错的视差效果设计。</p>
<a id="more"></a>
<center><img src="/img/posts/20190305001-01.gif" alt="parallax effects"></center>

<ul>
<li>作者：oscicen</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：否</li>
<li>源码链接：<a href="https://codepen.io/oscicen/pen/zyJeJw" target="_blank" rel="external">https://codepen.io/oscicen/pen/zyJeJw</a></li>
</ul>
<center><img src="/img/posts/20190305001-02.gif" alt="parallax effects"></center>

<ul>
<li>作者：Guilmain Dorian</li>
<li>使用技术：HTML (Pug) / CSS (Less) / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox (partial), Opera, Safari</li>
<li>响应式：否</li>
<li>源码链接：<a href="https://codepen.io/Craaftx/pen/yQGpwa" target="_blank" rel="external">https://codepen.io/Craaftx/pen/yQGpwa</a></li>
</ul>
<center><img src="/img/posts/20190305001-03.gif" alt="parallax effects"></center>

<ul>
<li>作者：Adrian Payne</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript (Babel)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/dazulu/pen/VVZrQv" target="_blank" rel="external">https://codepen.io/dazulu/pen/VVZrQv</a></li>
</ul>
<center><img src="/img/posts/20190305001-04.gif" alt="parallax effects"></center>

<ul>
<li>作者：Alex O’Neal</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/alexoneal/pen/OBqaoe" target="_blank" rel="external">https://codepen.io/alexoneal/pen/OBqaoe</a></li>
</ul>
<center><img src="/img/posts/20190305001-05.gif" alt="parallax effects"></center>

<ul>
<li>作者：Sil van Diepen</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/silvandiepen/full/NOboze" target="_blank" rel="external">https://codepen.io/silvandiepen/full/NOboze</a></li>
</ul>
<center><img src="/img/posts/20190305001-06.gif" alt="parallax effects"></center>

<ul>
<li>作者：Yago Estévez</li>
<li>使用技术：HTML (Pug) / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/yagoestevez/full/EdgRMX" target="_blank" rel="external">https://codepen.io/yagoestevez/full/EdgRMX</a></li>
</ul>
<center><img src="/img/posts/20190305001-07.gif" alt="parallax effects"></center>

<ul>
<li>作者：jakob-e</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/jakob-e/pen/ELqeRM" target="_blank" rel="external">https://codepen.io/jakob-e/pen/ELqeRM</a></li>
</ul>
<center><img src="/img/posts/20190305001-08.gif" alt="parallax effects"></center>

<ul>
<li>作者：Casey Callis</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js, parallax.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/caseycallis/full/pwEWxo" target="_blank" rel="external">https://codepen.io/caseycallis/full/pwEWxo</a></li>
</ul>
<center><img src="/img/posts/20190305001-09.gif" alt="parallax effects"></center>

<ul>
<li>作者：Ravi Dhiman</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>响应式：是</li>
<li>源码链接：<a href="https://codepen.io/ravid7000/pen/LREEzv" target="_blank" rel="external">https://codepen.io/ravid7000/pen/LREEzv</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;codepen上不错的视差效果设计。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>类Jupyter notebook编辑器桌面版nteract</title>
    <link href="https://c-xuan.com/2019/02/21/20190221001_nteract/"/>
    <id>https://c-xuan.com/2019/02/21/20190221001_nteract/</id>
    <published>2019-02-21T05:40:29.000Z</published>
    <updated>2019-02-21T05:40:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Jupyter notebook是一款学习和科研的神奇，相信很多小伙伴已经利用它在学术科研、研究开发的道路上收获了便捷易用、可视直观的优点。我们使用的Jupyter notebook都是网页形式的，在浏览器中进行操作，保存的文件格式是<code>.ipynb</code>的。似乎在其他编辑器工具中打不开这种格式。有没有不想在网页中的Jupyter notebook编写代码，也可以直接编辑<code>.ipynb</code>格式的文件的方法呢？</p>
<a id="more"></a>
<p>有这样一个软件似乎可以：<a href="https://nteract.io/" target="_blank" rel="external">nteract</a>，这个软件我理解为桌面版的Jupyter notebook，下面是nteract的官网.</p>
<center><img src="/img/posts/20190221001-02.gif" alt="pyvenv"></center>

<h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>官网上可以下载安装文件，支持跨平台，有windows,linux,mac版本，免费的。软件安装好后，启动进入，界面比较简洁。</p>
<center><img src="/img/posts/20190221001-03.png" alt="pyvenv"></center>

<p>可以看到，系统中<code>.ipynb</code>格式的文件打开方式变成了nteract，直接双击文件就能打开进行编辑，保存，跟在Jupyter notebook一样。</p>
<center><img src="/img/posts/20190221001-04.png" alt="pyvenv"></center>

<h3 id="执行代码"><a href="#执行代码" class="headerlink" title="执行代码"></a>执行代码</h3><p>软件安装前确保本机有Python执行环境，推荐安装Anaconda，nteract需要连接Jupyter内核才能执行代码，如果已安装有Anaconda，打开nteract后可以看到左下角连接的Jupyter内核名称。</p>
<center><img src="/img/posts/20190221001-06.png" alt="pyvenv"></center>

<p>如果需要切换python虚拟环境，就需要安装多个python内核，如何安装参考<a href="/2019/02/18/20190218001_hydrogen_venv">Atom编辑器中使用Hydrogen切换Python虚拟环境</a>，安装好后在nteract中切换方法如下</p>
<center><img src="/img/posts/20190221001-07.gif" alt="pyvenv"></center>

<p>和在Jupyter notebook一样，执行单元格的代码可用<code>Shift+Enter</code>等快捷键，或者单元格靠右侧有个执行程序的小按钮。</p>
<center><img src="/img/posts/20190221001-05.gif" alt="pyvenv"></center>

<p>敲代码时可以看到是支持代码自动提示与补全的。</p>
<h3 id="终止代码执行"><a href="#终止代码执行" class="headerlink" title="终止代码执行"></a>终止代码执行</h3><p>如果不小心写了死循环或者想临时终止代码的运行，可以在<code>Runtime</code>菜单下进行操作。</p>
<center><img src="/img/posts/20190221001-09.gif" alt="pyvenv"></center>

<h3 id="Markdown和Code切换"><a href="#Markdown和Code切换" class="headerlink" title="Markdown和Code切换"></a>Markdown和Code切换</h3><p>单元格右侧下拉菜单中可以切换单元格内容是Markdown文本还是代码，如果是MD文本，双击单元格即可显示原始内容。其他单元格操作及相关快捷键看下<code>Edit</code>或者<code>Cell</code>菜单就明白了。</p>
<center><img src="/img/posts/20190221001-08.gif" alt="pyvenv"></center>

<h3 id="暗色主题"><a href="#暗色主题" class="headerlink" title="暗色主题"></a>暗色主题</h3><p>软件可以切换亮色与暗色主题。</p>
<center><img src="/img/posts/20190221001-10.gif" alt="pyvenv"></center>

<h3 id="小问题"><a href="#小问题" class="headerlink" title="小问题"></a>小问题</h3><p>如果是直接启动软件，第一次保存文件按<code>Ctrl+s</code>保存会报错，得用另存为。</p>
<center><img src="/img/posts/20190221001-11.gif" alt="pyvenv"></center>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>相比于Jupyter notebook，nteract显得简洁很多，平时开发作为替代也是可以的。单元格操作上，nteract没有Jupyter notebook那么丰富。Jupyter notebook可以额外安装插件进行功能扩展，虽然nteract也可以安装插件，官网上有介绍，但功能似乎没那么强大。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jupyter notebook是一款学习和科研的神奇，相信很多小伙伴已经利用它在学术科研、研究开发的道路上收获了便捷易用、可视直观的优点。我们使用的Jupyter notebook都是网页形式的，在浏览器中进行操作，保存的文件格式是&lt;code&gt;.ipynb&lt;/code&gt;的。似乎在其他编辑器工具中打不开这种格式。有没有不想在网页中的Jupyter notebook编写代码，也可以直接编辑&lt;code&gt;.ipynb&lt;/code&gt;格式的文件的方法呢？&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="工具" scheme="https://c-xuan.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Python多个数组合并</title>
    <link href="https://c-xuan.com/2019/02/20/20190220001_py_list_merge/"/>
    <id>https://c-xuan.com/2019/02/20/20190220001_py_list_merge/</id>
    <published>2019-02-20T05:40:29.000Z</published>
    <updated>2019-02-20T05:40:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python中多个数组合并为一个数组的方法整理。</p>
<a id="more"></a>
<h3 id="extend方法"><a href="#extend方法" class="headerlink" title="extend方法"></a>extend方法</h3><p>该方法可以扩展数组，会改变原始数组。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">6</span>]</div><div class="line">b = [<span class="string">'a'</span>,<span class="string">'b'</span>]</div><div class="line">c = [<span class="string">'h'</span>,<span class="number">12</span>,<span class="string">'c'</span>]</div><div class="line">a.extend(b)</div><div class="line">a.extend(c)</div><div class="line">print(a)</div><div class="line"></div><div class="line"><span class="comment">#结果：[1, 2, 3, 4, 7, 5, 6, 'a', 'b', 'h', 12, 'c']</span></div></pre></td></tr></table></figure>
<h3 id="直接相加"><a href="#直接相加" class="headerlink" title="直接相加"></a>直接相加</h3><p>用<code>+</code>将各数组连接起来。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">6</span>]</div><div class="line">b = [<span class="string">'a'</span>,<span class="string">'b'</span>]</div><div class="line">c = [<span class="string">'h'</span>,<span class="number">12</span>,<span class="string">'c'</span>]</div><div class="line"></div><div class="line">d = a + b +c</div><div class="line">print(d)</div><div class="line"></div><div class="line"><span class="comment">#结果：[1, 2, 3, 4, 7, 5, 6, 'a', 'b', 'h', 12, 'c']</span></div></pre></td></tr></table></figure>
<h3 id="flatten方法"><a href="#flatten方法" class="headerlink" title="flatten方法"></a>flatten方法</h3><p><code>flatten()</code>方法是numpy中array数组的方法，使用时要导入包和类型转换。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> array</div><div class="line"></div><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</div><div class="line">b = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">c = [<span class="string">'h'</span>,<span class="number">12</span>,<span class="string">'k'</span>]</div><div class="line">e = [a,b,c]</div><div class="line">e = array(e)</div><div class="line">print(e.flatten())</div><div class="line"></div><div class="line"><span class="comment">#结果：['1' '2' '3' 'a' 'b' 'c' 'h' '12' 'k']</span></div></pre></td></tr></table></figure>
<p>值得注意的是该方法不适用各数组中元素个数不同的情况。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]  <span class="comment">#元素个数不同</span></div><div class="line">b = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">c = [<span class="string">'h'</span>,<span class="number">12</span>,<span class="string">'k'</span>]</div><div class="line">e = [a,b,c]</div><div class="line">e = array(e)</div><div class="line">print(e.flatten())</div><div class="line"></div><div class="line"><span class="comment">#结果：[list([1, 2, 3, 4]) list(['a', 'b', 'c']) list(['h', 12, 'k'])]</span></div></pre></td></tr></table></figure>
<h3 id="列表表达式"><a href="#列表表达式" class="headerlink" title="列表表达式"></a>列表表达式</h3><p>使用前得把多个数组放在一个数组中，应用在一个二维数组上。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] </div><div class="line">b = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">c = [<span class="string">'h'</span>,<span class="number">12</span>,<span class="string">'k'</span>]</div><div class="line">e = [a,b,c]</div><div class="line">e = [y <span class="keyword">for</span> x <span class="keyword">in</span> e <span class="keyword">for</span> y <span class="keyword">in</span> x]</div><div class="line">print(e)</div><div class="line"></div><div class="line">结果：[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'h'</span>, <span class="number">12</span>, <span class="string">'k'</span>]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python中多个数组合并为一个数组的方法整理。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Atom】autocomplete-python插件报乱码异常问题</title>
    <link href="https://c-xuan.com/2019/02/20/20190220002_atom_atuo_err/"/>
    <id>https://c-xuan.com/2019/02/20/20190220002_atom_atuo_err/</id>
    <published>2019-02-20T05:40:29.000Z</published>
    <updated>2019-02-20T05:40:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://atom.io/packages/autocomplete-python" target="_blank" rel="external">autocomplete-python</a>插件可以帮助在写python代码时给出丰富的提示并且自动补全代码，换电脑重装该插件后发现按下键盘后，atom右上角总弹出<code>autocomplete-python traceback output:</code>的提示，提示信息还是乱码。</p>
<a id="more"></a>
<center><img src="/img/posts/20190220002-01.png" alt="pyvenv"></center>


<p>解决方式是设置<code>Python Executable Paths</code></p>
<p>进入Atom设置<code>Packages</code>,找到该插件，进入<code>Settings</code></p>
<center><img src="/img/posts/20190220002-02.png" alt="pyvenv"></center>

<p>在<code>Python Executable Paths</code>中设置python的执行路径，因为本机是安装的Anaconda，环境变量中没有python执行路径。</p>
<center><img src="/img/posts/20190220002-03.png" alt="pyvenv"></center>

<p>重启Atom后就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-python&quot;&gt;autocomplete-python&lt;/a&gt;插件可以帮助在写python代码时给出丰富的提示并且自动补全代码，换电脑重装该插件后发现按下键盘后，atom右上角总弹出&lt;code&gt;autocomplete-python traceback output:&lt;/code&gt;的提示，提示信息还是乱码。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="工具" scheme="https://c-xuan.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="atom" scheme="https://c-xuan.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Atom编辑器中使用Hydrogen切换Python虚拟环境</title>
    <link href="https://c-xuan.com/2019/02/18/20190218001_hydrogen_venv/"/>
    <id>https://c-xuan.com/2019/02/18/20190218001_hydrogen_venv/</id>
    <published>2019-02-18T10:12:24.000Z</published>
    <updated>2019-02-18T10:12:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用Anaconda的集成Python环境，自带的Jupyter代码编辑器很不错，可以进行代码交互运行。后来折腾Atom编辑器，在Atom中安装Hydrogen插件也可以达到交互运行目的，而且在Atom中编写代码体验稍微好点。有时候我们会在自己的项目中创建Python虚拟环境，Hydrogen连接Anaconda中的python内核，如何增加python虚拟环境的内核给Hydrogen使用呢？</p>
<a id="more"></a>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>配置前先确认电脑上安装了<a href="https://www.anaconda.com/" target="_blank" rel="external">Anaconda</a>,代码编辑器<a href="http://www.atom.io/" target="_blank" rel="external">Atom</a>,Atom中安装了<a href="https://nteract.gitbooks.io/hydrogen/" target="_blank" rel="external">Hydrogen</a>插件.</p>
<p>开始菜单中打开<code>Anaconda Prompt</code>命令行窗口。</p>
<p>查看当前可用的kernel</p>
<p><code>jupyter kernelspec list</code></p>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(base) C:<span class="symbol">\W</span>indows<span class="symbol">\s</span>ystem32&gt;jupyter kernelspec list</div><div class="line">Available kernels:</div><div class="line">  python3    C:<span class="symbol">\U</span>sers<span class="symbol">\c</span>xuan<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\j</span>upyter<span class="symbol">\k</span>ernels<span class="symbol">\p</span>ython3</div><div class="line">  venv       C:<span class="symbol">\P</span>rogramData<span class="symbol">\j</span>upyter<span class="symbol">\k</span>ernels<span class="symbol">\v</span>env</div></pre></td></tr></table></figure>
<p>默认只有第一个，第二个是后加的，在Atom中运行Python启动kernel默认只有第一个。</p>
<center><img src="/img/posts/20190220001-01.png" alt="pyvenv"></center>

<h3 id="创建python虚拟环境"><a href="#创建python虚拟环境" class="headerlink" title="创建python虚拟环境"></a>创建python虚拟环境</h3><p><code>python -m venv E:\PythonProject\test\pyvenv</code></p>
<p>创建后文件夹下出现这些文件目录</p>
<center><img src="/img/posts/20190220001-02.png" alt="pyvenv"></center>

<h3 id="安装python内核"><a href="#安装python内核" class="headerlink" title="安装python内核"></a>安装python内核</h3><p>激活新的虚拟环境</p>
<p><code>E:\PythonProject\test\pyvenv\Scripts\activate</code></p>
<center><img src="/img/posts/20190220001-03.png" alt="pyvenv"></center>

<p>安装python kernel (ipykernel)到虚拟环境里</p>
<p><code>python -m pip install ipykernel</code></p>
<center><img src="/img/posts/20190220001-04.png" alt="pyvenv"></center>

<p>安装python kernel到可用的kernel列表中,<code>--name</code>是自定义名称参数。</p>
<p><code>python -m ipykernel install --name pyvenv</code></p>
<center><img src="/img/posts/20190220001-05.png" alt="pyvenv"></center>

<p>重启Atom编辑器，启动python内核时多出了一个选项，就是刚刚我们配置的虚拟环境内核。</p>
<center><img src="/img/posts/20190220001-06.png" alt="pyvenv"></center>

<h3 id="删除python内核"><a href="#删除python内核" class="headerlink" title="删除python内核"></a>删除python内核</h3><p>删除python keernel</p>
<p>remove后指定要删除的kernel名称</p>
<p><code>jupyter kernelspec remove pyvenv</code></p>
<center><img src="/img/posts/20190220001-07.png" alt="pyvenv"></center>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://nteract.io/kernels" target="_blank" rel="external">https://nteract.io/kernels</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Anaconda的集成Python环境，自带的Jupyter代码编辑器很不错，可以进行代码交互运行。后来折腾Atom编辑器，在Atom中安装Hydrogen插件也可以达到交互运行目的，而且在Atom中编写代码体验稍微好点。有时候我们会在自己的项目中创建Python虚拟环境，Hydrogen连接Anaconda中的python内核，如何增加python虚拟环境的内核给Hydrogen使用呢？&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
      <category term="工具" scheme="https://c-xuan.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>【Web前端】11个使用CSS制作产品展示卡片样例</title>
    <link href="https://c-xuan.com/2019/02/14/20190214001_product_card/"/>
    <id>https://c-xuan.com/2019/02/14/20190214001_product_card/</id>
    <published>2019-02-14T11:16:42.000Z</published>
    <updated>2019-02-14T11:16:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　</p>
<a id="more"></a>
<center><img src="/img/posts/20190214001-01.png" alt="product card"></center>

<ul>
<li>作者：John Mantas</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>是否自适应：否</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/john-mantas/full/bxmrBq" target="_blank" rel="external">https://codepen.io/john-mantas/full/bxmrBq</a></li>
</ul>
<center><img src="/img/posts/20190214001-02.png" alt="product card"></center>

<ul>
<li>作者：George Gedox</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>是否自适应：否</li>
<li>依赖库：font-awesome.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/GeorgeGedox/pen/yEwoqP" target="_blank" rel="external">https://codepen.io/GeorgeGedox/pen/yEwoqP</a></li>
</ul>
<center><img src="/img/posts/20190214001-03.png" alt="product card"></center>

<ul>
<li>作者：Julie Park</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>是否自适应：否</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/juliepark/pen/aKbYVp" target="_blank" rel="external">https://codepen.io/juliepark/pen/aKbYVp</a></li>
</ul>
<center><img src="/img/posts/20190214001-04.png" alt="product card"></center>

<ul>
<li>作者：Fatih Takey</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：font-awesome.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/fatihtakey/pen/eyyWVr" target="_blank" rel="external">https://codepen.io/fatihtakey/pen/eyyWVr</a></li>
</ul>
<center><img src="/img/posts/20190214001-05.gif" alt="product card"></center>

<ul>
<li>作者：Omar Dsoky</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：font-awesome.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/linux/pen/LjWrPZ" target="_blank" rel="external">https://codepen.io/linux/pen/LjWrPZ</a></li>
</ul>
<center><img src="/img/posts/20190214001-06.gif" alt="product card"></center>

<ul>
<li>作者：SliceCrowd</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：bootstrap.css, swiper.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/slicecrowd/pen/GWJEZB" target="_blank" rel="external">https://codepen.io/slicecrowd/pen/GWJEZB</a></li>
</ul>
<center><img src="/img/posts/20190214001-07.jpg" alt="product card"></center>

<ul>
<li>作者：Tobi Balogun</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：ionicons.css, animate.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/cupofmint/pen/wgyrRX" target="_blank" rel="external">https://codepen.io/cupofmint/pen/wgyrRX</a></li>
</ul>
<center><img src="/img/posts/20190214001-08.png" alt="product card"></center>

<ul>
<li>作者：CodeFrog</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：font-awesome.css</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/CodeFrogShow/pen/rWjYrP" target="_blank" rel="external">https://codepen.io/CodeFrogShow/pen/rWjYrP</a></li>
</ul>
<center><img src="/img/posts/20190214001-09.gif" alt="product card"></center>

<ul>
<li>作者：Oscar</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>是否自适应：否</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/olhilton/pen/dXaqxE" target="_blank" rel="external">https://codepen.io/olhilton/pen/dXaqxE</a></li>
</ul>
<center><img src="/img/posts/20190214001-10.png" alt="product card"></center>

<ul>
<li>作者：Alexandra K</li>
<li>使用技术：HTML / CSS</li>
<li>是否自适应：否</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ff0004-red/pen/WxJEJZ" target="_blank" rel="external">https://codepen.io/ff0004-red/pen/WxJEJZ</a></li>
</ul>
<center><img src="/img/posts/20190214001-11.png" alt="product card"></center>

<ul>
<li>作者：Jacob Sauerhoefer</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>是否自适应：否</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jacobsauerhoefer/pen/mVZwLB" target="_blank" rel="external">https://codepen.io/jacobsauerhoefer/pen/mVZwLB</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS制作水滴效果</title>
    <link href="https://c-xuan.com/2019/02/07/20190207001_css_water_effects/"/>
    <id>https://c-xuan.com/2019/02/07/20190207001_css_water_effects/</id>
    <published>2019-02-07T15:00:48.000Z</published>
    <updated>2019-02-07T15:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　<br><a id="more"></a></p>
<center><img src="/img/posts/20190207001-01.gif" alt="css fire"></center>


<ul>
<li>作者：Nicholas Gratton</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ngratton/pen/MZKJvr" target="_blank" rel="external">https://codepen.io/ngratton/pen/MZKJvr</a></li>
</ul>
<center><img src="/img/posts/20190207001-02.gif" alt="css fire"></center>

<ul>
<li>作者：Jhey</li>
<li>使用技术：HTML (Pug) / CSS (Stylus)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jh3y/full/WyNdMG" target="_blank" rel="external">https://codepen.io/jh3y/full/WyNdMG</a></li>
</ul>
<center><img src="/img/posts/20190207001-03.gif" alt="css fire"></center>

<ul>
<li>作者：Danny</li>
<li>使用技术：HTML (Haml) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/edanny/full/JXwgdK" target="_blank" rel="external">https://codepen.io/edanny/full/JXwgdK</a></li>
</ul>
<center><img src="/img/posts/20190207001-04.gif" alt="css fire"></center>

<ul>
<li>作者：Jaron White</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jaronwhite/full/zrmozE" target="_blank" rel="external">https://codepen.io/jaronwhite/full/zrmozE</a></li>
</ul>
<center><img src="/img/posts/20190207001-05.gif" alt="css fire"></center>

<ul>
<li>作者：Adib Behjat</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/abehjat/full/oXMENv" target="_blank" rel="external">https://codepen.io/abehjat/full/oXMENv</a></li>
</ul>
<center><img src="/img/posts/20190207001-06.gif" alt="css fire"></center>

<ul>
<li>作者：Jér?me Beau</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Javarome/pen/ogEoJM" target="_blank" rel="external">https://codepen.io/Javarome/pen/ogEoJM</a></li>
</ul>
<center><img src="/img/posts/20190207001-07.gif" alt="css fire"></center>

<ul>
<li>作者：Lucas Bebber</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/lbebber/full/xrwja" target="_blank" rel="external">https://codepen.io/lbebber/full/xrwja</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;br&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python连接数据库将查询结果转换为DataFrame(列名和表字段一致)</title>
    <link href="https://c-xuan.com/2019/01/15/20190115001_python_db_select_to_df/"/>
    <id>https://c-xuan.com/2019/01/15/20190115001_python_db_select_to_df/</id>
    <published>2019-01-15T11:47:39.000Z</published>
    <updated>2019-01-15T13:59:34.439Z</updated>
    
    <content type="html"><![CDATA[<p>很多时候，我们用Python处理数据，需要连接到Mysql、Postgresql等数据库，获取表数据，再构建pandas的DataFrame进行进一步处理。但是查询数据库结果集是没有表字段名称的，我们希望构建的DataFrame的列名和表字段一样。</p>
<a id="more"></a>
<h3 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h3><p>这里以Postgresql数据库为例，Mysql数据库差不多，其他的自行改造。</p>
<p>先封装一个查询类，查询返回的结果是一个字典，<code>head</code>是表列名,<code>data</code>是表数据，再用DataFrame构造数据结构。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> psycopg2</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">db_pg</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, host, db, user, pwd, port)</span>:</span></div><div class="line">        self.host = host</div><div class="line">        self.db = db</div><div class="line">        self.user = user</div><div class="line">        self.pwd = pwd</div><div class="line">        self.port = port</div><div class="line">        self._conn = self._connect()</div><div class="line">        self._cursor = self._conn.cursor()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_connect</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> psycopg2.connect(</div><div class="line">            database=self.db,</div><div class="line">            user=self.user,</div><div class="line">            password=self.pwd,</div><div class="line">            host=self.host,</div><div class="line">            port=self.port)</div><div class="line"></div><div class="line">			</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(self, sqlCode)</span>:</span></div><div class="line">        self.common(sqlCode)</div><div class="line">        col_names = []</div><div class="line">        result = &#123;&#125;</div><div class="line">        column_count = len(self._cursor.description)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(column_count):</div><div class="line">            desc = self._cursor.description[i]</div><div class="line">            col_names.append(desc[<span class="number">0</span>])</div><div class="line">        data = self._cursor.fetchall()</div><div class="line">        result[<span class="string">'head'</span>] = col_names</div><div class="line">        result[<span class="string">'data'</span>] = data</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></div><div class="line">        self._cursor.close()</div><div class="line">        self._conn.close()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">common</span><span class="params">(self, sqlCode)</span>:</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            self._cursor.execute(sqlCode)</div><div class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">            print(e)</div><div class="line">            self._conn.rollback()</div><div class="line">            self._cursor.execute(sqlCode)</div><div class="line">        self._conn.commit()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></div><div class="line">        self.close()</div><div class="line"></div><div class="line">		</div><div class="line">db_conn = &#123;</div><div class="line">        <span class="string">'host'</span>: <span class="string">"******"</span>,</div><div class="line">        <span class="string">'db'</span>  : <span class="string">"******"</span>,</div><div class="line">        <span class="string">'user'</span>: <span class="string">"******"</span>,</div><div class="line">        <span class="string">'pwd'</span> :<span class="string">"******"</span>,</div><div class="line">        <span class="string">'port'</span>: <span class="string">"******"</span></div><div class="line">    &#125;</div><div class="line">pg_conn = db_pg(host=db_conn[<span class="string">'host'</span>],db=db_conn[<span class="string">'db'</span>],user=db_conn[<span class="string">'user'</span>],pwd=db_conn[<span class="string">'pwd'</span>],port=db_conn[<span class="string">'port'</span>])</div><div class="line">rs            = pg_conn.select(<span class="string">"select * from test"</span>)</div><div class="line">rs_df       = pd.DataFrame(list(rs.get(<span class="string">'data'</span>)),columns=rs.get(<span class="string">'head'</span>))</div></pre></td></tr></table></figure>
<p>运行示例</p>
<center><img src="/img/posts/20190115001-01.png" alt="运行结果"></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多时候，我们用Python处理数据，需要连接到Mysql、Postgresql等数据库，获取表数据，再构建pandas的DataFrame进行进一步处理。但是查询数据库结果集是没有表字段名称的，我们希望构建的DataFrame的列名和表字段一样。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
      <category term="PostgreSQL" scheme="https://c-xuan.com/tags/PostgreSQL/"/>
    
      <category term="Mysql" scheme="https://c-xuan.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL如何实现查找节点依赖</title>
    <link href="https://c-xuan.com/2019/01/04/20190104001_graph_sql/"/>
    <id>https://c-xuan.com/2019/01/04/20190104001_graph_sql/</id>
    <published>2019-01-04T07:16:42.000Z</published>
    <updated>2019-03-20T15:51:45.798Z</updated>
    
    <content type="html"><![CDATA[<p>SQL如何运用递归查找有向无环图的节点依赖呢？</p>
<a id="more"></a>
<center><img src="/img/posts/20190104001-01.png" alt="有向无环图"></center>

<h3 id="问题是这样的"><a href="#问题是这样的" class="headerlink" title="问题是这样的"></a>问题是这样的</h3><p>例如我有以上的两个图，节点<code>b</code>的前置节点是<code>a</code>,节点<code>c</code>的前置节点是<code>b</code>和<code>d</code>，以此类推。给出一个节点，需要找出以此节点为前置节点的所有链条节点。比如给出<code>a</code>，那出来的结果就是<code>a,b,c,d,e</code>,给出<code>f</code>,那出来的结果就是<code>f,g,h,i,j,k</code>。</p>
<h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>创建表以及插入数据，多个前置节点用<code>,</code>隔开，注意，使用的是PostgreSQL数据库。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for mytest</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">"public"</span>.<span class="string">"mytest"</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> (</div><div class="line"><span class="string">"node"</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">COLLATE</span> <span class="string">"default"</span>,</div><div class="line"><span class="string">"pre_nodes"</span> <span class="built_in">varchar</span>(<span class="number">10240</span>) <span class="keyword">COLLATE</span> <span class="string">"default"</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of mytest</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'a'</span>, <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'b'</span>, <span class="string">'a'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'c'</span>, <span class="string">'b,d'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'d'</span>, <span class="string">'b'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'e'</span>, <span class="string">'c'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'f'</span>, <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'g'</span>, <span class="string">'f'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'h'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'i'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'j'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'k'</span>, <span class="string">'h,i,j'</span>);</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-02.png" alt="数据表"></center>

<h3 id="SQL创建"><a href="#SQL创建" class="headerlink" title="SQL创建"></a>SQL创建</h3><p>方法有多种，用函数或者存储过程也可以，这里使用<code>WITH</code>递归，相关信息可以百度:<code>postgresql 递归</code>。第一个<code>select</code>语句中要给出起始节点。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">WITH RECURSIVE graph_depds AS (</div><div class="line">  <span class="keyword">SELECT</span> node,pre_nodes <span class="keyword">FROM</span> mytest a <span class="keyword">WHERE</span> node = <span class="string">'f'</span></div><div class="line">  <span class="keyword">UNION</span> ALL</div><div class="line">  <span class="keyword">SELECT</span> a.node,a.pre_nodes <span class="keyword">FROM</span> mytest a, graph_depds b <span class="keyword">WHERE</span> strpos(a.pre_nodes, b.node) &gt; <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> node,pre_nodes <span class="keyword">FROM</span> graph_depds <span class="keyword">ORDER</span> <span class="keyword">BY</span> node;</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-03.png" alt="查询结果"></center>

<h3 id="如果想向前查找呢"><a href="#如果想向前查找呢" class="headerlink" title="如果想向前查找呢"></a>如果想<code>向前</code>查找呢</h3><p>上面的查找相当于找出一个节点所有<code>影响</code>到的节点，其实就是向下递归，如果给出一个节点，想从这个节点往前追溯有关的节点呢？例如给出<code>c</code>节点，结果是<code>a,b,c,d</code>,其实就是向上递归，可以像下面这样写。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">WITH RECURSIVE graph_depds AS (</div><div class="line">  <span class="keyword">SELECT</span> node,pre_nodes <span class="keyword">FROM</span> mytest a <span class="keyword">WHERE</span> node = <span class="string">'i'</span></div><div class="line">  <span class="keyword">UNION</span> ALL</div><div class="line">  <span class="keyword">SELECT</span> a.node,a.pre_nodes <span class="keyword">FROM</span> mytest a, graph_depds b <span class="keyword">WHERE</span> strpos(b.pre_nodes,a.node) &gt; <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> node,pre_nodes <span class="keyword">FROM</span> graph_depds <span class="keyword">ORDER</span> <span class="keyword">BY</span> node;</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-04.png" alt="查询结果"></center>

<h3 id="其他数据库"><a href="#其他数据库" class="headerlink" title="其他数据库"></a>其他数据库</h3><p>如果像<code>Sql Server</code>等支持<code>WITH</code>语法的数据，以上写法可以移植，稍作修改就好。但是<code>mysql</code>等数据库中的实现方式不一样，百度mysql 递归相关的内容都能找到方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL如何运用递归查找有向无环图的节点依赖呢？&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="PostgreSQL" scheme="https://c-xuan.com/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>Flask服务本机之外不能访问</title>
    <link href="https://c-xuan.com/2018/12/23/20181223001_flask_intranet_visit/"/>
    <id>https://c-xuan.com/2018/12/23/20181223001_flask_intranet_visit/</id>
    <published>2018-12-23T15:31:17.000Z</published>
    <updated>2018-12-23T15:42:01.470Z</updated>
    
    <content type="html"><![CDATA[<p>Flask 开启服务后，默认是本机访问的，使用<code>localhost:5000</code>可以访问Web服务，但是使用如<code>192.168.1.10</code>这类本机IP地址却访问不了。 </p>
<a id="more"></a>
<p>启动Falsk服务后信息如下，</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* Serving Flask app <span class="string">"app"</span> (lazy loading)</div><div class="line">* Environment: production</div><div class="line">  WARNING: Do <span class="keyword">not</span> use <span class="keyword">the</span> development server <span class="keyword">in</span> <span class="keyword">a</span> production environment.</div><div class="line">  Use <span class="keyword">a</span> production WSGI server instead.</div><div class="line">* Debug mode: <span class="keyword">on</span></div><div class="line">* Restarting <span class="keyword">with</span> stat</div><div class="line">* Debugger is active!</div><div class="line">* Debugger PIN: <span class="number">228</span><span class="number">-080</span><span class="number">-042</span></div><div class="line">* Running <span class="keyword">on</span> <span class="title">http</span>://<span class="title">127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="title">5000</span>/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</div></pre></td></tr></table></figure>
<p>除本机外是不能访问的，需要在<code>run</code>参数中设置,端口自定，主机为<code>0.0.0.0</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">5000</span>)</div></pre></td></tr></table></figure>
<p>再次启动后就可以了。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* Serving Flask app <span class="string">"app"</span> (lazy loading)</div><div class="line">* Environment: production</div><div class="line">  WARNING: Do <span class="keyword">not</span> use <span class="keyword">the</span> development server <span class="keyword">in</span> <span class="keyword">a</span> production environment.</div><div class="line">  Use <span class="keyword">a</span> production WSGI server instead.</div><div class="line">* Debug mode: <span class="keyword">on</span></div><div class="line">* Restarting <span class="keyword">with</span> stat</div><div class="line">* Debugger is active!</div><div class="line">* Debugger PIN: <span class="number">228</span><span class="number">-080</span><span class="number">-042</span></div><div class="line">* Running <span class="keyword">on</span> <span class="title">http</span>://<span class="title">0</span><span class="number">.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="title">5000</span>/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flask 开启服务后，默认是本机访问的，使用&lt;code&gt;localhost:5000&lt;/code&gt;可以访问Web服务，但是使用如&lt;code&gt;192.168.1.10&lt;/code&gt;这类本机IP地址却访问不了。 &lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="Flask" scheme="https://c-xuan.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Atom插件aligner冒号(:)对齐的问题</title>
    <link href="https://c-xuan.com/2018/12/21/20181221001_atom_aligner/"/>
    <id>https://c-xuan.com/2018/12/21/20181221001_atom_aligner/</id>
    <published>2018-12-21T15:31:17.000Z</published>
    <updated>2018-12-23T16:33:10.200Z</updated>
    
    <content type="html"><![CDATA[<p>最近在折腾Atom编辑器，写Python进行交互运行还是很方便的，代码提示什么的比Jupyter也好一些，还可以配置一堆插件，定制自己的开发环境。对于代码整齐性来说，<code>aligner</code>插件是不能错过的。</p>
<a id="more"></a>
<p><a href="https://github.com/adrianlee44/atom-aligner" target="_blank" rel="external">atom-aligner</a>是干什么的呢，就是用来对齐的，比如我们写这样一段变量赋值的程序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var_a =<span class="number">1</span> <span class="comment">#我是变量1</span></div><div class="line">b = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]<span class="comment">#我是变量2</span></div><div class="line">cccc=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)<span class="comment">#注释</span></div><div class="line">ddddddd=<span class="string">'rrrrrrrr'</span><span class="comment">#又一个注释</span></div></pre></td></tr></table></figure>
<p>虽然也没问题，但是如果能按<code>=</code>对齐就更强迫症一些。安装插件后，选中要对齐的行，按快捷键:<br>Mac: <code>ctrl-cmd-/</code> Linux/Windows: <code>ctrl-alt-/</code><br>就会变为这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var_a   = <span class="number">1</span>         <span class="comment">#我是变量1</span></div><div class="line">b       = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] <span class="comment">#我是变量2</span></div><div class="line">cccc    = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)   <span class="comment">#注释</span></div><div class="line">ddddddd = <span class="string">'rrrrrrrr'</span><span class="comment">#又一个注释</span></div></pre></td></tr></table></figure>
<p>需要注意是，只安装一个<code>atom-aligner</code>插件是不够的，得配合不同语言的另一些插件，比如我写python代码，得另外装一个<code>aligner-python</code>插件才可以。</p>
<p>如果是JSON格式的对象，也是可以按冒号:对齐的</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">obj = &#123;<span class="string">'aaa'</span>: <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>: <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>: <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]&#125;</div></pre></td></tr></table></figure>
<p>要注意的是，如果连同<code>=</code>,<code>{}</code>一起选中，按快捷键对齐是不起作用的，得写成这样：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">  <span class="string">'aaa'</span>: <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>: <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>: <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>对齐后是这样的</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line"> <span class="string">'aaa'</span>:      <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>:   <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>:     <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>所以<code>:</code>左边是不会对齐的，我们在编辑器写代码的时候一般都会左对齐了，像这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">    <span class="string">'aaa'</span>:   <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>:   <span class="string">'terdff'</span>,</div><div class="line">    <span class="string">'ccc'</span>:   <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>有个问题是，官方的说明里说是可以冒号对齐的，对齐成这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">    <span class="string">'aaa'</span>  : <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>  : <span class="string">'terdff'</span>,</div><div class="line">    <span class="string">'ccc'</span>  : <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>插件设置中没有找到相关设置，官方说明看了半天也没找到怎么设置，最后无奈改了插件的源码。</p>
<p>进入插件设置</p>
<center><img src="/img/posts/20181221001-01.gif" alt=""></center>

<p>找到插件包配置，修改默认为<code>left</code></p>
<center><img src="/img/posts/20181221001-02.gif" alt=""></center>

<p>重启编辑器就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在折腾Atom编辑器，写Python进行交互运行还是很方便的，代码提示什么的比Jupyter也好一些，还可以配置一堆插件，定制自己的开发环境。对于代码整齐性来说，&lt;code&gt;aligner&lt;/code&gt;插件是不能错过的。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Atom" scheme="https://c-xuan.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>Html中使用CSS制作火焰燃烧动画</title>
    <link href="https://c-xuan.com/2018/11/24/20181124001_css_fire/"/>
    <id>https://c-xuan.com/2018/11/24/20181124001_css_fire/</id>
    <published>2018-11-24T11:16:42.000Z</published>
    <updated>2018-11-24T11:16:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　<br><a id="more"></a></p>
<center><img src="/img/posts/20181124001-01.gif" alt="css fire"></center>

<ul>
<li>作者：Chalda Pnuzig</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/chalda/pen/wRJYmz" target="_blank" rel="external">https://codepen.io/chalda/pen/wRJYmz</a></li>
</ul>
<center><img src="/img/posts/20181124001-02.gif" alt="css fire"></center>

<ul>
<li>作者：Jamie Coulter</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jcoulterdesign/pen/yGgxOY" target="_blank" rel="external">https://codepen.io/jcoulterdesign/pen/yGgxOY</a></li>
</ul>
<center><img src="/img/posts/20181124001-03.gif" alt="css fire"></center>

<ul>
<li>作者：Ivan Grozdic</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：bootstrap.css, jquery.js, popper.js, bootstrap.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ig_design/pen/NeRxzj" target="_blank" rel="external">https://codepen.io/ig_design/pen/NeRxzj</a></li>
</ul>
<center><img src="/img/posts/20181124001-04.gif" alt="css fire"></center>

<ul>
<li>作者：Jon Kantner</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jkantner/pen/gKRKKb" target="_blank" rel="external">https://codepen.io/jkantner/pen/gKRKKb</a></li>
</ul>
<center><img src="/img/posts/20181124001-05.gif" alt="css fire"></center>

<ul>
<li>作者：Yusuke Nakaya</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/YusukeNakaya/pen/vJKwZw" target="_blank" rel="external">https://codepen.io/YusukeNakaya/pen/vJKwZw</a></li>
</ul>
<center><img src="/img/posts/20181124001-06.gif" alt="css fire"></center>

<ul>
<li>作者：Satrio Yamanda</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/yamanda/pen/RpNMaY" target="_blank" rel="external">https://codepen.io/yamanda/pen/RpNMaY</a></li>
</ul>
<center><img src="/img/posts/20181124001-07.gif" alt="css fire"></center>

<ul>
<li>作者：Tahina</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/tahina/pen/WRXNwQ" target="_blank" rel="external">https://codepen.io/tahina/pen/WRXNwQ</a></li>
</ul>
<center><img src="/img/posts/20181124001-08.gif" alt="css fire"></center>

<ul>
<li>作者：Zed Dash</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/z-/pen/JXVpgp" target="_blank" rel="external">https://codepen.io/z-/pen/JXVpgp</a></li>
</ul>
<center><img src="/img/posts/20181124001-09.gif" alt="css fire"></center>

<ul>
<li>作者：Deepak K Vijayan</li>
<li>使用技术：HTML (Haml) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/BrianBravo/pen/JaFfz" target="_blank" rel="external">https://codepen.io/BrianBravo/pen/JaFfz</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;br&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>有趣的403页面设计</title>
    <link href="https://c-xuan.com/2018/11/18/20181118001_403_pages/"/>
    <id>https://c-xuan.com/2018/11/18/20181118001_403_pages/</id>
    <published>2018-11-18T11:16:42.000Z</published>
    <updated>2019-01-22T13:59:08.580Z</updated>
    
    <content type="html"><![CDATA[<p>在访问网站的时候，会时不时的出现403 Forbidden错误，浏览器会给出403 Forbidden错误提示，在打开Access Error中列出的URL之后, 出现以下错误：</p>
<blockquote>
<p>403 Forbidden<br> Access to this resource on the server is denied!<br> Powered By LiteSpeed Web Server<br> LiteSpeed Technologies is not responsible for administration and contents of this web site!</p>
</blockquote>
<a id="more"></a>
<h3 id="403状态码"><a href="#403状态码" class="headerlink" title="403状态码"></a>403状态码</h3><p>403错误是网站访问过程中，常见的错误提示。资源不可用，服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致，比如IIS或者apache设置了访问权限不当。</p>
<p>下面看一些有意思的403页面设计，撇开实不实用，能看见几回等等等，，，专注于设计。</p>
<center><img src="/img/posts/20181118001-01.gif" alt="404page"></center>

<ul>
<li>作者：Mansoour</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Mansoour/pen/LgGGvm" target="_blank" rel="external">https://codepen.io/Mansoour/pen/LgGGvm</a></li>
</ul>
<center><img src="/img/posts/20181118001-02.gif" alt="404page"></center>

<ul>
<li>作者：lsgrrd</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/lsgrrd/pen/BObbYY" target="_blank" rel="external">https://codepen.io/lsgrrd/pen/BObbYY</a></li>
</ul>
<center><img src="/img/posts/20181118001-03.gif" alt="404page"></center>

<ul>
<li>作者：ycw</li>
<li>使用技术：HTML (Pug) / CSS (Less)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ycw/pen/BObmJr" target="_blank" rel="external">https://codepen.io/ycw/pen/BObmJr</a></li>
</ul>
<center><img src="/img/posts/20181118001-04.gif" alt="404page"></center>

<ul>
<li>作者：Aimie | Blissful Lemon</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ablissfullemon/pen/zJepap" target="_blank" rel="external">https://codepen.io/ablissfullemon/pen/zJepap</a></li>
</ul>
<center><img src="/img/posts/20181118001-05.gif" alt="404page"></center>

<ul>
<li>作者：Sean B</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Chesswithsean/pen/ZMwagQ" target="_blank" rel="external">https://codepen.io/Chesswithsean/pen/ZMwagQ</a></li>
</ul>
<center><img src="/img/posts/20181118001-06.png" alt="404page"></center>

<ul>
<li>作者：Blessing Oni</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/blecaf/pen/EervOE" target="_blank" rel="external">https://codepen.io/blecaf/pen/EervOE</a></li>
</ul>
<center><img src="/img/posts/20181118001-07.gif" alt="404page"></center>

<ul>
<li>作者：Arturo Wibawa</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/artcoholic/pen/ZMVNMw" target="_blank" rel="external">https://codepen.io/artcoholic/pen/ZMVNMw</a></li>
</ul>
<center><img src="/img/posts/20181118001-08.png" alt="404page"></center>

<ul>
<li>作者：Leena Lavanya</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/leenalavanya/pen/RYqvgK" target="_blank" rel="external">https://codepen.io/leenalavanya/pen/RYqvgK</a></li>
</ul>
<center><img src="/img/posts/20181118001-09.gif" alt="404page"></center>

<ul>
<li>作者：Cassidy Williams</li>
<li>使用技术：HTML (Haml) / CSS (Less)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/cassidoo/pen/rZQQrj" target="_blank" rel="external">https://codepen.io/cassidoo/pen/rZQQrj</a></li>
</ul>
<center><img src="/img/posts/20181118001-10.gif" alt="404page"></center>

<ul>
<li>作者：creme</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：jquery.js, tweenmax.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/creme/pen/VGVpbJ" target="_blank" rel="external">https://codepen.io/creme/pen/VGVpbJ</a></li>
</ul>
<center><img src="/img/posts/20181118001-11.gif" alt="404page"></center>

<ul>
<li>作者：Mariana</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/marianab/pen/EedpEb" target="_blank" rel="external">https://codepen.io/marianab/pen/EedpEb</a></li>
</ul>
<center><img src="/img/posts/20181118001-12.png" alt="404page"></center>

<ul>
<li>作者：A van Hagen</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/anjanas_dh/pen/ZMqKwb" target="_blank" rel="external">https://codepen.io/anjanas_dh/pen/ZMqKwb</a></li>
</ul>
<center><img src="/img/posts/20181118001-13.gif" alt="404page"></center>

<ul>
<li>作者：Nuuou</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript (Babel)</li>
<li>依赖库：bootstrap-reboot.css, tweenmax.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Nuuou/pen/GXYmJv" target="_blank" rel="external">https://codepen.io/Nuuou/pen/GXYmJv</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在访问网站的时候，会时不时的出现403 Forbidden错误，浏览器会给出403 Forbidden错误提示，在打开Access Error中列出的URL之后, 出现以下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;403 Forbidden&lt;br&gt; Access to this resource on the server is denied!&lt;br&gt; Powered By LiteSpeed Web Server&lt;br&gt; LiteSpeed Technologies is not responsible for administration and contents of this web site!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>有趣的404页面设计</title>
    <link href="https://c-xuan.com/2018/11/14/20181114001_404_pages/"/>
    <id>https://c-xuan.com/2018/11/14/20181114001_404_pages/</id>
    <published>2018-11-14T11:16:42.000Z</published>
    <updated>2019-03-20T15:49:58.984Z</updated>
    
    <content type="html"><![CDATA[<p>　　<br><a id="more"></a></p>
<center><img src="/img/posts/20181114001-01.gif" alt="404page"></center>

<ul>
<li>作者：Andrew Hani</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/androhani/pen/deOpMZ" target="_blank" rel="external">https://codepen.io/androhani/pen/deOpMZ</a></li>
</ul>
<center><img src="/img/posts/20181114001-02.gif" alt="404page"></center>

<ul>
<li>作者：Saleh Riaz Qureshi</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/salehriaz/pen/erJrZM" target="_blank" rel="external">https://codepen.io/salehriaz/pen/erJrZM</a></li>
</ul>
<center><img src="/img/posts/20181114001-03.gif" alt="404page"></center>

<ul>
<li>作者：Vincent Van Goggles</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Gogh/pen/eeReMO" target="_blank" rel="external">https://codepen.io/Gogh/pen/eeReMO</a></li>
</ul>
<center><img src="/img/posts/20181114001-04.gif" alt="404page"></center>

<ul>
<li>作者：Selcuk Cura</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：jquery.js, tweenmax.js, splittext.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/selcukcura/pen/XeQpEv" target="_blank" rel="external">https://codepen.io/selcukcura/pen/XeQpEv</a></li>
</ul>
<center><img src="/img/posts/20181114001-05.gif" alt="404page"></center>

<ul>
<li>作者：Robin Selmer</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/robinselmer/pen/vJjbOZ" target="_blank" rel="external">https://codepen.io/robinselmer/pen/vJjbOZ</a></li>
</ul>
<center><img src="/img/posts/20181114001-06.gif" alt="404page"></center>

<ul>
<li>作者：Clement Girault</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/clementGir/pen/PqGyMq" target="_blank" rel="external">https://codepen.io/clementGir/pen/PqGyMq</a></li>
</ul>
<center><img src="/img/posts/20181114001-07.gif" alt="404page"></center>

<ul>
<li>作者：john</li>
<li>使用技术：HTML / CSS (Less) / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/thejohnyagiz/pen/npDyq" target="_blank" rel="external">https://codepen.io/thejohnyagiz/pen/npDyq</a></li>
</ul>
<center><img src="/img/posts/20181114001-08.gif" alt="404page"></center>

<ul>
<li>作者：gavra</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/gavra/pen/upHzg" target="_blank" rel="external">https://codepen.io/gavra/pen/upHzg</a></li>
</ul>
<center><img src="/img/posts/20181114001-09.png" alt="404page"></center>

<ul>
<li>作者：Ian Gloude</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/igloude/pen/qNNWKr" target="_blank" rel="external">https://codepen.io/igloude/pen/qNNWKr</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　&lt;br&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Aqua Data Studio 执行HiveSql的问题</title>
    <link href="https://c-xuan.com/2018/07/26/20180726001_aqua_hive_go/"/>
    <id>https://c-xuan.com/2018/07/26/20180726001_aqua_hive_go/</id>
    <published>2018-07-26T03:15:01.000Z</published>
    <updated>2018-07-26T03:15:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>连接Hive的客户端有很多，<strong>Aqua Data Studio</strong>是不错的一个，之前用过DbVisualizer，多个Sql语句都是用<code>;</code>结束的，运行没问题，但是到了Aqua里就报错了：</p>
<figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;[Error] Script lines: <span class="number">1</span>-<span class="number">1</span> --------------------------</div><div class="line"> Error while compiling statement: FAILED: ParseException line <span class="number">1</span>:<span class="number">19</span> </div><div class="line"> cannot recognize input near 'agent' ';' '&lt;EOF&gt;' <span class="keyword">in</span> from source</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Aqua-Data-Studio简介"><a href="#Aqua-Data-Studio简介" class="headerlink" title="Aqua Data Studio简介"></a>Aqua Data Studio简介</h3><blockquote>
<p>Aqua Data Studio是一套完整IDE的数据库开发工具，拥有数据库查询、管理、比对和源码控制等功能，可用于创建、编辑和执行SQL的管理工具脚本编写，以及浏览和修改数据库内容，支持大多数常见的数据库，如Oracle，MySQL，MSSQL，Vertica，Hadoop，Impala等，为所有数据库提供了一个统一界面的平台，让使用者或开发者在一个应用程序中能同时处理多个任务。</p>
</blockquote>
<h3 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h3><ul>
<li>Aqua Data Studio 18.0.18</li>
<li>JDK 1.8</li>
<li>Windows 7</li>
</ul>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>问题解决比较简单，菜单<code>File-&gt;Options</code>,在弹出的设置窗口总的搜索里搜索<code>Hive</code>,结果中的<code>Scripts</code>下的<code>Apache Hive</code>里面，勾选<code>;Statement Separator</code>即可。</p>
<p><img src="/img/posts/20180726001-01.png" alt="20180726001-01"></p>
<p>其实如果不设置这个选项，默认情况下如何在查询窗口执行多条语句而不报错呢？每条语句用<code>GO</code>隔开就可以了，例如：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1</div><div class="line"><span class="keyword">go</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb2</div></pre></td></tr></table></figure>
<p><strong>DbVisualizer</strong> 也是一个不错的工具，可以试用下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;连接Hive的客户端有很多，&lt;strong&gt;Aqua Data Studio&lt;/strong&gt;是不错的一个，之前用过DbVisualizer，多个Sql语句都是用&lt;code&gt;;&lt;/code&gt;结束的，运行没问题，但是到了Aqua里就报错了：&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;[Error] Script lines: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Error while compiling statement: FAILED: ParseException line &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; cannot recognize input near &#39;agent&#39; &#39;;&#39; &#39;&amp;lt;EOF&amp;gt;&#39; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; from source&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hive" scheme="https://c-xuan.com/tags/Hive/"/>
    
      <category term="工具" scheme="https://c-xuan.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>【Hive】日期从整形转为Date类型</title>
    <link href="https://c-xuan.com/2018/07/24/20180724001_hive_date_trans/"/>
    <id>https://c-xuan.com/2018/07/24/20180724001_hive_date_trans/</id>
    <published>2018-07-24T08:15:01.000Z</published>
    <updated>2018-07-24T08:15:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>在建表的时候我们常将日期字段设置为INT类型，将诸如<code>20180601</code>这样的数字值来表示日期，这样在做日期比较等操作时没有问题，但是要进行某些日期计算，就要先转成日期类型才能进行计算了，怎么转换呢？</p>
<a id="more"></a>
<h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>下面在Hive中先建一个表，含有一个INT类型的日期字段，插入两行数据。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb (dt <span class="built_in">INT</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span> (<span class="number">20180701</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span> (<span class="number">20180715</span>);</div></pre></td></tr></table></figure>
<h3 id="转换类型"><a href="#转换类型" class="headerlink" title="转换类型"></a>转换类型</h3><p>这里第一种方法是将<code>INT</code>类型的日期值转成<code>STRING</code>类型，用Hive内置的<code>unix_timestamp</code>函数转成时间戳类型，最后将时间戳用<code>from_unixtime</code>转成<code>yyyy-MM-dd</code>的日期类型。</p>
<p>第二种就比较直接，将<code>INT</code>类型的日期值转成<code>STRING</code>类型，再对字符串进行截取处理，用<code>-</code>拼接起来。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> dt,</div><div class="line">from_unixtime(<span class="keyword">unix_timestamp</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="string">'yyyyMMdd'</span>),<span class="string">'yyyy-MM-dd'</span>) <span class="keyword">as</span> a,</div><div class="line"><span class="keyword">concat</span>(<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">1</span>,<span class="number">4</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">5</span>,<span class="number">2</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">7</span>,<span class="number">2</span>)) <span class="keyword">as</span> b</div><div class="line"><span class="keyword">from</span> tb;</div></pre></td></tr></table></figure>
<p>运行结果</p>
<table>
<thead>
<tr>
<th>dt</th>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>20180701</td>
<td>2018-07-01</td>
<td>2018-07-01</td>
</tr>
<tr>
<td>20180715</td>
<td>2018-07-15</td>
<td>2018-07-15</td>
</tr>
</tbody>
</table>
<p>当然，每次都这样写有些费劲，可以在Hive中创建UDF或者宏，转换时进行调用就好了。</p>
<h3 id="创建宏命令"><a href="#创建宏命令" class="headerlink" title="创建宏命令"></a>创建宏命令</h3><p>宏命令相对于UDF要简单方便些，但是<strong>宏只能是临时宏，只在本次会话中可见、有效。因此你需要将宏脚本放在SQL脚本的头部</strong>。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TEMPORARY</span> MACRO <span class="keyword">IF</span> <span class="keyword">EXISTS</span> date_trans;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> MACRO date_trans(dt <span class="built_in">int</span>)</div><div class="line">    <span class="keyword">if</span>(dt <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> <span class="keyword">length</span>(dt)=<span class="number">8</span>,</div><div class="line">       <span class="keyword">concat</span>(<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">1</span>,<span class="number">4</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">5</span>,<span class="number">2</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">7</span>,<span class="number">2</span>)), </div><div class="line">	   <span class="literal">null</span>);</div><div class="line"></div><div class="line"><span class="comment">--调用</span></div><div class="line"><span class="keyword">select</span> dt,date_trans(dt) <span class="keyword">as</span> a <span class="keyword">from</span> tb;</div></pre></td></tr></table></figure>
<p>如果同一个功能的函数或宏命令被多次调用，那维护起来就很方便，语句也简洁很多。</p>
<h3 id="Hive内置日期函数一览"><a href="#Hive内置日期函数一览" class="headerlink" title="Hive内置日期函数一览"></a>Hive内置日期函数一览</h3><table><tr><th width="9.51%">Return Type</th><th width="21.33%">Name(Signature)</th><th width="34.03%">Description</th><th width="35.19%">说明</th></tr><tr><td>string</td><td>from_unixtime(bigint unixtime[, string format])</td><td>Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string representing the timestamp of that moment in the current system time zone in the format of “1970-01-01 00:00:00”.</td><td>将时间的秒值转换成format格式（format可为“yyyy-MM-dd hh:mm:ss”,“yyyy-MM-dd hh”,“yyyy-MM-dd hh:mm”等等）如from_unixtime(1250111000,”yyyy-MM-dd”) 得到2009-03-12</td></tr><tr><td>bigint</td><td>unix_timestamp()</td><td>Gets current Unix timestamp in seconds.</td><td>获取本地时区下的时间戳</td></tr><tr><td>bigint</td><td>unix_timestamp(string date)</td><td>Converts time string in format?yyyy-MM-dd HH:mm:ss?to Unix timestamp (in seconds), using the default timezone and the default locale, return 0 if fail: unix_timestamp(‘2009-03-20 11:30:01’) = 1237573801</td><td>将格式为yyyy-MM-dd HH:mm:ss的时间字符串转换成时间戳 ?如unix_timestamp(‘2009-03-20 11:30:01’) = 1237573801</td></tr><tr><td>bigint</td><td>unix_timestamp(string date, string pattern)</td><td>Convert time string with given pattern (see [<a href="http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html" target="_blank" rel="external">http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html</a>]) to Unix time stamp (in seconds), return 0 if fail: unix_timestamp(‘2009-03-20’, ‘yyyy-MM-dd’) = 1237532400.</td><td>将指定时间字符串格式字符串转换成Unix时间戳，如果格式不对返回0 如：unix_timestamp(‘2009-03-20’, ‘yyyy-MM-dd’) = 1237532400</td></tr><tr><td>string</td><td>to_date(string timestamp)</td><td>Returns the date part of a timestamp string: to_date(“1970-01-01 00:00:00”) = “1970-01-01”.</td><td>返回时间字符串的日期部分</td></tr><tr><td>int</td><td>year(string date)</td><td>Returns the year part of a date or a timestamp string: year(“1970-01-01 00:00:00”) = 1970, year(“1970-01-01”) = 1970.</td><td>返回时间字符串的年份部分</td></tr><tr><td>int</td><td>quarter(date/timestamp/string)</td><td>Returns the quarter of the year for a date, timestamp, or string in the range 1 to 4 (as of Hive?1.3.0). Example: quarter(‘2015-04-08’) = 2.</td><td>返回当前时间属性哪个季度 如quarter(‘2015-04-08’) = 2</td></tr><tr><td>int</td><td>month(string date)</td><td>Returns the month part of a date or a timestamp string: month(“1970-11-01 00:00:00”) = 11, month(“1970-11-01”) = 11.</td><td>返回时间字符串的月份部分</td></tr><tr><td>int</td><td>day(string date) dayofmonth(date)</td><td>Returns the day part of a date or a timestamp string: day(“1970-11-01 00:00:00”) = 1, day(“1970-11-01”) = 1.</td><td>返回时间字符串的天</td></tr><tr><td>int</td><td>hour(string date)</td><td>Returns the hour of the timestamp: hour(‘2009-07-30 12:58:59’) = 12, hour(‘12:58:59’) = 12.</td><td>返回时间字符串的小时</td></tr><tr><td>int</td><td>minute(string date)</td><td>Returns the minute of the timestamp.</td><td>返回时间字符串的分钟</td></tr><tr><td>int</td><td>second(string date)</td><td>Returns the second of the timestamp.</td><td>返回时间字符串的秒</td></tr><tr><td>int</td><td>weekofyear(string date)</td><td>Returns the week number of a timestamp string: weekofyear(“1970-11-01 00:00:00”) = 44, weekofyear(“1970-11-01”) = 44.</td><td>返回时间字符串位于一年中的第几个周内 ?如weekofyear(“1970-11-01 00:00:00”) = 44, weekofyear(“1970-11-01”) = 44</td></tr><tr><td>int</td><td>datediff(string enddate, string startdate)</td><td>Returns the number of days from startdate to enddate: datediff(‘2009-03-01’, ‘2009-02-27’) = 2.</td><td>计算开始时间startdate到结束时间enddate相差的天数</td></tr><tr><td>string</td><td>date_add(string startdate, int days)</td><td>Adds a number of days to startdate: date_add(‘2008-12-31’, 1) = ‘2009-01-01’.</td><td>从开始时间startdate加上days</td></tr><tr><td>string</td><td>date_sub(string startdate, int days)</td><td>Subtracts a number of days to startdate: date_sub(‘2008-12-31’, 1) = ‘2008-12-30’.</td><td>从开始时间startdate减去days</td></tr><tr><td>timestamp</td><td>from_utc_timestamp(timestamp, string timezone)</td><td>Assumes given timestamp is UTC and converts to given timezone (as of Hive?0.8.0). For example, from_utc_timestamp(‘1970-01-01 08:00:00’,’PST’) returns 1970-01-01 00:00:00.</td><td>如果给定的时间戳并非UTC，则将其转化成指定的时区下时间戳</td></tr><tr><td>timestamp</td><td>to_utc_timestamp(timestamp, string timezone)</td><td>Assumes given timestamp is in given timezone and converts to UTC (as of Hive?0.8.0). For example, to_utc_timestamp(‘1970-01-01 00:00:00’,’PST’) returns 1970-01-01 08:00:00.</td><td>如果给定的时间戳指定的时区下时间戳，则将其转化成UTC下的时间戳</td></tr><tr><td>date</td><td>current_date</td><td>Returns the current date at the start of query evaluation (as of Hive?1.2.0). All calls of current_date within the same query return the same value.</td><td>返回当前时间日期</td></tr><tr><td>timestamp</td><td>current_timestamp</td><td>Returns the current timestamp at the start of query evaluation?(as of Hive?1.2.0). All calls of current_timestamp within the same query return the same value.</td><td>返回当前时间戳</td></tr><tr><td>string</td><td>add_months(string start_date, int num_months)</td><td>Returns the date that is num_months after start_date?(as of Hive?1.1.0). start_date is a string, date or timestamp. num_months is an integer. The time part of start_date is ignored.?If start_date is the last day of the month or if the resulting month has fewer days than the day component of start_date, then the result is the last day of the resulting month. Otherwise, the result has the same day component as start_date.</td><td>返回当前时间下再增加num_months个月的日期</td></tr><tr><td>string</td><td>last_day(string date)</td><td>Returns the last day of the month which the date belongs to?(as of Hive?1.1.0). date is a string in the format ‘yyyy-MM-dd HH:mm:ss’ or ‘yyyy-MM-dd’.?The time part of date is ignored.</td><td>返回这个月的最后一天的日期，忽略时分秒部分（HH:mm:ss）</td></tr><tr><td>string</td><td>next_day(string start_date, string day_of_week)</td><td>Returns the first date which is later than start_date and named as day_of_week?(as of Hive1.2.0).?start_date is a string/date/timestamp. day_of_week is 2 letters, 3 letters or full name of the day of the week (e.g. Mo, tue, FRIDAY). The time part of start_date is ignored. Example: next_day(‘2015-01-14’, ‘TU’) = 2015-01-20.</td><td>返回当前时间的下一个星期X所对应的日期 如：next_day(‘2015-01-14’, ‘TU’) = 2015-01-20 ?以2015-01-14为开始时间，其下一个星期二所对应的日期为2015-01-20</td></tr><tr><td>string</td><td>trunc(string date, string format)</td><td>Returns date truncated to the unit specified by the format?(as of Hive?1.2.0). Supported formats: MONTH/MON/MM, YEAR/YYYY/YY. Example: trunc(‘2015-03-17’, ‘MM’) = 2015-03-01.</td><td>返回时间的最开始年份或月份 ?如trunc(“2016-06-26”,“MM”)=2016-06-01 ?trunc(“2016-06-26”,“YY”)=2016-01-01 ? 注意所支持的格式为MONTH/MON/MM, YEAR/YYYY/YY</td></tr><tr><td>double</td><td>months_between(date1, date2)</td><td>Returns number of months between dates date1 and date2 (as of Hive?1.2.0). If date1 is later than date2, then the result is positive. If date1 is earlier than date2, then the result is negative. If date1 and date2 are either the same days of the month or both last days of months, then the result is always an integer. Otherwise the UDF calculates the fractional portion of the result based on a 31-day month and considers the difference in time components date1 and date2. date1 and date2 type can be date, timestamp or string in the format ‘yyyy-MM-dd’ or ‘yyyy-MM-dd HH:mm:ss’. The result is rounded to 8 decimal places. Example: months_between(‘1997-02-28 10:30:00’, ‘1996-10-30’) = 3.94959677</td><td>返回date1与date2之间相差的月份，如date1&gt;date2，则返回正，如果date1<date2,则返回负，否则返回0.0 ?如：months_between('1997-02-28="" 10:30:00',="" '1996-10-30')="3.94959677" ?1997-02-28="" 10:30:00与1996-10-30相差3.94959677个月<="" td=""></date2,则返回负，否则返回0.0></td></tr><tr><td>string</td><td>date_format(date/timestamp/string ts, string fmt)</td><td>Converts a date/timestamp/string to a value of string in the format specified by the date format fmt (as of Hive?1.2.0). Supported formats are Java SimpleDateFormat formats?–<a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" target="_blank" rel="external">https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html</a>. The second argument fmt should be constant. Example: date_format(‘2015-04-08’, ‘y’) = ‘2015’.date_format can be used to implement other UDFs, e.g.:dayname(date) is date_format(date, ‘EEEE’)<br>dayofyear(date) is date_format(date, ‘D’)</td><td>按指定格式返回时间date 如：date_format(“2016-06-22”,”MM-dd”)=06-22</td></tr></table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在建表的时候我们常将日期字段设置为INT类型，将诸如&lt;code&gt;20180601&lt;/code&gt;这样的数字值来表示日期，这样在做日期比较等操作时没有问题，但是要进行某些日期计算，就要先转成日期类型才能进行计算了，怎么转换呢？&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hive" scheme="https://c-xuan.com/tags/Hive/"/>
    
      <category term="数据仓库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>有用的JScript代码整理</title>
    <link href="https://c-xuan.com/2018/06/02/20180602001_jscript/"/>
    <id>https://c-xuan.com/2018/06/02/20180602001_jscript/</id>
    <published>2018-06-02T07:16:06.000Z</published>
    <updated>2018-06-02T07:16:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>JScript并不是我们熟知的JavaScript，但是跟JavaScript很像，如果要在Windows环境中做一些自动化工作，比直接写BAT批处理脚本要简单些。</p>
<blockquote>
<p>JScript是由微软公司开发的活动脚本语言，是微软对ECMAScript规范的实现。JScript最初是随Internet Explorer 3.0于1996年8月发布。在网络程序员谈论Internet Explorer中的JavaScript的时候，他们实际上是指JScript。和其他活动脚本一样，它后来也被Windows Script Host（WSH）和Active Server Pages所支持。典型的JScript源文件使用的扩展名是.js。JScript最新的版本是基于尚未定稿的ECMAScript4.0版规范的JScript .NET，并且可以在微软的.Net环境下编译。JScript在ECMA的规范上增加了许多特性。      ——百度百科</p>
</blockquote>
<a id="more"></a>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>测试环境：Windows 10 专业版</p>
<p>测试文件夹目录结构如下:<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">testfolder</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">test</span><span class="string">.</span><span class="comment">bat</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">test</span><span class="string">.</span><span class="comment">js</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span><span class="string">.</span><span class="comment">1</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span><span class="string">.</span><span class="comment">2</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">a</span><span class="string">.</span><span class="comment">txt</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">b</span><span class="string">.</span><span class="comment">txt</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">c</span><span class="string">.</span><span class="comment">txt</span></div></pre></td></tr></table></figure></p>
<p>test.bat是批处理文件，测试的时候直接点击这个文件运行，该文件内容如下：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">@rem </span></div><div class="line"><span class="comment">@rem </span></div><div class="line"><span class="comment">@rem 我是注释</span></div><div class="line"><span class="comment">@rem </span></div><div class="line"></div><div class="line">cscript ./test.js</div><div class="line"></div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>test.js文件是具体放JScript代码的地方，将下列功能的代码放在这里。</p>
<p><strong> 特别注意：中文系统下，将所有文件的编码格式改为GB2312，否则有乱码导致程序存在中文时有异常。</strong></p>
<h3 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*******************************************</span></div><div class="line">*遍历所有子文件夹</div><div class="line">*******************************************/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> folers = GetFolderList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !folers.atEnd(); folers.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> folderName = folers.item();</div><div class="line">	WScript.Echo(<span class="string">"文件夹名称："</span>+folderName.Name);</div><div class="line">	WScript.Echo(<span class="string">"文件夹路径："</span>+folderName);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*******************************************</span></div><div class="line">*获取指定路径文件夹下的所有子文件夹</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:子文件夹集合</div><div class="line">*******************************************/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFolderList</span>(<span class="params">folderspec</span>)</span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">var</span> fso, f, fc;</div><div class="line">   fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">   f = fso.GetFolder(folderspec);</div><div class="line">   fc = <span class="keyword">new</span> Enumerator(f.SubFolders);</div><div class="line">   <span class="keyword">return</span>(fc);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">文件夹名称：folder1.1</div><div class="line">文件夹路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\f</span>older1.1</div><div class="line">文件夹名称：folder1.2</div><div class="line">文件夹路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\f</span>older1.2</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="遍历所有文件"><a href="#遍历所有文件" class="headerlink" title="遍历所有文件"></a>遍历所有文件</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*遍历所有文件</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> files = GetFolderFileList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !files.atEnd(); files.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> fileName = files.item();</div><div class="line">	WScript.Echo(<span class="string">"文件名称："</span>+fileName.Name);</div><div class="line">	WScript.Echo(<span class="string">"文件路径："</span>+fileName);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取指定文件夹路径下的所有文件</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:文件夹下的文件集合</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFolderFileList(folderspec)</div><div class="line">&#123;   </div><div class="line">    <span class="keyword">var</span> fso, folder, files;</div><div class="line">    fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">    folder = fso.GetFolder(folderspec);</div><div class="line">    files = <span class="keyword">new</span> Enumerator(folder.files);</div><div class="line">    <span class="keyword">return</span> files;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">文件名称：a.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\a</span>.txt</div><div class="line">文件名称：b.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\b</span>.txt</div><div class="line">文件名称：c.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\c</span>.txt</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="获取文件MD5值"><a href="#获取文件MD5值" class="headerlink" title="获取文件MD5值"></a>获取文件MD5值</h3><p>有时候需要找出修改的文件，对比文件MD5值是有用的，耗时看文件大小，文件太大时间可能很长。</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*遍历所有文件，获取文件MD5值</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> files = GetFolderFileList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !files.atEnd(); files.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> fileName = files.item();</div><div class="line">	WScript.Echo(fileName.Name+<span class="string">"的MD5值："</span>+GetFileMD5(fileName));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取指定文件夹路径下的所有文件</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:文件夹下的文件集合</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFolderFileList(folderspec)</div><div class="line">&#123;   </div><div class="line">    <span class="keyword">var</span> fso, folder, files;</div><div class="line">    fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">    folder = fso.GetFolder(folderspec);</div><div class="line">    files = <span class="keyword">new</span> Enumerator(folder.files);</div><div class="line">    <span class="keyword">return</span> files;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取文件MD5值</div><div class="line">*@filePath:脚本文件绝对路径</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFileMD5(filePath)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> objShell = <span class="keyword">new</span> ActiveXObject(<span class="string">"WScript.Shell"</span>);</div><div class="line">	<span class="keyword">var</span> iReturnMsg = objShell.Exec(<span class="string">"cmd.exe /c certutil -hashfile \""</span>+filePath+<span class="string">"\" MD5"</span>);</div><div class="line">	<span class="keyword">var</span> result = iReturnMsg.StdOut.ReadAll();</div><div class="line">	<span class="keyword">var</span> splitArr = result.split(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">var</span> fileMD5 = splitArr[<span class="number">1</span>].replace(/\s/g,<span class="string">""</span>);</div><div class="line">	<span class="keyword">return</span> fileMD5;</div><div class="line">	<span class="comment">//WScript.Echo(fileMD5);</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">a.txt的MD5值：22d42eb002cefa81e9ad604ea57bc01d</div><div class="line">b.txt的MD5值：1efc98f0102b2109fb90307e6e1c484e</div><div class="line">c.txt的MD5值：ba2ee8e2ba48e6667dca8c83dab38f4c</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="创建Excel文件"><a href="#创建Excel文件" class="headerlink" title="创建Excel文件"></a>创建Excel文件</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">CreateExcelFile(<span class="string">"./texcel.xlsx"</span>,<span class="number">3</span>);</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*创建Excel文件</div><div class="line">*@filePathName:文件路径，相对路径或绝对路径</div><div class="line">*@sheetCount:Excel中Sheet的个数</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function CreateExcelFile(filePathName,sheetCount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		<span class="keyword">var</span> ExcelApp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Excel.Application"</span>);</div><div class="line">		<span class="keyword">var</span> WshShell = WScript.CreateObject (<span class="string">"WScript.Shell"</span>);</div><div class="line">		<span class="keyword">var</span> currentPath = WshShell.CurrentDirectory;</div><div class="line">		<span class="keyword">var</span> i;</div><div class="line">		</div><div class="line">		ExcelApp.Visible = <span class="keyword">false</span>;</div><div class="line">		ExcelApp.DisplayAlerts = <span class="keyword">false</span>;</div><div class="line">		<span class="keyword">var</span> ExcelBook = ExcelApp.Workbooks.Add;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;sheetCount;++i)</div><div class="line">		&#123;</div><div class="line">			ExcelBook.Worksheets.Add;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (filePathName.indexOf(<span class="string">"."</span>) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			currentPath = currentPath + filePathName.slice(<span class="number">1</span>);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			currentPath = filePathName;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		currentPath = currentPath.replace(/\<span class="comment">//g,"\\");</span></div><div class="line">		<span class="comment">//currentPath = currentPath.replace(/\\/g,"\\\\"); 路径在变量中不用转义</span></div><div class="line"></div><div class="line">		<span class="comment">//保存表格</span></div><div class="line">		ExcelBook.SaveAs(currentPath);</div><div class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</div><div class="line">		WScript.Echo(<span class="string">"发生异常："</span>+e);</div><div class="line">	&#125;<span class="keyword">finally</span>&#123;</div><div class="line">		<span class="comment">//用 Application 对象用 Quit 方法关闭 Excel。</span></div><div class="line">		ExcelApp.Quit();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JScript并不是我们熟知的JavaScript，但是跟JavaScript很像，如果要在Windows环境中做一些自动化工作，比直接写BAT批处理脚本要简单些。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JScript是由微软公司开发的活动脚本语言，是微软对ECMAScript规范的实现。JScript最初是随Internet Explorer 3.0于1996年8月发布。在网络程序员谈论Internet Explorer中的JavaScript的时候，他们实际上是指JScript。和其他活动脚本一样，它后来也被Windows Script Host（WSH）和Active Server Pages所支持。典型的JScript源文件使用的扩展名是.js。JScript最新的版本是基于尚未定稿的ECMAScript4.0版规范的JScript .NET，并且可以在微软的.Net环境下编译。JScript在ECMA的规范上增加了许多特性。      ——百度百科&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="JScript" scheme="https://c-xuan.com/tags/JScript/"/>
    
  </entry>
  
  <entry>
    <title>【Python 3 基础】循环</title>
    <link href="https://c-xuan.com/2018/01/26/20180126001/"/>
    <id>https://c-xuan.com/2018/01/26/20180126001/</id>
    <published>2018-01-26T03:49:37.000Z</published>
    <updated>2018-01-26T03:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Ptyhon 3中while循环、for循环的基本语法，以及利用for循环遍历列表、字典和列表推导的相关内容。</p>
<a id="more"></a>
<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p>while循环语法比较简单，与其他语言类似。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#输出1-10</span></div><div class="line">x = <span class="number">1</span></div><div class="line"><span class="keyword">while</span> x &lt;= <span class="number">10</span>:</div><div class="line">    print(x)</div><div class="line">    x +=<span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><h4 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h4><p>for循环更多地用于列表，集合，字典等遍历。</p>
<p>例如遍历一个列表：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#遍历列表</span></div><div class="line">numbers = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div><div class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:</div><div class="line">    print(number)</div></pre></td></tr></table></figure>
<p>如果要生成特定序列，可使用内建函数range()，注意python 3 中xrange()函数跟range()已合并。之前版本中xrange()函数作用与range()函数相同，区别是range()函数一次创建整个序列，xrange()函数一次只创建一个数。需要迭代一个巨大的序列时，xrange()会更高效一些。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果只是输出某一范围的数字，可以使用范围函数range(),该函数生成一个包含开始，不含结束区间的序列。</span></div><div class="line"><span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">6</span>):</div><div class="line">    print(number)</div></pre></td></tr></table></figure>
<h4 id="字典遍历"><a href="#字典遍历" class="headerlink" title="字典遍历"></a>字典遍历</h4><p>可使用如下语法遍历字典的键和值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> d.items():</div><div class="line">    print(key,<span class="string">'-&gt;'</span>,value)</div></pre></td></tr></table></figure></p>
<p>如果只遍历字典的键，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d.keys():</div><div class="line">    print(key)</div></pre></td></tr></table></figure></p>
<p>如果只遍历字典的值，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> value <span class="keyword">in</span> d.values():</div><div class="line">    print(value)</div></pre></td></tr></table></figure></p>
<h4 id="字典并行遍历"><a href="#字典并行遍历" class="headerlink" title="字典并行遍历"></a>字典并行遍历</h4><p>如果要同时遍历两个列表，可以按如下方式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#并行迭代，如果要同时遍历两个列表</span></div><div class="line">names = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">ages = [<span class="number">12</span>,<span class="number">34</span>,<span class="number">55</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(names)):</div><div class="line">    print(names[i],<span class="string">' is '</span>,ages[i],<span class="string">' years old'</span>)</div></pre></td></tr></table></figure></p>
<p>内建zip()函数可用于并行迭代，把两个序列并在一起，返回一个元祖列表，写法更简洁。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 内建zip()函数可用于并行迭代，把两个序列并在一起，返回一个元祖列表</span></div><div class="line"><span class="comment"># 如果连个序列不等长，遍历完短的序列就结束了</span></div><div class="line">names = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">ages = [<span class="number">12</span>,<span class="number">34</span>,<span class="number">55</span>,<span class="number">66</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> name,age <span class="keyword">in</span> zip(names,ages):</div><div class="line">    print(name,<span class="string">' is '</span>,age,<span class="string">' years old'</span>)</div></pre></td></tr></table></figure>
<h4 id="for循环与else语句"><a href="#for循环与else语句" class="headerlink" title="for循环与else语句"></a>for循环与else语句</h4><p>for循环中可以使用判断语句，如果符合某一特定条件就让for循环终止，如下代码，如果n等于3，则循环终止了。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">3</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure>
<p>如果在for后加一个else子句，如果for循环被break打断，else子句不会被执行，如下代码输出结果3。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">3</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'No'</span>)</div></pre></td></tr></table></figure></p>
<p>如果for循环中没有执行break语句，则else子句会被执行一次，如下代码输出结果:No<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">7</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'No'</span>)</div></pre></td></tr></table></figure></p>
<h4 id="列表推导"><a href="#列表推导" class="headerlink" title="列表推导"></a>列表推导</h4><p>刚开始看列表推导的语法可能不大容易理解，它的功能就是在一个列表基础上生成另一个列表，例如生成0-9的平方数列表：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></div></pre></td></tr></table></figure>
<p>还可以在列表推导中加入判断语句，例如，如果要过滤出0-9中能被3整除的数的平方，可以怎么写：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 输出能被3整除的平方数</span></div><div class="line">[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">3</span> == <span class="number">0</span>]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[0, 9, 36, 81]</span></div></pre></td></tr></table></figure>
<p>列表推导中可以写多个for语句，例如：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x,y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>)]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]</span></div></pre></td></tr></table></figure>
<p>可以看到，效果类似于表的全连接，输出连个列表的所有组合，同样可以加入if语句，效果类似于表连接中的where条件过滤。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x,y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">if</span> x == y]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[(0, 0), (1, 1), (2, 2)]</span></div></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Magnus Lie Hetland 著《Beginning Python-From Novice to Professional Secnod Edition》</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Ptyhon 3中while循环、for循环的基本语法，以及利用for循环遍历列表、字典和列表推导的相关内容。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CentOS Hbase-1.2.0 安装配置</title>
    <link href="https://c-xuan.com/2018/01/24/20180124001/"/>
    <id>https://c-xuan.com/2018/01/24/20180124001/</id>
    <published>2018-01-23T16:00:00.000Z</published>
    <updated>2018-01-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍在四个节点的集群中安装Hbase，Hbase依赖于zookeeper,Hbase的安装包内自带zookeeper，本篇将配置使用单独安装的zookeeper。最后启动时遇到<code>Master is initializing</code>、<code>error telling master we are up</code>的异常，通过修改hosts文件得以解决。</p>
<a id="more"></a>
<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul>
<li>虚拟机：VMware Workstation 12 Player</li>
<li>Linux版本：CentOS release 6.4 (Final)</li>
<li>hadoop版本：hadoop-2.6.0-cdh5.7.6</li>
<li>zookeeper版本：zookeeper-3.4.5-cdh5.7.6</li>
<li>hbase版本：hbase-1.2.0-cdh5.7.6</li>
<li>集群节点：<ul>
<li>master:192.168.137.11 内存1G</li>
<li>slave1:192.168.137.12 内存512M</li>
<li>slave2:192.168.137.13 内存512M</li>
<li>slave3:192.168.137.14 内存512M</li>
</ul>
</li>
<li>前提：java已安装，Hadoop已安装，zookeeper已安装，已配置ssh免密登录，停掉防火墙等。</li>
</ul>
<p>zookeeper安装请参考<a href="/2018/01/20/20180120001/">CentOS上zookeeper集群模式安装配置</a>,本篇将在四个节点上安装Hbase，master作为HMaster，其他slave节点作为HRegionServer。</p>
<h3 id="上传安装包"><a href="#上传安装包" class="headerlink" title="上传安装包"></a>上传安装包</h3><p>将下载的hbase-1.2.0-cdh5.7.6.tar.gz安装包上传到CentOS指定目录，例如<code>/opt</code>。<br>上传方法很多，这里在SecureCRT用rz命令。</p>
<p>解压缩安装包：</p>
<p><code>tar -zxf hbase-1.2.0-cdh5.7.6.tar.gz</code></p>
<p>重命名文件夹：</p>
<p><code>mv hbase-1.2.0-cdh5.7.6 hbase</code></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>修改环境变量:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vi /etc/profile</div><div class="line">添加</div><div class="line"><span class="built_in">export</span> HBASE_HOME=/opt/hbase</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$HBASE_HOME</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>修改hbase配置文件hbase-env.sh:</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@slave1 <span class="keyword">conf</span>]# <span class="keyword">pwd</span></div><div class="line">/<span class="keyword">opt</span>/hbase/<span class="keyword">conf</span></div><div class="line">[root@slave1 <span class="keyword">conf</span>]# <span class="keyword">vi</span> hbase-env.<span class="keyword">sh</span></div><div class="line"></div><div class="line">文件中去掉一下两行注释并修改</div><div class="line">export JAVA_HOME=/<span class="keyword">opt</span>/jdk</div><div class="line">export HBASE_MANAGES_ZK=false</div></pre></td></tr></table></figure>
<p>因为zookeeper用的是单独安装的，不是hbase自带的，所以上面配置为<code>false</code>.</p>
<p>修改conf文件下的hbase配置文件hbase-site.xml。</p>
<p><configuration>节点中间的内容是空的，增加如下配置：</configuration></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;configuration&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.rootdir<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>hdfs:<span class="comment">//master:9000/hbase&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.cluster.distributed<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>true<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>master,slave1,slave2,slave3<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.zookeeper.property.dataDir<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span><span class="meta-keyword">/opt/</span>zookeeper<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line"><span class="params">&lt;/configuration&gt;</span></div></pre></td></tr></table></figure>
<p>修改conf文件夹下的regionservers文件：</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root<span class="symbol">@slave1</span> conf]<span class="meta"># vi regionservers </span></div><div class="line">slave1</div><div class="line">slave2</div><div class="line">slave3</div></pre></td></tr></table></figure>
<h3 id="启动运行"><a href="#启动运行" class="headerlink" title="启动运行"></a>启动运行</h3><p>HBase的启动顺序为：HDFS-&gt;Zookeeper-&gt;HBase，所以先保证hadoop和zookeeper已经启动。</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@master bin]# /opt/hbase/start-hbase.sh</div><div class="line">starting master, logging <span class="keyword">to</span> /opt/hbase/bin/../logs/hbase-root-master-master.<span class="keyword">out</span></div><div class="line">Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave2: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave2.<span class="keyword">out</span></div><div class="line">slave3: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave3.<span class="keyword">out</span></div><div class="line">slave1: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave1.<span class="keyword">out</span></div><div class="line">slave2: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave2: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave1: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave1: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div></pre></td></tr></table></figure>
<p>master节点上可看到如下进程：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master bin]# jps</div><div class="line"><span class="number">3089</span> Jps</div><div class="line"><span class="number">2696</span> QuorumPeerMain</div><div class="line"><span class="number">2520</span> SecondaryNameNode</div><div class="line"><span class="number">2858</span> HMaster</div><div class="line"><span class="number">2365</span> NameNode</div></pre></td></tr></table></figure>
<p>slave节点上可看到如下进程：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@slave1 opt]# jps</div><div class="line"><span class="number">2258</span> QuorumPeerMain</div><div class="line"><span class="number">2339</span> HRegionServer</div><div class="line"><span class="number">2154</span> DataNode</div><div class="line"><span class="number">2506</span> Jps</div></pre></td></tr></table></figure>
<p>如果没有问题，那么通过hbase shell查看状态可看到：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master logs]<span class="comment"># /opt/hbase/bin/hbase shell</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">38</span>:<span class="number">50</span>,<span class="number">902</span> INFO  [main] Configuration.<span class="symbol">deprecation:</span> hadoop.native.<span class="keyword">lib</span> is deprecated. Instead, use io.native.<span class="keyword">lib</span>.available</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">38</span>:<span class="number">53</span>,<span class="number">829</span> WARN  [main] util.<span class="symbol">NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</div><div class="line"><span class="symbol">SLF4J:</span> Class path contains multiple SLF4J bindings.</div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hbase/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hadoop/share/hadoop/common/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> See <span class="symbol">http:</span>/<span class="regexp">/www.slf4j.org/codes</span>.html<span class="comment">#multiple_bindings for an explanation.</span></div><div class="line"><span class="symbol">SLF4J:</span> Actual binding is <span class="keyword">of</span> <span class="keyword">type</span> [org.slf4j.impl.Log4jLoggerFactory]</div><div class="line">HBase Shell; enter <span class="string">'help&lt;RETURN&gt;'</span> <span class="keyword">for</span> list <span class="keyword">of</span> supported commands.</div><div class="line">Type <span class="string">"exit&lt;RETURN&gt;"</span> to leave the HBase Shell</div><div class="line">Version <span class="number">1.2</span>.<span class="number">0</span>-cdh5.<span class="number">7.6</span>, rUnknown, Tue Feb <span class="number">21</span> <span class="number">15</span>:<span class="number">18</span>:<span class="number">14</span> PST <span class="number">2017</span></div><div class="line"></div><div class="line">hbase(main):<span class="number">001</span>:<span class="number">0</span>&gt; status</div><div class="line"><span class="number">1</span> active master, <span class="number">0</span> backup masters, <span class="number">3</span> servers, <span class="number">0</span> dead, <span class="number">0.6667</span> average load</div></pre></td></tr></table></figure>
<p>我第一次查看报错：<code>Master is initializing</code>.</p>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>虽然上面看到相关进程都已启动，但是进入hbase shell后查看状态报错：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[root@master bin]<span class="comment"># /opt/hbase/bin/hbase shell</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">40</span>:<span class="number">15</span>,<span class="number">994</span> INFO  [main] Configuration.<span class="symbol">deprecation:</span> hadoop.native.<span class="keyword">lib</span> is deprecated. Instead, use io.native.<span class="keyword">lib</span>.available</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">40</span>:<span class="number">18</span>,<span class="number">484</span> WARN  [main] util.<span class="symbol">NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</div><div class="line"><span class="symbol">SLF4J:</span> Class path contains multiple SLF4J bindings.</div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hbase/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hadoop/share/hadoop/common/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> See <span class="symbol">http:</span>/<span class="regexp">/www.slf4j.org/codes</span>.html<span class="comment">#multiple_bindings for an explanation.</span></div><div class="line"><span class="symbol">SLF4J:</span> Actual binding is <span class="keyword">of</span> <span class="keyword">type</span> [org.slf4j.impl.Log4jLoggerFactory]</div><div class="line">HBase Shell; enter <span class="string">'help&lt;RETURN&gt;'</span> <span class="keyword">for</span> list <span class="keyword">of</span> supported commands.</div><div class="line">Type <span class="string">"exit&lt;RETURN&gt;"</span> to leave the HBase Shell</div><div class="line">Version <span class="number">1.2</span>.<span class="number">0</span>-cdh5.<span class="number">7.6</span>, rUnknown, Tue Feb <span class="number">21</span> <span class="number">15</span>:<span class="number">18</span>:<span class="number">14</span> PST <span class="number">2017</span></div><div class="line"></div><div class="line">hbase(main):<span class="number">001</span>:<span class="number">0</span>&gt; status</div><div class="line"></div><div class="line"><span class="symbol">ERROR:</span> org.apache.hadoop.hbase.<span class="symbol">PleaseHoldException:</span> Master is initializing</div><div class="line">        at org.apache.hadoop.hbase.master.HMaster.checkInitialized(HMaster.<span class="symbol">java:</span><span class="number">2316</span>)</div><div class="line">        at org.apache.hadoop.hbase.master.MasterRpcServices.getClusterStatus(MasterRpcServices.<span class="symbol">java:</span><span class="number">783</span>)</div><div class="line">        at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$<span class="number">2</span>.callBlockingMethod(MasterProtos.<span class="symbol">java:</span><span class="number">55652</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.<span class="symbol">java:</span><span class="number">2170</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.<span class="symbol">java:</span><span class="number">109</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.<span class="symbol">java:</span><span class="number">133</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcExecutor$<span class="number">1</span>.run(RpcExecutor.<span class="symbol">java:</span><span class="number">108</span>)</div><div class="line">        at java.lang.Thread.run(Thread.<span class="symbol">java:</span><span class="number">748</span>)</div></pre></td></tr></table></figure>
<p>查看master节点的hbase目录下的logs日志文件<code>hbase-root-master-master.log</code>，发现以下这段总在重复。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">2018</span><span class="number">-01</span><span class="number">-24</span> <span class="number">17</span>:<span class="number">29</span>:<span class="number">32</span>,<span class="number">752</span> INFO  [master:<span class="number">60000.</span>activeMasterManager] master.ServerManager: Waiting <span class="keyword">for</span> region servers <span class="built_in">count</span> <span class="keyword">to</span> settle; currently checked <span class="keyword">in</span> <span class="number">0</span>, slept <span class="keyword">for</span> <span class="number">529904</span> ms, expecting minimum <span class="keyword">of</span> <span class="number">1</span>, maximum <span class="keyword">of</span> <span class="number">2147483647</span>, <span class="keyword">timeout</span> <span class="keyword">of</span> <span class="number">4500</span> ms, interval <span class="keyword">of</span> <span class="number">1500</span> ms.</div></pre></td></tr></table></figure>
<p>查看slave节点的hbase目录下的logs日志文件<code>hbase-root-regionserver-slave1.log</code>，发现如下一段异常：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">21</span>:<span class="number">52</span>,<span class="number">093</span> WARN  [regionserver/localhost/<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">60020</span>] regionserver<span class="selector-class">.HRegionServer</span>: error telling master we are up</div><div class="line">com<span class="selector-class">.google</span><span class="selector-class">.protobuf</span><span class="selector-class">.ServiceException</span>: java<span class="selector-class">.net</span><span class="selector-class">.SocketException</span>: Invalid argument</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.ipc</span><span class="selector-class">.AbstractRpcClient</span><span class="selector-class">.callBlockingMethod</span>(AbstractRpcClient<span class="selector-class">.java</span>:<span class="number">240</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.ipc</span><span class="selector-class">.AbstractRpcClient</span><span class="variable">$BlockingRpcChannelImplementation</span>.callBlockingMethod(AbstractRpcClient<span class="selector-class">.java</span>:<span class="number">336</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.protobuf</span><span class="selector-class">.generated</span><span class="selector-class">.RegionServerStatusProtos</span><span class="variable">$RegionServerStatusService</span><span class="variable">$BlockingStub</span>.regionServerStartup(RegionServerStatusProtos<span class="selector-class">.java</span>:<span class="number">8982</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.regionserver</span><span class="selector-class">.HRegionServer</span><span class="selector-class">.reportForDuty</span>(HRegionServer<span class="selector-class">.java</span>:<span class="number">2300</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.regionserver</span><span class="selector-class">.HRegionServer</span><span class="selector-class">.run</span>(HRegionServer<span class="selector-class">.java</span>:<span class="number">914</span>)</div><div class="line">	at java<span class="selector-class">.lang</span><span class="selector-class">.Thread</span><span class="selector-class">.run</span>(Thread<span class="selector-class">.java</span>:<span class="number">748</span>)</div></pre></td></tr></table></figure>
<p>经过百度，发现slave节点上的<code>/etc/hosts</code>文件含有这样一行：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>   <span class="selector-tag">localhost</span> <span class="selector-tag">slave2</span> <span class="selector-tag">slave2</span> <span class="selector-tag">localhost4</span> <span class="selector-tag">localhost4</span><span class="selector-class">.localdomain4</span></div></pre></td></tr></table></figure>
<p>改为如下再启动hbase就正常了：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>   <span class="selector-tag">localhost</span> <span class="selector-tag">localhost</span><span class="selector-class">.localdomain</span> <span class="selector-tag">localhost4</span> <span class="selector-tag">localhost4</span><span class="selector-class">.localdomain4</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍在四个节点的集群中安装Hbase，Hbase依赖于zookeeper,Hbase的安装包内自带zookeeper，本篇将配置使用单独安装的zookeeper。最后启动时遇到&lt;code&gt;Master is initializing&lt;/code&gt;、&lt;code&gt;error telling master we are up&lt;/code&gt;的异常，通过修改hosts文件得以解决。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="分布式" scheme="https://c-xuan.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Hbase" scheme="https://c-xuan.com/tags/Hbase/"/>
    
  </entry>
  
</feed>
