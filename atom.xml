<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>靛青</title>
  <subtitle>青，取之于藍而青于藍。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://c-xuan.com/"/>
  <updated>2019-01-15T13:59:34.439Z</updated>
  <id>https://c-xuan.com/</id>
  
  <author>
    <name>c-xuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python连接数据库将查询结果转换为DataFrame(列名和表字段一致)</title>
    <link href="https://c-xuan.com/2019/01/15/20190115001_python_db_select_to_df/"/>
    <id>https://c-xuan.com/2019/01/15/20190115001_python_db_select_to_df/</id>
    <published>2019-01-15T11:47:39.000Z</published>
    <updated>2019-01-15T13:59:34.439Z</updated>
    
    <content type="html"><![CDATA[<p>很多时候，我们用Python处理数据，需要连接到Mysql、Postgresql等数据库，获取表数据，再构建pandas的DataFrame进行进一步处理。但是查询数据库结果集是没有表字段名称的，我们希望构建的DataFrame的列名和表字段一样。</p>
<a id="more"></a>
<h3 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h3><p>这里以Postgresql数据库为例，Mysql数据库差不多，其他的自行改造。</p>
<p>先封装一个查询类，查询返回的结果是一个字典，<code>head</code>是表列名,<code>data</code>是表数据，再用DataFrame构造数据结构。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> psycopg2</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">db_pg</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, host, db, user, pwd, port)</span>:</span></div><div class="line">        self.host = host</div><div class="line">        self.db = db</div><div class="line">        self.user = user</div><div class="line">        self.pwd = pwd</div><div class="line">        self.port = port</div><div class="line">        self._conn = self._connect()</div><div class="line">        self._cursor = self._conn.cursor()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_connect</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> psycopg2.connect(</div><div class="line">            database=self.db,</div><div class="line">            user=self.user,</div><div class="line">            password=self.pwd,</div><div class="line">            host=self.host,</div><div class="line">            port=self.port)</div><div class="line"></div><div class="line">			</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(self, sqlCode)</span>:</span></div><div class="line">        self.common(sqlCode)</div><div class="line">        col_names = []</div><div class="line">        result = &#123;&#125;</div><div class="line">        column_count = len(self._cursor.description)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(column_count):</div><div class="line">            desc = self._cursor.description[i]</div><div class="line">            col_names.append(desc[<span class="number">0</span>])</div><div class="line">        data = self._cursor.fetchall()</div><div class="line">        result[<span class="string">'head'</span>] = col_names</div><div class="line">        result[<span class="string">'data'</span>] = data</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></div><div class="line">        self._cursor.close()</div><div class="line">        self._conn.close()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">common</span><span class="params">(self, sqlCode)</span>:</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            self._cursor.execute(sqlCode)</div><div class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">            print(e)</div><div class="line">            self._conn.rollback()</div><div class="line">            self._cursor.execute(sqlCode)</div><div class="line">        self._conn.commit()</div><div class="line"></div><div class="line">		</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></div><div class="line">        self.close()</div><div class="line"></div><div class="line">		</div><div class="line">db_conn = &#123;</div><div class="line">        <span class="string">'host'</span>: <span class="string">"******"</span>,</div><div class="line">        <span class="string">'db'</span>  : <span class="string">"******"</span>,</div><div class="line">        <span class="string">'user'</span>: <span class="string">"******"</span>,</div><div class="line">        <span class="string">'pwd'</span> :<span class="string">"******"</span>,</div><div class="line">        <span class="string">'port'</span>: <span class="string">"******"</span></div><div class="line">    &#125;</div><div class="line">pg_conn = db_pg(host=db_conn[<span class="string">'host'</span>],db=db_conn[<span class="string">'db'</span>],user=db_conn[<span class="string">'user'</span>],pwd=db_conn[<span class="string">'pwd'</span>],port=db_conn[<span class="string">'port'</span>])</div><div class="line">rs            = pg_conn.select(<span class="string">"select * from test"</span>)</div><div class="line">rs_df       = pd.DataFrame(list(rs.get(<span class="string">'data'</span>)),columns=rs.get(<span class="string">'head'</span>))</div></pre></td></tr></table></figure>
<p>运行示例</p>
<center><img src="/img/posts/20190115001-01.png" alt="运行结果"></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多时候，我们用Python处理数据，需要连接到Mysql、Postgresql等数据库，获取表数据，再构建pandas的DataFrame进行进一步处理。但是查询数据库结果集是没有表字段名称的，我们希望构建的DataFrame的列名和表字段一样。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
      <category term="PostgreSQL" scheme="https://c-xuan.com/tags/PostgreSQL/"/>
    
      <category term="Mysql" scheme="https://c-xuan.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL如何实现查找节点依赖</title>
    <link href="https://c-xuan.com/2019/01/04/20190104001_graph_sql/"/>
    <id>https://c-xuan.com/2019/01/04/20190104001_graph_sql/</id>
    <published>2019-01-04T07:16:42.000Z</published>
    <updated>2019-01-04T08:57:42.152Z</updated>
    
    <content type="html"><![CDATA[<p>SQL如何运用递归查找有向无环图的节点依赖呢？</p>
<center><img src="/img/posts/20190104001-01.png" alt="有向无环图"></center>

<a id="more"></a>
<h3 id="问题是这样的"><a href="#问题是这样的" class="headerlink" title="问题是这样的"></a>问题是这样的</h3><p>例如我有以上的两个图，节点<code>b</code>的前置节点是<code>a</code>,节点<code>c</code>的前置节点是<code>b</code>和<code>d</code>，以此类推。给出一个节点，需要找出以此节点为前置节点的所有链条节点。比如给出<code>a</code>，那出来的结果就是<code>a,b,c,d,e</code>,给出<code>f</code>,那出来的结果就是<code>f,g,h,i,j,k</code>。</p>
<h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>创建表以及插入数据，多个前置节点用<code>,</code>隔开，注意，使用的是PostgreSQL数据库。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for mytest</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">"public"</span>.<span class="string">"mytest"</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> (</div><div class="line"><span class="string">"node"</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">COLLATE</span> <span class="string">"default"</span>,</div><div class="line"><span class="string">"pre_nodes"</span> <span class="built_in">varchar</span>(<span class="number">10240</span>) <span class="keyword">COLLATE</span> <span class="string">"default"</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of mytest</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'a'</span>, <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'b'</span>, <span class="string">'a'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'c'</span>, <span class="string">'b,d'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'d'</span>, <span class="string">'b'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'e'</span>, <span class="string">'c'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'f'</span>, <span class="literal">null</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'g'</span>, <span class="string">'f'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'h'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'i'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'j'</span>, <span class="string">'g'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">"public"</span>.<span class="string">"mytest"</span> <span class="keyword">VALUES</span> (<span class="string">'k'</span>, <span class="string">'h,i,j'</span>);</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-02.png" alt="数据表"></center>

<h3 id="SQL创建"><a href="#SQL创建" class="headerlink" title="SQL创建"></a>SQL创建</h3><p>方法有多种，用函数或者存储过程也可以，这里使用<code>WITH</code>递归，相关信息可以百度:<code>postgresql 递归</code>。第一个<code>select</code>语句中要给出起始节点。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">WITH RECURSIVE graph_depds AS (</div><div class="line">  <span class="keyword">SELECT</span> node,pre_nodes <span class="keyword">FROM</span> mytest a <span class="keyword">WHERE</span> node = <span class="string">'f'</span></div><div class="line">  <span class="keyword">UNION</span> ALL</div><div class="line">  <span class="keyword">SELECT</span> a.node,a.pre_nodes <span class="keyword">FROM</span> mytest a, graph_depds b <span class="keyword">WHERE</span> strpos(a.pre_nodes, b.node) &gt; <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> node,pre_nodes <span class="keyword">FROM</span> graph_depds <span class="keyword">ORDER</span> <span class="keyword">BY</span> node;</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-03.png" alt="查询结果"></center>

<h3 id="如果想向前查找呢"><a href="#如果想向前查找呢" class="headerlink" title="如果想向前查找呢"></a>如果想<code>向前</code>查找呢</h3><p>上面的查找相当于找出一个节点所有<code>影响</code>到的节点，其实就是向下递归，如果给出一个节点，想从这个节点往前追溯有关的节点呢？例如给出<code>c</code>节点，结果是<code>a,b,c,d</code>,其实就是向上递归，可以像下面这样写。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">WITH RECURSIVE graph_depds AS (</div><div class="line">  <span class="keyword">SELECT</span> node,pre_nodes <span class="keyword">FROM</span> mytest a <span class="keyword">WHERE</span> node = <span class="string">'i'</span></div><div class="line">  <span class="keyword">UNION</span> ALL</div><div class="line">  <span class="keyword">SELECT</span> a.node,a.pre_nodes <span class="keyword">FROM</span> mytest a, graph_depds b <span class="keyword">WHERE</span> strpos(b.pre_nodes,a.node) &gt; <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> node,pre_nodes <span class="keyword">FROM</span> graph_depds <span class="keyword">ORDER</span> <span class="keyword">BY</span> node;</div></pre></td></tr></table></figure>
<center><img src="/img/posts/20190104001-04.png" alt="查询结果"></center>

<h3 id="其他数据库"><a href="#其他数据库" class="headerlink" title="其他数据库"></a>其他数据库</h3><p>如果像<code>Sql Server</code>等支持<code>WITH</code>语法的数据，以上写法可以移植，稍作修改就好。但是<code>mysql</code>等数据库中的实现方式不一样，百度mysql 递归相关的内容都能找到方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL如何运用递归查找有向无环图的节点依赖呢？&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/img/posts/20190104001-01.png&quot; alt=&quot;有向无环图&quot;&gt;&lt;/img&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="PostgreSQL" scheme="https://c-xuan.com/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>Flask服务本机之外不能访问</title>
    <link href="https://c-xuan.com/2018/12/23/20181223001_flask_intranet_visit/"/>
    <id>https://c-xuan.com/2018/12/23/20181223001_flask_intranet_visit/</id>
    <published>2018-12-23T15:31:17.000Z</published>
    <updated>2018-12-23T15:42:01.470Z</updated>
    
    <content type="html"><![CDATA[<p>Flask 开启服务后，默认是本机访问的，使用<code>localhost:5000</code>可以访问Web服务，但是使用如<code>192.168.1.10</code>这类本机IP地址却访问不了。 </p>
<a id="more"></a>
<p>启动Falsk服务后信息如下，</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* Serving Flask app <span class="string">"app"</span> (lazy loading)</div><div class="line">* Environment: production</div><div class="line">  WARNING: Do <span class="keyword">not</span> use <span class="keyword">the</span> development server <span class="keyword">in</span> <span class="keyword">a</span> production environment.</div><div class="line">  Use <span class="keyword">a</span> production WSGI server instead.</div><div class="line">* Debug mode: <span class="keyword">on</span></div><div class="line">* Restarting <span class="keyword">with</span> stat</div><div class="line">* Debugger is active!</div><div class="line">* Debugger PIN: <span class="number">228</span><span class="number">-080</span><span class="number">-042</span></div><div class="line">* Running <span class="keyword">on</span> <span class="title">http</span>://<span class="title">127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="title">5000</span>/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</div></pre></td></tr></table></figure>
<p>除本机外是不能访问的，需要在<code>run</code>参数中设置,端口自定，主机为<code>0.0.0.0</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">5000</span>)</div></pre></td></tr></table></figure>
<p>再次启动后就可以了。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* Serving Flask app <span class="string">"app"</span> (lazy loading)</div><div class="line">* Environment: production</div><div class="line">  WARNING: Do <span class="keyword">not</span> use <span class="keyword">the</span> development server <span class="keyword">in</span> <span class="keyword">a</span> production environment.</div><div class="line">  Use <span class="keyword">a</span> production WSGI server instead.</div><div class="line">* Debug mode: <span class="keyword">on</span></div><div class="line">* Restarting <span class="keyword">with</span> stat</div><div class="line">* Debugger is active!</div><div class="line">* Debugger PIN: <span class="number">228</span><span class="number">-080</span><span class="number">-042</span></div><div class="line">* Running <span class="keyword">on</span> <span class="title">http</span>://<span class="title">0</span><span class="number">.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="title">5000</span>/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flask 开启服务后，默认是本机访问的，使用&lt;code&gt;localhost:5000&lt;/code&gt;可以访问Web服务，但是使用如&lt;code&gt;192.168.1.10&lt;/code&gt;这类本机IP地址却访问不了。 &lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="Flask" scheme="https://c-xuan.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Atom插件aligner冒号(:)对齐的问题</title>
    <link href="https://c-xuan.com/2018/12/21/20181221001_atom_aligner/"/>
    <id>https://c-xuan.com/2018/12/21/20181221001_atom_aligner/</id>
    <published>2018-12-21T15:31:17.000Z</published>
    <updated>2018-12-23T16:33:10.200Z</updated>
    
    <content type="html"><![CDATA[<p>最近在折腾Atom编辑器，写Python进行交互运行还是很方便的，代码提示什么的比Jupyter也好一些，还可以配置一堆插件，定制自己的开发环境。对于代码整齐性来说，<code>aligner</code>插件是不能错过的。</p>
<a id="more"></a>
<p><a href="https://github.com/adrianlee44/atom-aligner" target="_blank" rel="external">atom-aligner</a>是干什么的呢，就是用来对齐的，比如我们写这样一段变量赋值的程序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var_a =<span class="number">1</span> <span class="comment">#我是变量1</span></div><div class="line">b = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]<span class="comment">#我是变量2</span></div><div class="line">cccc=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)<span class="comment">#注释</span></div><div class="line">ddddddd=<span class="string">'rrrrrrrr'</span><span class="comment">#又一个注释</span></div></pre></td></tr></table></figure>
<p>虽然也没问题，但是如果能按<code>=</code>对齐就更强迫症一些。安装插件后，选中要对齐的行，按快捷键:<br>Mac: <code>ctrl-cmd-/</code> Linux/Windows: <code>ctrl-alt-/</code><br>就会变为这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var_a   = <span class="number">1</span>         <span class="comment">#我是变量1</span></div><div class="line">b       = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] <span class="comment">#我是变量2</span></div><div class="line">cccc    = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)   <span class="comment">#注释</span></div><div class="line">ddddddd = <span class="string">'rrrrrrrr'</span><span class="comment">#又一个注释</span></div></pre></td></tr></table></figure>
<p>需要注意是，只安装一个<code>atom-aligner</code>插件是不够的，得配合不同语言的另一些插件，比如我写python代码，得另外装一个<code>aligner-python</code>插件才可以。</p>
<p>如果是JSON格式的对象，也是可以按冒号:对齐的</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">obj = &#123;<span class="string">'aaa'</span>: <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>: <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>: <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]&#125;</div></pre></td></tr></table></figure>
<p>要注意的是，如果连同<code>=</code>,<code>{}</code>一起选中，按快捷键对齐是不起作用的，得写成这样：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">  <span class="string">'aaa'</span>: <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>: <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>: <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>对齐后是这样的</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line"> <span class="string">'aaa'</span>:      <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>:   <span class="string">'terdff'</span>,</div><div class="line">  <span class="string">'ccc'</span>:     <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>所以<code>:</code>左边是不会对齐的，我们在编辑器写代码的时候一般都会左对齐了，像这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">    <span class="string">'aaa'</span>:   <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>:   <span class="string">'terdff'</span>,</div><div class="line">    <span class="string">'ccc'</span>:   <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>有个问题是，官方的说明里说是可以冒号对齐的，对齐成这样</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">obj = &#123;</div><div class="line">    <span class="string">'aaa'</span>  : <span class="number">11</span>,</div><div class="line">    <span class="string">'bbb'</span>  : <span class="string">'terdff'</span>,</div><div class="line">    <span class="string">'ccc'</span>  : <span class="number">123111</span>,</div><div class="line">    <span class="string">'array'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>插件设置中没有找到相关设置，官方说明看了半天也没找到怎么设置，最后无奈改了插件的源码。</p>
<p>进入插件设置</p>
<center><img src="/img/posts/20181221001-01.gif" alt=""></center>

<p>找到插件包配置，修改默认为<code>left</code></p>
<center><img src="/img/posts/20181221001-02.gif" alt=""></center>

<p>重启编辑器就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在折腾Atom编辑器，写Python进行交互运行还是很方便的，代码提示什么的比Jupyter也好一些，还可以配置一堆插件，定制自己的开发环境。对于代码整齐性来说，&lt;code&gt;aligner&lt;/code&gt;插件是不能错过的。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Atom" scheme="https://c-xuan.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>Html中使用CSS制作火焰燃烧动画</title>
    <link href="https://c-xuan.com/2018/11/24/20181124001_css_fire/"/>
    <id>https://c-xuan.com/2018/11/24/20181124001_css_fire/</id>
    <published>2018-11-24T11:16:42.000Z</published>
    <updated>2018-11-24T11:16:42.000Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/img/posts/20181124001-01.gif" alt="css fire"></center>

<a id="more"></a>
<ul>
<li>作者：Chalda Pnuzig</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/chalda/pen/wRJYmz" target="_blank" rel="external">https://codepen.io/chalda/pen/wRJYmz</a></li>
</ul>
<center><img src="/img/posts/20181124001-02.gif" alt="css fire"></center>

<ul>
<li>作者：Jamie Coulter</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jcoulterdesign/pen/yGgxOY" target="_blank" rel="external">https://codepen.io/jcoulterdesign/pen/yGgxOY</a></li>
</ul>
<center><img src="/img/posts/20181124001-03.gif" alt="css fire"></center>

<ul>
<li>作者：Ivan Grozdic</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：bootstrap.css, jquery.js, popper.js, bootstrap.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ig_design/pen/NeRxzj" target="_blank" rel="external">https://codepen.io/ig_design/pen/NeRxzj</a></li>
</ul>
<center><img src="/img/posts/20181124001-04.gif" alt="css fire"></center>

<ul>
<li>作者：Jon Kantner</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/jkantner/pen/gKRKKb" target="_blank" rel="external">https://codepen.io/jkantner/pen/gKRKKb</a></li>
</ul>
<center><img src="/img/posts/20181124001-05.gif" alt="css fire"></center>

<ul>
<li>作者：Yusuke Nakaya</li>
<li>使用技术：HTML (Pug) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/YusukeNakaya/pen/vJKwZw" target="_blank" rel="external">https://codepen.io/YusukeNakaya/pen/vJKwZw</a></li>
</ul>
<center><img src="/img/posts/20181124001-06.gif" alt="css fire"></center>

<ul>
<li>作者：Satrio Yamanda</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/yamanda/pen/RpNMaY" target="_blank" rel="external">https://codepen.io/yamanda/pen/RpNMaY</a></li>
</ul>
<center><img src="/img/posts/20181124001-07.gif" alt="css fire"></center>

<ul>
<li>作者：Tahina</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/tahina/pen/WRXNwQ" target="_blank" rel="external">https://codepen.io/tahina/pen/WRXNwQ</a></li>
</ul>
<center><img src="/img/posts/20181124001-08.gif" alt="css fire"></center>

<ul>
<li>作者：Zed Dash</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/z-/pen/JXVpgp" target="_blank" rel="external">https://codepen.io/z-/pen/JXVpgp</a></li>
</ul>
<center><img src="/img/posts/20181124001-09.gif" alt="css fire"></center>

<ul>
<li>作者：Deepak K Vijayan</li>
<li>使用技术：HTML (Haml) / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/BrianBravo/pen/JaFfz" target="_blank" rel="external">https://codepen.io/BrianBravo/pen/JaFfz</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/img/posts/20181124001-01.gif&quot; alt=&quot;css fire&quot;&gt;&lt;/img&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>有趣的403页面设计</title>
    <link href="https://c-xuan.com/2018/11/18/20181118001_403_pages/"/>
    <id>https://c-xuan.com/2018/11/18/20181118001_403_pages/</id>
    <published>2018-11-18T11:16:42.000Z</published>
    <updated>2019-01-22T13:59:08.580Z</updated>
    
    <content type="html"><![CDATA[<p>在访问网站的时候，会时不时的出现403 Forbidden错误，浏览器会给出403 Forbidden错误提示，在打开Access Error中列出的URL之后, 出现以下错误：</p>
<blockquote>
<p>403 Forbidden<br> Access to this resource on the server is denied!<br> Powered By LiteSpeed Web Server<br> LiteSpeed Technologies is not responsible for administration and contents of this web site!</p>
</blockquote>
<a id="more"></a>
<h3 id="403状态码"><a href="#403状态码" class="headerlink" title="403状态码"></a>403状态码</h3><p>403错误是网站访问过程中，常见的错误提示。资源不可用，服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致，比如IIS或者apache设置了访问权限不当。</p>
<p>下面看一些有意思的403页面设计，撇开实不实用，能看见几回等等等，，，专注于设计。</p>
<center><img src="/img/posts/20181118001-01.gif" alt="404page"></center>

<ul>
<li>作者：Mansoour</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Mansoour/pen/LgGGvm" target="_blank" rel="external">https://codepen.io/Mansoour/pen/LgGGvm</a></li>
</ul>
<center><img src="/img/posts/20181118001-02.gif" alt="404page"></center>

<ul>
<li>作者：lsgrrd</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/lsgrrd/pen/BObbYY" target="_blank" rel="external">https://codepen.io/lsgrrd/pen/BObbYY</a></li>
</ul>
<center><img src="/img/posts/20181118001-03.gif" alt="404page"></center>

<ul>
<li>作者：ycw</li>
<li>使用技术：HTML (Pug) / CSS (Less)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ycw/pen/BObmJr" target="_blank" rel="external">https://codepen.io/ycw/pen/BObmJr</a></li>
</ul>
<center><img src="/img/posts/20181118001-04.gif" alt="404page"></center>

<ul>
<li>作者：Aimie | Blissful Lemon</li>
<li>使用技术：HTML / CSS</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/ablissfullemon/pen/zJepap" target="_blank" rel="external">https://codepen.io/ablissfullemon/pen/zJepap</a></li>
</ul>
<center><img src="/img/posts/20181118001-05.gif" alt="404page"></center>

<ul>
<li>作者：Sean B</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Chesswithsean/pen/ZMwagQ" target="_blank" rel="external">https://codepen.io/Chesswithsean/pen/ZMwagQ</a></li>
</ul>
<center><img src="/img/posts/20181118001-06.png" alt="404page"></center>

<ul>
<li>作者：Blessing Oni</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/blecaf/pen/EervOE" target="_blank" rel="external">https://codepen.io/blecaf/pen/EervOE</a></li>
</ul>
<center><img src="/img/posts/20181118001-07.gif" alt="404page"></center>

<ul>
<li>作者：Arturo Wibawa</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/artcoholic/pen/ZMVNMw" target="_blank" rel="external">https://codepen.io/artcoholic/pen/ZMVNMw</a></li>
</ul>
<center><img src="/img/posts/20181118001-08.png" alt="404page"></center>

<ul>
<li>作者：Leena Lavanya</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/leenalavanya/pen/RYqvgK" target="_blank" rel="external">https://codepen.io/leenalavanya/pen/RYqvgK</a></li>
</ul>
<center><img src="/img/posts/20181118001-09.gif" alt="404page"></center>

<ul>
<li>作者：Cassidy Williams</li>
<li>使用技术：HTML (Haml) / CSS (Less)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/cassidoo/pen/rZQQrj" target="_blank" rel="external">https://codepen.io/cassidoo/pen/rZQQrj</a></li>
</ul>
<center><img src="/img/posts/20181118001-10.gif" alt="404page"></center>

<ul>
<li>作者：creme</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：jquery.js, tweenmax.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/creme/pen/VGVpbJ" target="_blank" rel="external">https://codepen.io/creme/pen/VGVpbJ</a></li>
</ul>
<center><img src="/img/posts/20181118001-11.gif" alt="404page"></center>

<ul>
<li>作者：Mariana</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/marianab/pen/EedpEb" target="_blank" rel="external">https://codepen.io/marianab/pen/EedpEb</a></li>
</ul>
<center><img src="/img/posts/20181118001-12.png" alt="404page"></center>

<ul>
<li>作者：A van Hagen</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/anjanas_dh/pen/ZMqKwb" target="_blank" rel="external">https://codepen.io/anjanas_dh/pen/ZMqKwb</a></li>
</ul>
<center><img src="/img/posts/20181118001-13.gif" alt="404page"></center>

<ul>
<li>作者：Nuuou</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript (Babel)</li>
<li>依赖库：bootstrap-reboot.css, tweenmax.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Nuuou/pen/GXYmJv" target="_blank" rel="external">https://codepen.io/Nuuou/pen/GXYmJv</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在访问网站的时候，会时不时的出现403 Forbidden错误，浏览器会给出403 Forbidden错误提示，在打开Access Error中列出的URL之后, 出现以下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;403 Forbidden&lt;br&gt; Access to this resource on the server is denied!&lt;br&gt; Powered By LiteSpeed Web Server&lt;br&gt; LiteSpeed Technologies is not responsible for administration and contents of this web site!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>有趣的404页面设计</title>
    <link href="https://c-xuan.com/2018/11/14/20181114001_404_pages/"/>
    <id>https://c-xuan.com/2018/11/14/20181114001_404_pages/</id>
    <published>2018-11-14T11:16:42.000Z</published>
    <updated>2019-01-15T06:57:53.015Z</updated>
    
    <content type="html"><![CDATA[<center><img src="/img/posts/20181114001-01.gif" alt="404page"></center>

<a id="more"></a>
<ul>
<li>作者：Andrew Hani</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/androhani/pen/deOpMZ" target="_blank" rel="external">https://codepen.io/androhani/pen/deOpMZ</a></li>
</ul>
<center><img src="/img/posts/20181114001-02.gif" alt="404page"></center>

<ul>
<li>作者：Saleh Riaz Qureshi</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/salehriaz/pen/erJrZM" target="_blank" rel="external">https://codepen.io/salehriaz/pen/erJrZM</a></li>
</ul>
<center><img src="/img/posts/20181114001-03.gif" alt="404page"></center>

<ul>
<li>作者：Vincent Van Goggles</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/Gogh/pen/eeReMO" target="_blank" rel="external">https://codepen.io/Gogh/pen/eeReMO</a></li>
</ul>
<center><img src="/img/posts/20181114001-04.gif" alt="404page"></center>

<ul>
<li>作者：Selcuk Cura</li>
<li>使用技术：HTML / CSS (SCSS) / JavaScript</li>
<li>依赖库：jquery.js, tweenmax.js, splittext.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/selcukcura/pen/XeQpEv" target="_blank" rel="external">https://codepen.io/selcukcura/pen/XeQpEv</a></li>
</ul>
<center><img src="/img/posts/20181114001-05.gif" alt="404page"></center>

<ul>
<li>作者：Robin Selmer</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/robinselmer/pen/vJjbOZ" target="_blank" rel="external">https://codepen.io/robinselmer/pen/vJjbOZ</a></li>
</ul>
<center><img src="/img/posts/20181114001-06.gif" alt="404page"></center>

<ul>
<li>作者：Clement Girault</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/clementGir/pen/PqGyMq" target="_blank" rel="external">https://codepen.io/clementGir/pen/PqGyMq</a></li>
</ul>
<center><img src="/img/posts/20181114001-07.gif" alt="404page"></center>

<ul>
<li>作者：john</li>
<li>使用技术：HTML / CSS (Less) / JavaScript</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/thejohnyagiz/pen/npDyq" target="_blank" rel="external">https://codepen.io/thejohnyagiz/pen/npDyq</a></li>
</ul>
<center><img src="/img/posts/20181114001-08.gif" alt="404page"></center>

<ul>
<li>作者：gavra</li>
<li>使用技术：HTML / CSS / JavaScript</li>
<li>依赖库：jquery.js</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/gavra/pen/upHzg" target="_blank" rel="external">https://codepen.io/gavra/pen/upHzg</a></li>
</ul>
<center><img src="/img/posts/20181114001-09.png" alt="404page"></center>

<ul>
<li>作者：Ian Gloude</li>
<li>使用技术：HTML / CSS (SCSS)</li>
<li>依赖库：-</li>
<li>浏览器兼容：Chrome, Edge, Firefox, Opera, Safari</li>
<li>源码链接：<a href="https://codepen.io/igloude/pen/qNNWKr" target="_blank" rel="external">https://codepen.io/igloude/pen/qNNWKr</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;/img/posts/20181114001-01.gif&quot; alt=&quot;404page&quot;&gt;&lt;/img&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="CSS" scheme="https://c-xuan.com/tags/CSS/"/>
    
      <category term="JavaScript" scheme="https://c-xuan.com/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://c-xuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Aqua Data Studio 执行HiveSql的问题</title>
    <link href="https://c-xuan.com/2018/07/26/20180726001_aqua_hive_go/"/>
    <id>https://c-xuan.com/2018/07/26/20180726001_aqua_hive_go/</id>
    <published>2018-07-26T03:15:01.000Z</published>
    <updated>2018-07-26T03:15:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>连接Hive的客户端有很多，<strong>Aqua Data Studio</strong>是不错的一个，之前用过DbVisualizer，多个Sql语句都是用<code>;</code>结束的，运行没问题，但是到了Aqua里就报错了：</p>
<figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;[Error] Script lines: <span class="number">1</span>-<span class="number">1</span> --------------------------</div><div class="line"> Error while compiling statement: FAILED: ParseException line <span class="number">1</span>:<span class="number">19</span> </div><div class="line"> cannot recognize input near 'agent' ';' '&lt;EOF&gt;' <span class="keyword">in</span> from source</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Aqua-Data-Studio简介"><a href="#Aqua-Data-Studio简介" class="headerlink" title="Aqua Data Studio简介"></a>Aqua Data Studio简介</h3><blockquote>
<p>Aqua Data Studio是一套完整IDE的数据库开发工具，拥有数据库查询、管理、比对和源码控制等功能，可用于创建、编辑和执行SQL的管理工具脚本编写，以及浏览和修改数据库内容，支持大多数常见的数据库，如Oracle，MySQL，MSSQL，Vertica，Hadoop，Impala等，为所有数据库提供了一个统一界面的平台，让使用者或开发者在一个应用程序中能同时处理多个任务。</p>
</blockquote>
<h3 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h3><ul>
<li>Aqua Data Studio 18.0.18</li>
<li>JDK 1.8</li>
<li>Windows 7</li>
</ul>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>问题解决比较简单，菜单<code>File-&gt;Options</code>,在弹出的设置窗口总的搜索里搜索<code>Hive</code>,结果中的<code>Scripts</code>下的<code>Apache Hive</code>里面，勾选<code>;Statement Separator</code>即可。</p>
<p><img src="/img/posts/20180726001-01.png" alt="20180726001-01"></p>
<p>其实如果不设置这个选项，默认情况下如何在查询窗口执行多条语句而不报错呢？每条语句用<code>GO</code>隔开就可以了，例如：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1</div><div class="line"><span class="keyword">go</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb2</div></pre></td></tr></table></figure>
<p><strong>DbVisualizer</strong> 也是一个不错的工具，可以试用下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;连接Hive的客户端有很多，&lt;strong&gt;Aqua Data Studio&lt;/strong&gt;是不错的一个，之前用过DbVisualizer，多个Sql语句都是用&lt;code&gt;;&lt;/code&gt;结束的，运行没问题，但是到了Aqua里就报错了：&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;[Error] Script lines: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Error while compiling statement: FAILED: ParseException line &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; cannot recognize input near &#39;agent&#39; &#39;;&#39; &#39;&amp;lt;EOF&amp;gt;&#39; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; from source&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hive" scheme="https://c-xuan.com/tags/Hive/"/>
    
      <category term="工具" scheme="https://c-xuan.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>【Hive】日期从整形转为Date类型</title>
    <link href="https://c-xuan.com/2018/07/24/20180724001_hive_date_trans/"/>
    <id>https://c-xuan.com/2018/07/24/20180724001_hive_date_trans/</id>
    <published>2018-07-24T08:15:01.000Z</published>
    <updated>2018-07-24T08:15:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>在建表的时候我们常将日期字段设置为INT类型，将诸如<code>20180601</code>这样的数字值来表示日期，这样在做日期比较等操作时没有问题，但是要进行某些日期计算，就要先转成日期类型才能进行计算了，怎么转换呢？</p>
<a id="more"></a>
<h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>下面在Hive中先建一个表，含有一个INT类型的日期字段，插入两行数据。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb (dt <span class="built_in">INT</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span> (<span class="number">20180701</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span> (<span class="number">20180715</span>);</div></pre></td></tr></table></figure>
<h3 id="转换类型"><a href="#转换类型" class="headerlink" title="转换类型"></a>转换类型</h3><p>这里第一种方法是将<code>INT</code>类型的日期值转成<code>STRING</code>类型，用Hive内置的<code>unix_timestamp</code>函数转成时间戳类型，最后将时间戳用<code>from_unixtime</code>转成<code>yyyy-MM-dd</code>的日期类型。</p>
<p>第二种就比较直接，将<code>INT</code>类型的日期值转成<code>STRING</code>类型，再对字符串进行截取处理，用<code>-</code>拼接起来。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> dt,</div><div class="line">from_unixtime(<span class="keyword">unix_timestamp</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="string">'yyyyMMdd'</span>),<span class="string">'yyyy-MM-dd'</span>) <span class="keyword">as</span> a,</div><div class="line"><span class="keyword">concat</span>(<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">1</span>,<span class="number">4</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">5</span>,<span class="number">2</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">7</span>,<span class="number">2</span>)) <span class="keyword">as</span> b</div><div class="line"><span class="keyword">from</span> tb;</div></pre></td></tr></table></figure>
<p>运行结果</p>
<table>
<thead>
<tr>
<th>dt</th>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td>20180701</td>
<td>2018-07-01</td>
<td>2018-07-01</td>
</tr>
<tr>
<td>20180715</td>
<td>2018-07-15</td>
<td>2018-07-15</td>
</tr>
</tbody>
</table>
<p>当然，每次都这样写有些费劲，可以在Hive中创建UDF或者宏，转换时进行调用就好了。</p>
<h3 id="创建宏命令"><a href="#创建宏命令" class="headerlink" title="创建宏命令"></a>创建宏命令</h3><p>宏命令相对于UDF要简单方便些，但是<strong>宏只能是临时宏，只在本次会话中可见、有效。因此你需要将宏脚本放在SQL脚本的头部</strong>。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TEMPORARY</span> MACRO <span class="keyword">IF</span> <span class="keyword">EXISTS</span> date_trans;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> MACRO date_trans(dt <span class="built_in">int</span>)</div><div class="line">    <span class="keyword">if</span>(dt <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> <span class="keyword">length</span>(dt)=<span class="number">8</span>,</div><div class="line">       <span class="keyword">concat</span>(<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">1</span>,<span class="number">4</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">5</span>,<span class="number">2</span>), <span class="string">'-'</span>,<span class="keyword">substr</span>(<span class="keyword">cast</span>(dt <span class="keyword">as</span> <span class="keyword">string</span>),<span class="number">7</span>,<span class="number">2</span>)), </div><div class="line">	   <span class="literal">null</span>);</div><div class="line"></div><div class="line"><span class="comment">--调用</span></div><div class="line"><span class="keyword">select</span> dt,date_trans(dt) <span class="keyword">as</span> a <span class="keyword">from</span> tb;</div></pre></td></tr></table></figure>
<p>如果同一个功能的函数或宏命令被多次调用，那维护起来就很方便，语句也简洁很多。</p>
<h3 id="Hive内置日期函数一览"><a href="#Hive内置日期函数一览" class="headerlink" title="Hive内置日期函数一览"></a>Hive内置日期函数一览</h3><table><tr><th width="9.51%">Return Type</th><th width="21.33%">Name(Signature)</th><th width="34.03%">Description</th><th width="35.19%">说明</th></tr><tr><td>string</td><td>from_unixtime(bigint unixtime[, string format])</td><td>Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string representing the timestamp of that moment in the current system time zone in the format of “1970-01-01 00:00:00”.</td><td>将时间的秒值转换成format格式（format可为“yyyy-MM-dd hh:mm:ss”,“yyyy-MM-dd hh”,“yyyy-MM-dd hh:mm”等等）如from_unixtime(1250111000,”yyyy-MM-dd”) 得到2009-03-12</td></tr><tr><td>bigint</td><td>unix_timestamp()</td><td>Gets current Unix timestamp in seconds.</td><td>获取本地时区下的时间戳</td></tr><tr><td>bigint</td><td>unix_timestamp(string date)</td><td>Converts time string in format?yyyy-MM-dd HH:mm:ss?to Unix timestamp (in seconds), using the default timezone and the default locale, return 0 if fail: unix_timestamp(‘2009-03-20 11:30:01’) = 1237573801</td><td>将格式为yyyy-MM-dd HH:mm:ss的时间字符串转换成时间戳 ?如unix_timestamp(‘2009-03-20 11:30:01’) = 1237573801</td></tr><tr><td>bigint</td><td>unix_timestamp(string date, string pattern)</td><td>Convert time string with given pattern (see [<a href="http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html" target="_blank" rel="external">http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html</a>]) to Unix time stamp (in seconds), return 0 if fail: unix_timestamp(‘2009-03-20’, ‘yyyy-MM-dd’) = 1237532400.</td><td>将指定时间字符串格式字符串转换成Unix时间戳，如果格式不对返回0 如：unix_timestamp(‘2009-03-20’, ‘yyyy-MM-dd’) = 1237532400</td></tr><tr><td>string</td><td>to_date(string timestamp)</td><td>Returns the date part of a timestamp string: to_date(“1970-01-01 00:00:00”) = “1970-01-01”.</td><td>返回时间字符串的日期部分</td></tr><tr><td>int</td><td>year(string date)</td><td>Returns the year part of a date or a timestamp string: year(“1970-01-01 00:00:00”) = 1970, year(“1970-01-01”) = 1970.</td><td>返回时间字符串的年份部分</td></tr><tr><td>int</td><td>quarter(date/timestamp/string)</td><td>Returns the quarter of the year for a date, timestamp, or string in the range 1 to 4 (as of Hive?1.3.0). Example: quarter(‘2015-04-08’) = 2.</td><td>返回当前时间属性哪个季度 如quarter(‘2015-04-08’) = 2</td></tr><tr><td>int</td><td>month(string date)</td><td>Returns the month part of a date or a timestamp string: month(“1970-11-01 00:00:00”) = 11, month(“1970-11-01”) = 11.</td><td>返回时间字符串的月份部分</td></tr><tr><td>int</td><td>day(string date) dayofmonth(date)</td><td>Returns the day part of a date or a timestamp string: day(“1970-11-01 00:00:00”) = 1, day(“1970-11-01”) = 1.</td><td>返回时间字符串的天</td></tr><tr><td>int</td><td>hour(string date)</td><td>Returns the hour of the timestamp: hour(‘2009-07-30 12:58:59’) = 12, hour(‘12:58:59’) = 12.</td><td>返回时间字符串的小时</td></tr><tr><td>int</td><td>minute(string date)</td><td>Returns the minute of the timestamp.</td><td>返回时间字符串的分钟</td></tr><tr><td>int</td><td>second(string date)</td><td>Returns the second of the timestamp.</td><td>返回时间字符串的秒</td></tr><tr><td>int</td><td>weekofyear(string date)</td><td>Returns the week number of a timestamp string: weekofyear(“1970-11-01 00:00:00”) = 44, weekofyear(“1970-11-01”) = 44.</td><td>返回时间字符串位于一年中的第几个周内 ?如weekofyear(“1970-11-01 00:00:00”) = 44, weekofyear(“1970-11-01”) = 44</td></tr><tr><td>int</td><td>datediff(string enddate, string startdate)</td><td>Returns the number of days from startdate to enddate: datediff(‘2009-03-01’, ‘2009-02-27’) = 2.</td><td>计算开始时间startdate到结束时间enddate相差的天数</td></tr><tr><td>string</td><td>date_add(string startdate, int days)</td><td>Adds a number of days to startdate: date_add(‘2008-12-31’, 1) = ‘2009-01-01’.</td><td>从开始时间startdate加上days</td></tr><tr><td>string</td><td>date_sub(string startdate, int days)</td><td>Subtracts a number of days to startdate: date_sub(‘2008-12-31’, 1) = ‘2008-12-30’.</td><td>从开始时间startdate减去days</td></tr><tr><td>timestamp</td><td>from_utc_timestamp(timestamp, string timezone)</td><td>Assumes given timestamp is UTC and converts to given timezone (as of Hive?0.8.0). For example, from_utc_timestamp(‘1970-01-01 08:00:00’,’PST’) returns 1970-01-01 00:00:00.</td><td>如果给定的时间戳并非UTC，则将其转化成指定的时区下时间戳</td></tr><tr><td>timestamp</td><td>to_utc_timestamp(timestamp, string timezone)</td><td>Assumes given timestamp is in given timezone and converts to UTC (as of Hive?0.8.0). For example, to_utc_timestamp(‘1970-01-01 00:00:00’,’PST’) returns 1970-01-01 08:00:00.</td><td>如果给定的时间戳指定的时区下时间戳，则将其转化成UTC下的时间戳</td></tr><tr><td>date</td><td>current_date</td><td>Returns the current date at the start of query evaluation (as of Hive?1.2.0). All calls of current_date within the same query return the same value.</td><td>返回当前时间日期</td></tr><tr><td>timestamp</td><td>current_timestamp</td><td>Returns the current timestamp at the start of query evaluation?(as of Hive?1.2.0). All calls of current_timestamp within the same query return the same value.</td><td>返回当前时间戳</td></tr><tr><td>string</td><td>add_months(string start_date, int num_months)</td><td>Returns the date that is num_months after start_date?(as of Hive?1.1.0). start_date is a string, date or timestamp. num_months is an integer. The time part of start_date is ignored.?If start_date is the last day of the month or if the resulting month has fewer days than the day component of start_date, then the result is the last day of the resulting month. Otherwise, the result has the same day component as start_date.</td><td>返回当前时间下再增加num_months个月的日期</td></tr><tr><td>string</td><td>last_day(string date)</td><td>Returns the last day of the month which the date belongs to?(as of Hive?1.1.0). date is a string in the format ‘yyyy-MM-dd HH:mm:ss’ or ‘yyyy-MM-dd’.?The time part of date is ignored.</td><td>返回这个月的最后一天的日期，忽略时分秒部分（HH:mm:ss）</td></tr><tr><td>string</td><td>next_day(string start_date, string day_of_week)</td><td>Returns the first date which is later than start_date and named as day_of_week?(as of Hive1.2.0).?start_date is a string/date/timestamp. day_of_week is 2 letters, 3 letters or full name of the day of the week (e.g. Mo, tue, FRIDAY). The time part of start_date is ignored. Example: next_day(‘2015-01-14’, ‘TU’) = 2015-01-20.</td><td>返回当前时间的下一个星期X所对应的日期 如：next_day(‘2015-01-14’, ‘TU’) = 2015-01-20 ?以2015-01-14为开始时间，其下一个星期二所对应的日期为2015-01-20</td></tr><tr><td>string</td><td>trunc(string date, string format)</td><td>Returns date truncated to the unit specified by the format?(as of Hive?1.2.0). Supported formats: MONTH/MON/MM, YEAR/YYYY/YY. Example: trunc(‘2015-03-17’, ‘MM’) = 2015-03-01.</td><td>返回时间的最开始年份或月份 ?如trunc(“2016-06-26”,“MM”)=2016-06-01 ?trunc(“2016-06-26”,“YY”)=2016-01-01 ? 注意所支持的格式为MONTH/MON/MM, YEAR/YYYY/YY</td></tr><tr><td>double</td><td>months_between(date1, date2)</td><td>Returns number of months between dates date1 and date2 (as of Hive?1.2.0). If date1 is later than date2, then the result is positive. If date1 is earlier than date2, then the result is negative. If date1 and date2 are either the same days of the month or both last days of months, then the result is always an integer. Otherwise the UDF calculates the fractional portion of the result based on a 31-day month and considers the difference in time components date1 and date2. date1 and date2 type can be date, timestamp or string in the format ‘yyyy-MM-dd’ or ‘yyyy-MM-dd HH:mm:ss’. The result is rounded to 8 decimal places. Example: months_between(‘1997-02-28 10:30:00’, ‘1996-10-30’) = 3.94959677</td><td>返回date1与date2之间相差的月份，如date1&gt;date2，则返回正，如果date1<date2,则返回负，否则返回0.0 ?如：months_between('1997-02-28="" 10:30:00',="" '1996-10-30')="3.94959677" ?1997-02-28="" 10:30:00与1996-10-30相差3.94959677个月<="" td=""></date2,则返回负，否则返回0.0></td></tr><tr><td>string</td><td>date_format(date/timestamp/string ts, string fmt)</td><td>Converts a date/timestamp/string to a value of string in the format specified by the date format fmt (as of Hive?1.2.0). Supported formats are Java SimpleDateFormat formats?–<a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" target="_blank" rel="external">https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html</a>. The second argument fmt should be constant. Example: date_format(‘2015-04-08’, ‘y’) = ‘2015’.date_format can be used to implement other UDFs, e.g.:dayname(date) is date_format(date, ‘EEEE’)<br>dayofyear(date) is date_format(date, ‘D’)</td><td>按指定格式返回时间date 如：date_format(“2016-06-22”,”MM-dd”)=06-22</td></tr></table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在建表的时候我们常将日期字段设置为INT类型，将诸如&lt;code&gt;20180601&lt;/code&gt;这样的数字值来表示日期，这样在做日期比较等操作时没有问题，但是要进行某些日期计算，就要先转成日期类型才能进行计算了，怎么转换呢？&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="数据仓库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
      <category term="Hive" scheme="https://c-xuan.com/tags/Hive/"/>
    
  </entry>
  
  <entry>
    <title>有用的JScript代码整理</title>
    <link href="https://c-xuan.com/2018/06/02/20180602001_jscript/"/>
    <id>https://c-xuan.com/2018/06/02/20180602001_jscript/</id>
    <published>2018-06-02T07:16:06.000Z</published>
    <updated>2018-06-02T07:16:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>JScript并不是我们熟知的JavaScript，但是跟JavaScript很像，如果要在Windows环境中做一些自动化工作，比直接写BAT批处理脚本要简单些。</p>
<blockquote>
<p>JScript是由微软公司开发的活动脚本语言，是微软对ECMAScript规范的实现。JScript最初是随Internet Explorer 3.0于1996年8月发布。在网络程序员谈论Internet Explorer中的JavaScript的时候，他们实际上是指JScript。和其他活动脚本一样，它后来也被Windows Script Host（WSH）和Active Server Pages所支持。典型的JScript源文件使用的扩展名是.js。JScript最新的版本是基于尚未定稿的ECMAScript4.0版规范的JScript .NET，并且可以在微软的.Net环境下编译。JScript在ECMA的规范上增加了许多特性。      ——百度百科</p>
</blockquote>
<a id="more"></a>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>测试环境：Windows 10 专业版</p>
<p>测试文件夹目录结构如下:<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">testfolder</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">test</span><span class="string">.</span><span class="comment">bat</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">test</span><span class="string">.</span><span class="comment">js</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span><span class="string">.</span><span class="comment">1</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">folder1</span><span class="string">.</span><span class="comment">2</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">a</span><span class="string">.</span><span class="comment">txt</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">b</span><span class="string">.</span><span class="comment">txt</span></div><div class="line"><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">|</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">c</span><span class="string">.</span><span class="comment">txt</span></div></pre></td></tr></table></figure></p>
<p>test.bat是批处理文件，测试的时候直接点击这个文件运行，该文件内容如下：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">@rem </span></div><div class="line"><span class="comment">@rem </span></div><div class="line"><span class="comment">@rem 我是注释</span></div><div class="line"><span class="comment">@rem </span></div><div class="line"></div><div class="line">cscript ./test.js</div><div class="line"></div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>test.js文件是具体放JScript代码的地方，将下列功能的代码放在这里。</p>
<p><strong> 特别注意：中文系统下，将所有文件的编码格式改为GB2312，否则有乱码导致程序存在中文时有异常。</strong></p>
<h3 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*******************************************</span></div><div class="line">*遍历所有子文件夹</div><div class="line">*******************************************/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> folers = GetFolderList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !folers.atEnd(); folers.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> folderName = folers.item();</div><div class="line">	WScript.Echo(<span class="string">"文件夹名称："</span>+folderName.Name);</div><div class="line">	WScript.Echo(<span class="string">"文件夹路径："</span>+folderName);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*******************************************</span></div><div class="line">*获取指定路径文件夹下的所有子文件夹</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:子文件夹集合</div><div class="line">*******************************************/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFolderList</span>(<span class="params">folderspec</span>)</span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">var</span> fso, f, fc;</div><div class="line">   fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">   f = fso.GetFolder(folderspec);</div><div class="line">   fc = <span class="keyword">new</span> Enumerator(f.SubFolders);</div><div class="line">   <span class="keyword">return</span>(fc);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">文件夹名称：folder1.1</div><div class="line">文件夹路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\f</span>older1.1</div><div class="line">文件夹名称：folder1.2</div><div class="line">文件夹路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\f</span>older1.2</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="遍历所有文件"><a href="#遍历所有文件" class="headerlink" title="遍历所有文件"></a>遍历所有文件</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*遍历所有文件</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> files = GetFolderFileList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !files.atEnd(); files.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> fileName = files.item();</div><div class="line">	WScript.Echo(<span class="string">"文件名称："</span>+fileName.Name);</div><div class="line">	WScript.Echo(<span class="string">"文件路径："</span>+fileName);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取指定文件夹路径下的所有文件</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:文件夹下的文件集合</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFolderFileList(folderspec)</div><div class="line">&#123;   </div><div class="line">    <span class="keyword">var</span> fso, folder, files;</div><div class="line">    fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">    folder = fso.GetFolder(folderspec);</div><div class="line">    files = <span class="keyword">new</span> Enumerator(folder.files);</div><div class="line">    <span class="keyword">return</span> files;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">文件名称：a.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\a</span>.txt</div><div class="line">文件名称：b.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\b</span>.txt</div><div class="line">文件名称：c.txt</div><div class="line">文件路径：C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder<span class="symbol">\f</span>older1<span class="symbol">\c</span>.txt</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="获取文件MD5值"><a href="#获取文件MD5值" class="headerlink" title="获取文件MD5值"></a>获取文件MD5值</h3><p>有时候需要找出修改的文件，对比文件MD5值是有用的，耗时看文件大小，文件太大时间可能很长。</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*遍历所有文件，获取文件MD5值</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line"><span class="keyword">var</span> folderPath = <span class="string">"./folder1"</span>;</div><div class="line"><span class="keyword">var</span> files = GetFolderFileList(folderPath);</div><div class="line"><span class="keyword">for</span> (; !files.atEnd(); files.moveNext())</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> fileName = files.item();</div><div class="line">	WScript.Echo(fileName.Name+<span class="string">"的MD5值："</span>+GetFileMD5(fileName));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取指定文件夹路径下的所有文件</div><div class="line">*@folderspec:文件夹路径</div><div class="line">*return:文件夹下的文件集合</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFolderFileList(folderspec)</div><div class="line">&#123;   </div><div class="line">    <span class="keyword">var</span> fso, folder, files;</div><div class="line">    fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</div><div class="line">    folder = fso.GetFolder(folderspec);</div><div class="line">    files = <span class="keyword">new</span> Enumerator(folder.files);</div><div class="line">    <span class="keyword">return</span> files;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*获取文件MD5值</div><div class="line">*@filePath:脚本文件绝对路径</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function GetFileMD5(filePath)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">var</span> objShell = <span class="keyword">new</span> ActiveXObject(<span class="string">"WScript.Shell"</span>);</div><div class="line">	<span class="keyword">var</span> iReturnMsg = objShell.Exec(<span class="string">"cmd.exe /c certutil -hashfile \""</span>+filePath+<span class="string">"\" MD5"</span>);</div><div class="line">	<span class="keyword">var</span> result = iReturnMsg.StdOut.ReadAll();</div><div class="line">	<span class="keyword">var</span> splitArr = result.split(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">var</span> fileMD5 = splitArr[<span class="number">1</span>].replace(/\s/g,<span class="string">""</span>);</div><div class="line">	<span class="keyword">return</span> fileMD5;</div><div class="line">	<span class="comment">//WScript.Echo(fileMD5);</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;cscript ./test.js</div><div class="line">Microsoft (R) Windows Script Host Version 5.812</div><div class="line">版权所有(C) Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">a.txt的MD5值：22d42eb002cefa81e9ad604ea57bc01d</div><div class="line">b.txt的MD5值：1efc98f0102b2109fb90307e6e1c484e</div><div class="line">c.txt的MD5值：ba2ee8e2ba48e6667dca8c83dab38f4c</div><div class="line"></div><div class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop<span class="symbol">\t</span>estfolder&gt;pause</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="创建Excel文件"><a href="#创建Excel文件" class="headerlink" title="创建Excel文件"></a>创建Excel文件</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">CreateExcelFile(<span class="string">"./texcel.xlsx"</span>,<span class="number">3</span>);</div><div class="line"></div><div class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></div><div class="line">*创建Excel文件</div><div class="line">*@filePathName:文件路径，相对路径或绝对路径</div><div class="line">*@sheetCount:Excel中Sheet的个数</div><div class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>/</div><div class="line">function CreateExcelFile(filePathName,sheetCount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		<span class="keyword">var</span> ExcelApp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Excel.Application"</span>);</div><div class="line">		<span class="keyword">var</span> WshShell = WScript.CreateObject (<span class="string">"WScript.Shell"</span>);</div><div class="line">		<span class="keyword">var</span> currentPath = WshShell.CurrentDirectory;</div><div class="line">		<span class="keyword">var</span> i;</div><div class="line">		</div><div class="line">		ExcelApp.Visible = <span class="keyword">false</span>;</div><div class="line">		ExcelApp.DisplayAlerts = <span class="keyword">false</span>;</div><div class="line">		<span class="keyword">var</span> ExcelBook = ExcelApp.Workbooks.Add;</div><div class="line">		</div><div class="line">		<span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;sheetCount;++i)</div><div class="line">		&#123;</div><div class="line">			ExcelBook.Worksheets.Add;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (filePathName.indexOf(<span class="string">"."</span>) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			currentPath = currentPath + filePathName.slice(<span class="number">1</span>);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			currentPath = filePathName;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		currentPath = currentPath.replace(/\<span class="comment">//g,"\\");</span></div><div class="line">		<span class="comment">//currentPath = currentPath.replace(/\\/g,"\\\\"); 路径在变量中不用转义</span></div><div class="line"></div><div class="line">		<span class="comment">//保存表格</span></div><div class="line">		ExcelBook.SaveAs(currentPath);</div><div class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</div><div class="line">		WScript.Echo(<span class="string">"发生异常："</span>+e);</div><div class="line">	&#125;<span class="keyword">finally</span>&#123;</div><div class="line">		<span class="comment">//用 Application 对象用 Quit 方法关闭 Excel。</span></div><div class="line">		ExcelApp.Quit();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JScript并不是我们熟知的JavaScript，但是跟JavaScript很像，如果要在Windows环境中做一些自动化工作，比直接写BAT批处理脚本要简单些。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JScript是由微软公司开发的活动脚本语言，是微软对ECMAScript规范的实现。JScript最初是随Internet Explorer 3.0于1996年8月发布。在网络程序员谈论Internet Explorer中的JavaScript的时候，他们实际上是指JScript。和其他活动脚本一样，它后来也被Windows Script Host（WSH）和Active Server Pages所支持。典型的JScript源文件使用的扩展名是.js。JScript最新的版本是基于尚未定稿的ECMAScript4.0版规范的JScript .NET，并且可以在微软的.Net环境下编译。JScript在ECMA的规范上增加了许多特性。      ——百度百科&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="JScript" scheme="https://c-xuan.com/tags/JScript/"/>
    
  </entry>
  
  <entry>
    <title>【Python 3 基础】循环</title>
    <link href="https://c-xuan.com/2018/01/26/20180126001/"/>
    <id>https://c-xuan.com/2018/01/26/20180126001/</id>
    <published>2018-01-26T03:49:37.000Z</published>
    <updated>2018-01-26T03:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Ptyhon 3中while循环、for循环的基本语法，以及利用for循环遍历列表、字典和列表推导的相关内容。</p>
<a id="more"></a>
<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p>while循环语法比较简单，与其他语言类似。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#输出1-10</span></div><div class="line">x = <span class="number">1</span></div><div class="line"><span class="keyword">while</span> x &lt;= <span class="number">10</span>:</div><div class="line">    print(x)</div><div class="line">    x +=<span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><h4 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h4><p>for循环更多地用于列表，集合，字典等遍历。</p>
<p>例如遍历一个列表：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#遍历列表</span></div><div class="line">numbers = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div><div class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:</div><div class="line">    print(number)</div></pre></td></tr></table></figure>
<p>如果要生成特定序列，可使用内建函数range()，注意python 3 中xrange()函数跟range()已合并。之前版本中xrange()函数作用与range()函数相同，区别是range()函数一次创建整个序列，xrange()函数一次只创建一个数。需要迭代一个巨大的序列时，xrange()会更高效一些。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果只是输出某一范围的数字，可以使用范围函数range(),该函数生成一个包含开始，不含结束区间的序列。</span></div><div class="line"><span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">6</span>):</div><div class="line">    print(number)</div></pre></td></tr></table></figure>
<h4 id="字典遍历"><a href="#字典遍历" class="headerlink" title="字典遍历"></a>字典遍历</h4><p>可使用如下语法遍历字典的键和值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> d.items():</div><div class="line">    print(key,<span class="string">'-&gt;'</span>,value)</div></pre></td></tr></table></figure></p>
<p>如果只遍历字典的键，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d.keys():</div><div class="line">    print(key)</div></pre></td></tr></table></figure></p>
<p>如果只遍历字典的值，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#循环遍历字典</span></div><div class="line">d = &#123;<span class="string">'x'</span>:<span class="number">1</span>,<span class="string">'y'</span>:<span class="number">2</span>,<span class="string">'z'</span>:<span class="number">3</span>&#125;</div><div class="line"><span class="keyword">for</span> value <span class="keyword">in</span> d.values():</div><div class="line">    print(value)</div></pre></td></tr></table></figure></p>
<h4 id="字典并行遍历"><a href="#字典并行遍历" class="headerlink" title="字典并行遍历"></a>字典并行遍历</h4><p>如果要同时遍历两个列表，可以按如下方式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#并行迭代，如果要同时遍历两个列表</span></div><div class="line">names = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">ages = [<span class="number">12</span>,<span class="number">34</span>,<span class="number">55</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(names)):</div><div class="line">    print(names[i],<span class="string">' is '</span>,ages[i],<span class="string">' years old'</span>)</div></pre></td></tr></table></figure></p>
<p>内建zip()函数可用于并行迭代，把两个序列并在一起，返回一个元祖列表，写法更简洁。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 内建zip()函数可用于并行迭代，把两个序列并在一起，返回一个元祖列表</span></div><div class="line"><span class="comment"># 如果连个序列不等长，遍历完短的序列就结束了</span></div><div class="line">names = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div><div class="line">ages = [<span class="number">12</span>,<span class="number">34</span>,<span class="number">55</span>,<span class="number">66</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> name,age <span class="keyword">in</span> zip(names,ages):</div><div class="line">    print(name,<span class="string">' is '</span>,age,<span class="string">' years old'</span>)</div></pre></td></tr></table></figure>
<h4 id="for循环与else语句"><a href="#for循环与else语句" class="headerlink" title="for循环与else语句"></a>for循环与else语句</h4><p>for循环中可以使用判断语句，如果符合某一特定条件就让for循环终止，如下代码，如果n等于3，则循环终止了。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">3</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure>
<p>如果在for后加一个else子句，如果for循环被break打断，else子句不会被执行，如下代码输出结果3。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">3</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'No'</span>)</div></pre></td></tr></table></figure></p>
<p>如果for循环中没有执行break语句，则else子句会被执行一次，如下代码输出结果:No<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">    <span class="keyword">if</span> n == <span class="number">7</span>:</div><div class="line">        print(n)</div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'No'</span>)</div></pre></td></tr></table></figure></p>
<h4 id="列表推导"><a href="#列表推导" class="headerlink" title="列表推导"></a>列表推导</h4><p>刚开始看列表推导的语法可能不大容易理解，它的功能就是在一个列表基础上生成另一个列表，例如生成0-9的平方数列表：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></div></pre></td></tr></table></figure>
<p>还可以在列表推导中加入判断语句，例如，如果要过滤出0-9中能被3整除的数的平方，可以怎么写：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 输出能被3整除的平方数</span></div><div class="line">[x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">3</span> == <span class="number">0</span>]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[0, 9, 36, 81]</span></div></pre></td></tr></table></figure>
<p>列表推导中可以写多个for语句，例如：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x,y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>)]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]</span></div></pre></td></tr></table></figure>
<p>可以看到，效果类似于表的全连接，输出连个列表的所有组合，同样可以加入if语句，效果类似于表连接中的where条件过滤。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[(x,y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>) <span class="keyword">if</span> x == y]</div><div class="line"></div><div class="line"><span class="comment"># 输出结果：[(0, 0), (1, 1), (2, 2)]</span></div></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Magnus Lie Hetland 著《Beginning Python-From Novice to Professional Secnod Edition》</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Ptyhon 3中while循环、for循环的基本语法，以及利用for循环遍历列表、字典和列表推导的相关内容。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Python" scheme="https://c-xuan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CentOS Hbase-1.2.0 安装配置</title>
    <link href="https://c-xuan.com/2018/01/24/20180124001/"/>
    <id>https://c-xuan.com/2018/01/24/20180124001/</id>
    <published>2018-01-23T16:00:00.000Z</published>
    <updated>2018-01-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍在四个节点的集群中安装Hbase，Hbase依赖于zookeeper,Hbase的安装包内自带zookeeper，本篇将配置使用单独安装的zookeeper。最后启动时遇到<code>Master is initializing</code>、<code>error telling master we are up</code>的异常，通过修改hosts文件得以解决。</p>
<a id="more"></a>
<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul>
<li>虚拟机：VMware Workstation 12 Player</li>
<li>Linux版本：CentOS release 6.4 (Final)</li>
<li>hadoop版本：hadoop-2.6.0-cdh5.7.6</li>
<li>zookeeper版本：zookeeper-3.4.5-cdh5.7.6</li>
<li>hbase版本：hbase-1.2.0-cdh5.7.6</li>
<li>集群节点：<ul>
<li>master:192.168.137.11 内存1G</li>
<li>slave1:192.168.137.12 内存512M</li>
<li>slave2:192.168.137.13 内存512M</li>
<li>slave3:192.168.137.14 内存512M</li>
</ul>
</li>
<li>前提：java已安装，Hadoop已安装，zookeeper已安装，已配置ssh免密登录，停掉防火墙等。</li>
</ul>
<p>zookeeper安装请参考<a href="/2018/01/20/20180120001/">CentOS上zookeeper集群模式安装配置</a>,本篇将在四个节点上安装Hbase，master作为HMaster，其他slave节点作为HRegionServer。</p>
<h3 id="上传安装包"><a href="#上传安装包" class="headerlink" title="上传安装包"></a>上传安装包</h3><p>将下载的hbase-1.2.0-cdh5.7.6.tar.gz安装包上传到CentOS指定目录，例如<code>/opt</code>。<br>上传方法很多，这里在SecureCRT用rz命令。</p>
<p>解压缩安装包：</p>
<p><code>tar -zxf hbase-1.2.0-cdh5.7.6.tar.gz</code></p>
<p>重命名文件夹：</p>
<p><code>mv hbase-1.2.0-cdh5.7.6 hbase</code></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>修改环境变量:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vi /etc/profile</div><div class="line">添加</div><div class="line"><span class="built_in">export</span> HBASE_HOME=/opt/hbase</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$HBASE_HOME</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>修改hbase配置文件hbase-env.sh:</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@slave1 <span class="keyword">conf</span>]# <span class="keyword">pwd</span></div><div class="line">/<span class="keyword">opt</span>/hbase/<span class="keyword">conf</span></div><div class="line">[root@slave1 <span class="keyword">conf</span>]# <span class="keyword">vi</span> hbase-env.<span class="keyword">sh</span></div><div class="line"></div><div class="line">文件中去掉一下两行注释并修改</div><div class="line">export JAVA_HOME=/<span class="keyword">opt</span>/jdk</div><div class="line">export HBASE_MANAGES_ZK=false</div></pre></td></tr></table></figure>
<p>因为zookeeper用的是单独安装的，不是hbase自带的，所以上面配置为<code>false</code>.</p>
<p>修改conf文件下的hbase配置文件hbase-site.xml。</p>
<p><configuration>节点中间的内容是空的，增加如下配置：</configuration></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;configuration&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.rootdir<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>hdfs:<span class="comment">//master:9000/hbase&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.cluster.distributed<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>true<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span>master,slave1,slave2,slave3<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line">        <span class="params">&lt;property&gt;</span></div><div class="line">                <span class="params">&lt;name&gt;</span>hbase.zookeeper.property.dataDir<span class="params">&lt;/name&gt;</span></div><div class="line">                <span class="params">&lt;value&gt;</span><span class="meta-keyword">/opt/</span>zookeeper<span class="params">&lt;/value&gt;</span></div><div class="line">        <span class="params">&lt;/property&gt;</span></div><div class="line"><span class="params">&lt;/configuration&gt;</span></div></pre></td></tr></table></figure>
<p>修改conf文件夹下的regionservers文件：</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root<span class="symbol">@slave1</span> conf]<span class="meta"># vi regionservers </span></div><div class="line">slave1</div><div class="line">slave2</div><div class="line">slave3</div></pre></td></tr></table></figure>
<h3 id="启动运行"><a href="#启动运行" class="headerlink" title="启动运行"></a>启动运行</h3><p>HBase的启动顺序为：HDFS-&gt;Zookeeper-&gt;HBase，所以先保证hadoop和zookeeper已经启动。</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@master bin]# /opt/hbase/start-hbase.sh</div><div class="line">starting master, logging <span class="keyword">to</span> /opt/hbase/bin/../logs/hbase-root-master-master.<span class="keyword">out</span></div><div class="line">Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave2: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave2.<span class="keyword">out</span></div><div class="line">slave3: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave3.<span class="keyword">out</span></div><div class="line">slave1: starting regionserver, logging <span class="keyword">to</span> /opt/hbase/logs/hbase-root-regionserver-slave1.<span class="keyword">out</span></div><div class="line">slave2: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave2: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave1: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option PermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div><div class="line">slave1: Java HotSpot(TM) <span class="number">64</span>-<span class="built_in">Bit</span> Server VM <span class="literal">warning</span>: ignoring option MaxPermSize=<span class="number">128</span>m; support was removed <span class="keyword">in</span> <span class="number">8.0</span></div></pre></td></tr></table></figure>
<p>master节点上可看到如下进程：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@master bin]# jps</div><div class="line"><span class="number">3089</span> Jps</div><div class="line"><span class="number">2696</span> QuorumPeerMain</div><div class="line"><span class="number">2520</span> SecondaryNameNode</div><div class="line"><span class="number">2858</span> HMaster</div><div class="line"><span class="number">2365</span> NameNode</div></pre></td></tr></table></figure>
<p>slave节点上可看到如下进程：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@slave1 opt]# jps</div><div class="line"><span class="number">2258</span> QuorumPeerMain</div><div class="line"><span class="number">2339</span> HRegionServer</div><div class="line"><span class="number">2154</span> DataNode</div><div class="line"><span class="number">2506</span> Jps</div></pre></td></tr></table></figure>
<p>如果没有问题，那么通过hbase shell查看状态可看到：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master logs]<span class="comment"># /opt/hbase/bin/hbase shell</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">38</span>:<span class="number">50</span>,<span class="number">902</span> INFO  [main] Configuration.<span class="symbol">deprecation:</span> hadoop.native.<span class="keyword">lib</span> is deprecated. Instead, use io.native.<span class="keyword">lib</span>.available</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">38</span>:<span class="number">53</span>,<span class="number">829</span> WARN  [main] util.<span class="symbol">NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</div><div class="line"><span class="symbol">SLF4J:</span> Class path contains multiple SLF4J bindings.</div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hbase/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hadoop/share/hadoop/common/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> See <span class="symbol">http:</span>/<span class="regexp">/www.slf4j.org/codes</span>.html<span class="comment">#multiple_bindings for an explanation.</span></div><div class="line"><span class="symbol">SLF4J:</span> Actual binding is <span class="keyword">of</span> <span class="keyword">type</span> [org.slf4j.impl.Log4jLoggerFactory]</div><div class="line">HBase Shell; enter <span class="string">'help&lt;RETURN&gt;'</span> <span class="keyword">for</span> list <span class="keyword">of</span> supported commands.</div><div class="line">Type <span class="string">"exit&lt;RETURN&gt;"</span> to leave the HBase Shell</div><div class="line">Version <span class="number">1.2</span>.<span class="number">0</span>-cdh5.<span class="number">7.6</span>, rUnknown, Tue Feb <span class="number">21</span> <span class="number">15</span>:<span class="number">18</span>:<span class="number">14</span> PST <span class="number">2017</span></div><div class="line"></div><div class="line">hbase(main):<span class="number">001</span>:<span class="number">0</span>&gt; status</div><div class="line"><span class="number">1</span> active master, <span class="number">0</span> backup masters, <span class="number">3</span> servers, <span class="number">0</span> dead, <span class="number">0.6667</span> average load</div></pre></td></tr></table></figure>
<p>我第一次查看报错：<code>Master is initializing</code>.</p>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>虽然上面看到相关进程都已启动，但是进入hbase shell后查看状态报错：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[root@master bin]<span class="comment"># /opt/hbase/bin/hbase shell</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">40</span>:<span class="number">15</span>,<span class="number">994</span> INFO  [main] Configuration.<span class="symbol">deprecation:</span> hadoop.native.<span class="keyword">lib</span> is deprecated. Instead, use io.native.<span class="keyword">lib</span>.available</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">40</span>:<span class="number">18</span>,<span class="number">484</span> WARN  [main] util.<span class="symbol">NativeCodeLoader:</span> Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</div><div class="line"><span class="symbol">SLF4J:</span> Class path contains multiple SLF4J bindings.</div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hbase/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> Found binding in [<span class="symbol">jar:</span><span class="symbol">file:</span>/opt/hadoop/share/hadoop/common/<span class="class"><span class="keyword">lib</span>/<span class="title">slf4j</span>-<span class="title">log4j12</span>-1.7.5.<span class="title">jar!</span>/<span class="title">org</span>/<span class="title">slf4j</span>/<span class="title">impl</span>/<span class="title">StaticLoggerBinder</span>.<span class="title">class</span>]</span></div><div class="line"><span class="symbol">SLF4J:</span> See <span class="symbol">http:</span>/<span class="regexp">/www.slf4j.org/codes</span>.html<span class="comment">#multiple_bindings for an explanation.</span></div><div class="line"><span class="symbol">SLF4J:</span> Actual binding is <span class="keyword">of</span> <span class="keyword">type</span> [org.slf4j.impl.Log4jLoggerFactory]</div><div class="line">HBase Shell; enter <span class="string">'help&lt;RETURN&gt;'</span> <span class="keyword">for</span> list <span class="keyword">of</span> supported commands.</div><div class="line">Type <span class="string">"exit&lt;RETURN&gt;"</span> to leave the HBase Shell</div><div class="line">Version <span class="number">1.2</span>.<span class="number">0</span>-cdh5.<span class="number">7.6</span>, rUnknown, Tue Feb <span class="number">21</span> <span class="number">15</span>:<span class="number">18</span>:<span class="number">14</span> PST <span class="number">2017</span></div><div class="line"></div><div class="line">hbase(main):<span class="number">001</span>:<span class="number">0</span>&gt; status</div><div class="line"></div><div class="line"><span class="symbol">ERROR:</span> org.apache.hadoop.hbase.<span class="symbol">PleaseHoldException:</span> Master is initializing</div><div class="line">        at org.apache.hadoop.hbase.master.HMaster.checkInitialized(HMaster.<span class="symbol">java:</span><span class="number">2316</span>)</div><div class="line">        at org.apache.hadoop.hbase.master.MasterRpcServices.getClusterStatus(MasterRpcServices.<span class="symbol">java:</span><span class="number">783</span>)</div><div class="line">        at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$<span class="number">2</span>.callBlockingMethod(MasterProtos.<span class="symbol">java:</span><span class="number">55652</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.<span class="symbol">java:</span><span class="number">2170</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.<span class="symbol">java:</span><span class="number">109</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.<span class="symbol">java:</span><span class="number">133</span>)</div><div class="line">        at org.apache.hadoop.hbase.ipc.RpcExecutor$<span class="number">1</span>.run(RpcExecutor.<span class="symbol">java:</span><span class="number">108</span>)</div><div class="line">        at java.lang.Thread.run(Thread.<span class="symbol">java:</span><span class="number">748</span>)</div></pre></td></tr></table></figure>
<p>查看master节点的hbase目录下的logs日志文件<code>hbase-root-master-master.log</code>，发现以下这段总在重复。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">2018</span><span class="number">-01</span><span class="number">-24</span> <span class="number">17</span>:<span class="number">29</span>:<span class="number">32</span>,<span class="number">752</span> INFO  [master:<span class="number">60000.</span>activeMasterManager] master.ServerManager: Waiting <span class="keyword">for</span> region servers <span class="built_in">count</span> <span class="keyword">to</span> settle; currently checked <span class="keyword">in</span> <span class="number">0</span>, slept <span class="keyword">for</span> <span class="number">529904</span> ms, expecting minimum <span class="keyword">of</span> <span class="number">1</span>, maximum <span class="keyword">of</span> <span class="number">2147483647</span>, <span class="keyword">timeout</span> <span class="keyword">of</span> <span class="number">4500</span> ms, interval <span class="keyword">of</span> <span class="number">1500</span> ms.</div></pre></td></tr></table></figure>
<p>查看slave节点的hbase目录下的logs日志文件<code>hbase-root-regionserver-slave1.log</code>，发现如下一段异常：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">17</span>:<span class="number">21</span>:<span class="number">52</span>,<span class="number">093</span> WARN  [regionserver/localhost/<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">60020</span>] regionserver<span class="selector-class">.HRegionServer</span>: error telling master we are up</div><div class="line">com<span class="selector-class">.google</span><span class="selector-class">.protobuf</span><span class="selector-class">.ServiceException</span>: java<span class="selector-class">.net</span><span class="selector-class">.SocketException</span>: Invalid argument</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.ipc</span><span class="selector-class">.AbstractRpcClient</span><span class="selector-class">.callBlockingMethod</span>(AbstractRpcClient<span class="selector-class">.java</span>:<span class="number">240</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.ipc</span><span class="selector-class">.AbstractRpcClient</span><span class="variable">$BlockingRpcChannelImplementation</span>.callBlockingMethod(AbstractRpcClient<span class="selector-class">.java</span>:<span class="number">336</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.protobuf</span><span class="selector-class">.generated</span><span class="selector-class">.RegionServerStatusProtos</span><span class="variable">$RegionServerStatusService</span><span class="variable">$BlockingStub</span>.regionServerStartup(RegionServerStatusProtos<span class="selector-class">.java</span>:<span class="number">8982</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.regionserver</span><span class="selector-class">.HRegionServer</span><span class="selector-class">.reportForDuty</span>(HRegionServer<span class="selector-class">.java</span>:<span class="number">2300</span>)</div><div class="line">	at org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hbase</span><span class="selector-class">.regionserver</span><span class="selector-class">.HRegionServer</span><span class="selector-class">.run</span>(HRegionServer<span class="selector-class">.java</span>:<span class="number">914</span>)</div><div class="line">	at java<span class="selector-class">.lang</span><span class="selector-class">.Thread</span><span class="selector-class">.run</span>(Thread<span class="selector-class">.java</span>:<span class="number">748</span>)</div></pre></td></tr></table></figure>
<p>经过百度，发现slave节点上的<code>/etc/hosts</code>文件含有这样一行：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>   <span class="selector-tag">localhost</span> <span class="selector-tag">slave2</span> <span class="selector-tag">slave2</span> <span class="selector-tag">localhost4</span> <span class="selector-tag">localhost4</span><span class="selector-class">.localdomain4</span></div></pre></td></tr></table></figure>
<p>改为如下再启动hbase就正常了：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>   <span class="selector-tag">localhost</span> <span class="selector-tag">localhost</span><span class="selector-class">.localdomain</span> <span class="selector-tag">localhost4</span> <span class="selector-tag">localhost4</span><span class="selector-class">.localdomain4</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍在四个节点的集群中安装Hbase，Hbase依赖于zookeeper,Hbase的安装包内自带zookeeper，本篇将配置使用单独安装的zookeeper。最后启动时遇到&lt;code&gt;Master is initializing&lt;/code&gt;、&lt;code&gt;error telling master we are up&lt;/code&gt;的异常，通过修改hosts文件得以解决。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="分布式" scheme="https://c-xuan.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Hbase" scheme="https://c-xuan.com/tags/Hbase/"/>
    
  </entry>
  
  <entry>
    <title>CentOS上zookeeper集群模式安装配置</title>
    <link href="https://c-xuan.com/2018/01/20/20180120001/"/>
    <id>https://c-xuan.com/2018/01/20/20180120001/</id>
    <published>2018-01-19T16:00:00.000Z</published>
    <updated>2018-01-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍在四个节点的集群中搭建zookeeper环境，zookeeper可配置三种模式运行：单机模式，伪集群模式，集群模式，本文使用集群模式搭建。</p>
<a id="more"></a>
<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul>
<li>虚拟机：VMware Workstation 12 Player</li>
<li>Linux版本：CentOS release 6.4 (Final)</li>
<li>zookeeper版本：zookeeper-3.4.5-cdh5.7.6.tar.gz</li>
<li>集群节点：<ul>
<li>master:192.168.137.11 内存1G</li>
<li>slave1:192.168.137.12 内存512M</li>
<li>slave2:192.168.137.13 内存512M</li>
<li>slave3:192.168.137.14 内存512M</li>
</ul>
</li>
<li>前提：java已安装，已配置ssh免密登录，停掉防火墙等。</li>
</ul>
<h3 id="上传安装包"><a href="#上传安装包" class="headerlink" title="上传安装包"></a>上传安装包</h3><p>将下载的zookeeper-3.4.5-cdh5.7.6.tar.gz安装包上传到CentOS指定目录，例如<code>/opt</code>。<br>上传方法很多，这里在SecureCRT用rz命令。</p>
<p>解压缩安装包：</p>
<p><code>tar -zxf zookeeper-3.4.5-cdh5.7.6.tar.gz</code></p>
<p>重命名文件夹：</p>
<p><code>mv zookeeper-3.4.5-cdh5.7.6 zookeeper</code></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>配置文件在安装目录<code>conf</code>文件夹下的<code>zoo_sample.cfg</code>，需要先复制一个并且改文件名：</p>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@master conf]<span class="comment"># pwd</span></div><div class="line">/opt/zookeeper/conf</div><div class="line">[root@master conf]<span class="comment"># cp zoo_sample.cfg zoo.cfg</span></div><div class="line">[root@master conf]<span class="comment"># ll</span></div><div class="line">total 16</div><div class="line">-rw-rw-r--.<span class="number"> 1 </span>root root <span class="number"> 535 </span>Feb<span class="number"> 22 </span><span class="number"> 2017 </span>configuration.xsl</div><div class="line">-rw-rw-r--.<span class="number"> 1 </span>root root<span class="number"> 2693 </span>Feb<span class="number"> 22 </span><span class="number"> 2017 </span>log4j.properties</div><div class="line">-rw-r--r--.<span class="number"> 1 </span>root root <span class="number"> 808 </span>Jan<span class="number"> 23 </span>10:06 zoo.cfg</div><div class="line">-rw-rw-r--.<span class="number"> 1 </span>root root <span class="number"> 808 </span>Feb<span class="number"> 22 </span><span class="number"> 2017 </span>zoo_sample.cfg</div></pre></td></tr></table></figure>
<p>修改zoo.cfg配置文件：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">tickTime=2000</div><div class="line"><span class="comment"># The number of ticks that the initial</span></div><div class="line"><span class="comment"># synchronization phase can take</span></div><div class="line">initLimit=10</div><div class="line"><span class="comment"># The number of ticks that can pass between</span></div><div class="line"><span class="comment"># sending a request and getting an acknowledgement</span></div><div class="line">syncLimit=5</div><div class="line"><span class="comment"># the directory where the snapshot is stored.</span></div><div class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just</span></div><div class="line"><span class="comment"># example sakes.</span></div><div class="line">dataDir=/opt/zookeeper/tmp</div><div class="line"><span class="comment"># the port at which the clients will connect</span></div><div class="line">clientPort=2181</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Be sure to read the maintenance section of the</span></div><div class="line"><span class="comment"># administrator guide before turning on autopurge.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></div><div class="line"><span class="comment">#autopurge.snapRetainCount=3</span></div><div class="line"><span class="comment"># Purge task interval in hours</span></div><div class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></div><div class="line"><span class="comment">#autopurge.purgeInterval=1</span></div><div class="line">dataLogDir=/opt/zookeeper/logs</div><div class="line">server.1=master:2888:3888</div><div class="line">server.2=slave1:2888:3888</div><div class="line">server.3=slave2:2888:3888</div><div class="line">server.4=slave3:2888:3888</div></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>tickTime: zookeeper中使用的基本时间单位, 毫秒值.</li>
<li>dataDir: 数据目录. 可以是任意目录.</li>
<li>dataLogDir: log目录, 同样可以是任意目录. 如果没有设置该参数, 将使用和dataDir相同的设置.</li>
<li>clientPort: 监听client连接的端口号.</li>
<li>initLimit: zookeeper集群中的包含多台server, 其中一台为leader, 集群中其余的server为follower. initLimit参数配置初始化连接时, follower和leader之间的最长心跳时间. 此时该参数设置为5, 说明时间限制为5倍tickTime, 即5*2000=10000ms=10s.</li>
<li>syncLimit: 该参数配置leader和follower之间发送消息, 请求和应答的最大时间长度. 此时该参数设置为2, 说明时间限制为2倍tickTime, 即4000ms.</li>
<li>server.X=A:B:C 其中X是一个数字, 表示这是第几号server. A是该server所在的IP地址. B配置该server和集群中的leader交换消息所使用的端口. C配置选举leader时所使用的端口. </li>
</ul>
<p>由于我们修改了<code>dataDir</code>目录，在zookeeper目录中创建一个文件夹用于后面创建<code>myid</code>文件：</p>
<p><code>mkdir /opt/zookeeper/tmp</code></p>
<p><code>mkdir /opt/zookeeper/logs</code></p>
<h3 id="复制安装包到其他节点"><a href="#复制安装包到其他节点" class="headerlink" title="复制安装包到其他节点"></a>复制安装包到其他节点</h3><p>将<code>zookeeper</code>文件夹复制到其他三个服务器上：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp -r /opt/zookeeper/ root<span class="variable">@slave1</span><span class="symbol">:/opt</span></div><div class="line">scp -r /opt/zookeeper/ root<span class="variable">@slave2</span><span class="symbol">:/opt</span></div><div class="line">scp -r /opt/zookeeper/ root<span class="variable">@slave3</span><span class="symbol">:/opt</span></div></pre></td></tr></table></figure>
<p>在master节点上用一下命令给每个节点上创建<code>myid</code>文件，文件中的id号与<code>zoo.cfg</code>配置文件中的对应：</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># echo 1 &gt; /opt/zookeeper/tmp/myid</span></div><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># ssh slave1 "echo 2 &gt; /opt/zookeeper/tmp/myid"</span></div><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># ssh slave2 "echo 3 &gt; /opt/zookeeper/tmp/myid"</span></div><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># ssh slave3 "echo 4 &gt; /opt/zookeeper/tmp/myid"</span></div></pre></td></tr></table></figure>
<h3 id="运行启动"><a href="#运行启动" class="headerlink" title="运行启动"></a>运行启动</h3><p>由于没有配置环境变量，需要用全路径执行：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@master zookeeper]# <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>zkServer.sh start</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div></pre></td></tr></table></figure>
<p>其实配置文件中修改<code>dataLogDir</code>的本意是想让启动日志输出到配置的文件夹里，但是好像并没有，日志文件<code>zookeeper.out</code>还是在zookeeper的安装目录下生成。</p>
<p>查看<code>zookeeper.out</code>文件发现有错误：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">470</span> <span class="selector-attr">[myid:]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeerConfig@101]</span> <span class="selector-tag">-</span> <span class="selector-tag">Reading</span> <span class="selector-tag">configuration</span> <span class="selector-tag">from</span>: /<span class="selector-tag">opt</span>/<span class="selector-tag">zookeeper</span>/<span class="selector-tag">bin</span>/../<span class="selector-tag">conf</span>/<span class="selector-tag">zoo</span><span class="selector-class">.cfg</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">484</span> <span class="selector-attr">[myid:]</span> <span class="selector-tag">-</span> <span class="selector-tag">WARN</span>  <span class="selector-attr">[main:QuorumPeerConfig@290]</span> <span class="selector-tag">-</span> <span class="selector-tag">Non-optimial</span> <span class="selector-tag">configuration</span>, <span class="selector-tag">consider</span> <span class="selector-tag">an</span> <span class="selector-tag">odd</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">servers</span>.</div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">484</span> <span class="selector-attr">[myid:]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeerConfig@334]</span> <span class="selector-tag">-</span> <span class="selector-tag">Defaulting</span> <span class="selector-tag">to</span> <span class="selector-tag">majority</span> <span class="selector-tag">quorums</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">512</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:DatadirCleanupManager@78]</span> <span class="selector-tag">-</span> <span class="selector-tag">autopurge</span><span class="selector-class">.snapRetainCount</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">3</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">513</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:DatadirCleanupManager@79]</span> <span class="selector-tag">-</span> <span class="selector-tag">autopurge</span><span class="selector-class">.purgeInterval</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">0</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">513</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:DatadirCleanupManager@101]</span> <span class="selector-tag">-</span> <span class="selector-tag">Purge</span> <span class="selector-tag">task</span> <span class="selector-tag">is</span> <span class="selector-tag">not</span> <span class="selector-tag">scheduled</span>.</div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">536</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeerMain@132]</span> <span class="selector-tag">-</span> <span class="selector-tag">Starting</span> <span class="selector-tag">quorum</span> <span class="selector-tag">peer</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">587</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:NIOServerCnxnFactory@94]</span> <span class="selector-tag">-</span> <span class="selector-tag">binding</span> <span class="selector-tag">to</span> <span class="selector-tag">port</span> <span class="selector-tag">0</span><span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span>/<span class="selector-tag">0</span><span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-pseudo">:2181</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">611</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeer@913]</span> <span class="selector-tag">-</span> <span class="selector-tag">tickTime</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">2000</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">612</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeer@933]</span> <span class="selector-tag">-</span> <span class="selector-tag">minSessionTimeout</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">-1</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">612</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeer@944]</span> <span class="selector-tag">-</span> <span class="selector-tag">maxSessionTimeout</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">-1</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">612</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeer@959]</span> <span class="selector-tag">-</span> <span class="selector-tag">initLimit</span> <span class="selector-tag">set</span> <span class="selector-tag">to</span> <span class="selector-tag">10</span></div><div class="line"><span class="selector-tag">2018-01-23</span> <span class="selector-tag">10</span><span class="selector-pseudo">:48</span><span class="selector-pseudo">:35</span>,<span class="selector-tag">639</span> <span class="selector-attr">[myid:4]</span> <span class="selector-tag">-</span> <span class="selector-tag">INFO</span>  <span class="selector-attr">[main:QuorumPeer@429]</span> <span class="selector-tag">-</span> <span class="selector-tag">currentEpoch</span> <span class="selector-tag">not</span> <span class="selector-tag">found</span>! <span class="selector-tag">Creating</span> <span class="selector-tag">with</span> <span class="selector-tag">a</span> <span class="selector-tag">reasonable</span> <span class="selector-tag">default</span> <span class="selector-tag">of</span> <span class="selector-tag">0</span>. <span class="selector-tag">This</span> <span class="selector-tag">should</span> <span class="selector-tag">only</span> <span class="selector-tag">happen</span> <span class="keyword">when</span> you are upgrading your installation</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">643</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [<span class="attribute">main</span>:QuorumPeer<span class="variable">@444</span>] - acceptedEpoch <span class="keyword">not</span> found! Creating with a reasonable default of <span class="number">0</span>. This should only happen <span class="keyword">when</span> you are upgrading your installation</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">652</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [<span class="attribute">Thread-1</span>:QuorumCnxManager$Listener<span class="variable">@486</span>] - My election bind <span class="attribute">port</span>: <span class="number">0.0</span>.<span class="number">0.0</span>/<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">3888</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">674</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [QuorumPeer[myid=<span class="number">4</span>]/<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">2181</span>:QuorumPeer<span class="variable">@670</span>] - LOOKING</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">679</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [QuorumPeer[myid=<span class="number">4</span>]/<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">2181</span>:FastLeaderElection<span class="variable">@740</span>] - New election. My id =  <span class="number">4</span>, proposed zxid=<span class="number">0</span>x0</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">692</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [slave3/<span class="number">192.168</span>.<span class="number">137.14</span>:<span class="number">3888</span>:QuorumCnxManager$Listener<span class="variable">@493</span>] - Received connection request /<span class="number">192.168</span>.<span class="number">137.11</span>:<span class="number">34491</span></div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">704</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - INFO  [WorkerReceiver[myid=<span class="number">4</span>]:FastLeaderElection<span class="variable">@542</span>] - <span class="attribute">Notification</span>: <span class="number">4</span> (n.leader), <span class="number">0</span>x0 (n.zxid), <span class="number">0</span>x1 (n.round), LOOKING (n.state), <span class="number">4</span> (n.sid), <span class="number">0</span>x0 (n.peerEPoch), LOOKING (my state)</div><div class="line"><span class="number">2018</span>-<span class="number">01</span>-<span class="number">23</span> <span class="number">10</span>:<span class="number">48</span>:<span class="number">35</span>,<span class="number">706</span> [<span class="attribute">myid</span>:<span class="number">4</span>] - WARN  [WorkerSender[myid=<span class="number">4</span>]:QuorumCnxManager<span class="variable">@368</span>] - Cannot open channel to <span class="number">2</span> at election address slave1/<span class="number">192.168</span>.<span class="number">137.12</span>:<span class="number">3888</span></div><div class="line">java.net.<span class="attribute">ConnectException</span>: Connection refused (Connection refused)</div><div class="line">	at java.net.PlainSocketImpl.socketConnect(Native Method)</div><div class="line">	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.<span class="attribute">java</span>:<span class="number">350</span>)</div><div class="line">	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.<span class="attribute">java</span>:<span class="number">206</span>)</div><div class="line">	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.<span class="attribute">java</span>:<span class="number">188</span>)</div><div class="line">	at java.net.SocksSocketImpl.connect(SocksSocketImpl.<span class="attribute">java</span>:<span class="number">392</span>)</div><div class="line">	at java.net.Socket.connect(Socket.<span class="attribute">java</span>:<span class="number">589</span>)</div><div class="line">	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.<span class="attribute">java</span>:<span class="number">354</span>)</div><div class="line">	at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.<span class="attribute">java</span>:<span class="number">327</span>)</div><div class="line">	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.<span class="attribute">java</span>:<span class="number">393</span>)</div><div class="line">	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.<span class="attribute">java</span>:<span class="number">365</span>)</div><div class="line">	at java.lang.Thread.run(Thread.<span class="attribute">java</span>:<span class="number">748</span>)</div></pre></td></tr></table></figure>
<p>提示<code>Connection refused</code>的异常，其实一开始先不急着百度这个问题，其实要所有节点上都启动zookeeper后再看看运行状态，现在查看运行状态都是没运行的，也找不到相应的进程：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master zookeeper]# <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>zkServer.sh start</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">[root@master zookeeper]# <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>zkServer.sh status</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Error contacting service. It is probably not running.</div></pre></td></tr></table></figure>
<p>到其他节点服务器上都启动zookeeper，过一会儿后每个服务器查看状态：</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># /opt/zookeeper/bin/zkServer.sh status</span></div><div class="line">JMX enabled by default</div><div class="line">Using config: /opt/zookeeper/bin/../conf/zoo.cfg</div><div class="line">Mode: follower</div><div class="line">[root@<span class="keyword">master</span> <span class="title">zookeeper</span>]<span class="comment"># jps</span></div><div class="line"><span class="number">5488</span> QuorumPeerMain</div><div class="line"><span class="number">5539</span> Jps</div></pre></td></tr></table></figure>
<p>如果有Mode和QuorumPeerMain，就说明已经启动成功了。</p>
<p>如果要关闭zookeeper,需要在每个节点上执行：</p>
<p><code>/opt/zookeeper/bin/zkServer.sh stop</code></p>
<p>另外如果使用如下命令启动，就会在启动时输出日志信息：</p>
<p><code>/opt/zookeeper/bin/zkServer.sh start-foreground</code></p>
<h3 id="批量启动和关闭"><a href="#批量启动和关闭" class="headerlink" title="批量启动和关闭"></a>批量启动和关闭</h3><p>一台一台服务器去执行命令有点麻烦，写一个脚本批量执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#下面变量修改zookeeper安装目录</span></div><div class="line">zooHome=/opt/zookeeper</div><div class="line"><span class="keyword">if</span>  [ <span class="variable">$1</span> != <span class="string">""</span>  ]</div><div class="line">	<span class="keyword">then</span></div><div class="line">        confFile=<span class="variable">$zooHome</span>/conf/zoo.cfg</div><div class="line">        slaves=$(cat <span class="string">"<span class="variable">$confFile</span>"</span> | sed <span class="string">'/^server/!d;s/^.*=//;s/:.*$//g;/^$/d'</span>)</div><div class="line">        <span class="keyword">for</span> salve <span class="keyword">in</span> <span class="variable">$slaves</span> ; <span class="keyword">do</span></div><div class="line">            ssh <span class="variable">$salve</span> <span class="string">"<span class="variable">$zooHome</span>/bin/zkServer.sh <span class="variable">$1</span>"</span></div><div class="line">        <span class="keyword">done</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"parameter empty! parameter:start|stop"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>将上面脚本保存为<code>zooManager</code>文件，调用执行：</p>
<p><code>sh zooManager start</code></p>
<p><code>sh zooManager stop</code></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@master opt]# sh zooManager start</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">JMX enabled by <span class="keyword">default</span></div><div class="line">Using config: <span class="regexp">/opt/</span>zookeeper<span class="regexp">/bin/</span>..<span class="regexp">/conf/</span>zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div></pre></td></tr></table></figure>
<p>由于所有服务器节点都是使用root用户，所以没有考虑权限问题，实际情况要考虑的。</p>
<p>参考：<a href="http://coolxing.iteye.com/blog/1871009" target="_blank" rel="external">http://coolxing.iteye.com/blog/1871009</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍在四个节点的集群中搭建zookeeper环境，zookeeper可配置三种模式运行：单机模式，伪集群模式，集群模式，本文使用集群模式搭建。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="zookeeper" scheme="https://c-xuan.com/tags/zookeeper/"/>
    
      <category term="分布式" scheme="https://c-xuan.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Markdown使用table标签创建表格的问题</title>
    <link href="https://c-xuan.com/2017/12/10/20171210001/"/>
    <id>https://c-xuan.com/2017/12/10/20171210001/</id>
    <published>2017-12-09T16:00:00.000Z</published>
    <updated>2017-12-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用Markdown写东西有时需要插入表格，方式有两种：</p>
<ul>
<li>1.使用Markdown的表格语法</li>
<li>2.使用html的<code>&lt;table&gt;</code>标签来创建表格</li>
</ul>
<p>但是某些Markdown编辑器中使用<code>&lt;table&gt;</code>标签会出现表格前有空行的情况。</p>
<a id="more"></a>
<h3 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h3><p>先看使用Markdown语法创建表格：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="params">| Tables   |</span>      Are      <span class="params">|  Cool |</span></div><div class="line"><span class="params">|----------|</span><span class="symbol">:-------------</span><span class="symbol">:|------</span><span class="symbol">:|</span></div><div class="line"><span class="params">| col 1 is |</span>  left-aligned <span class="params">| $1600 |</span></div><div class="line"><span class="params">| col 2 is |</span>    centered   <span class="params">|   $12 |</span></div><div class="line"><span class="params">| col 3 is |</span> right-aligned <span class="params">|    $1 |</span></div></pre></td></tr></table></figure></p>
<p>效果如下（分割线中间的表格）</p>
<hr>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 1 is</td>
<td style="text-align:center">left-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<hr>
<p>同样的表格使用<code>&lt;table&gt;</code>标签创建：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Tables<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Are<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Cool<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>col 1 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>left-aligned<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$1600<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>col 2 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>centered<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>col 3 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>right-aligned<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>效果如下：（分割线中间的表格）</p>
<hr>
<p><table><br>  <tr><br>    <th>Tables</th><br>    <th>Are</th><br>    <th>Cool</th><br>  </tr><br>  <tr><br>    <td>col 1 is</td><br>    <td>left-aligned</td><br>    <td>$1600</td><br>  </tr><br>  <tr><br>    <td>col 2 is</td><br>    <td>centered</td><br>    <td>$12</td><br>  </tr><br>  <tr><br>    <td>col 3 is</td><br>    <td>right-aligned</td><br>    <td>$1</td><br>  </tr><br></table></p>
<hr>
<p>会发现表格前多了很多<code>&lt;/br&gt;</code>换行。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>解决办法是将代码改为紧凑模式，修改代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;table&gt;<span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Tables<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Are<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Cool<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>col 1 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>left-aligned<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$1600<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>col 2 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>centered<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$12<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>col 3 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>right-aligned<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$1<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>效果如下：（分割线中间的表格）</p>
<hr>
<p><table><tr><th>Tables</th><th>Are</th><th>Cool</th></tr><tr><td>col 1 is</td><td>left-aligned</td><td>$1600</td></tr><tr><td>col 2 is</td><td>centered</td><td>$12</td></tr><tr><td>col 3 is</td><td>right-aligned</td><td>$1</td></tr></table></p>
<hr>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul>
<li>1由于使用Haroopad编辑器写东西再用Hexo发布到Github上，所以会有这种情况出现。如果是其他编辑器，比如简书，这个不会有，因为简书压根儿不支持<code>&lt;table&gt;</code>标签的表格，CSDN上是支持的，不会出现以上问题。</li>
<li>2.使用哪种方式创建表格根据自己的需要而定，Markdown语法简单，但是缺点是不支持列宽度定义，表格样式定义，单元格合并等。<code>&lt;table&gt;</code>标签相比较而言灵活很多。</li>
<li>3.很多时候直接写表格代码是很累的，比较好的方案是在Excel中编辑，再生成代码，网上搜索相应工具也有很多，比如<a href="http://www.tablesgenerator.com/" target="_blank" rel="external">Tables Generator</a>。</li>
<li>4.笔者使用Excel自行写了个生成<code>&lt;table&gt;</code>代码的工具生成压缩的表格代码，在EXCEL中编辑好表格，生成的表格代码列宽会根据Excel中的表格列宽转成百分比，编辑后点击<code>生成表格代码</code>即在Excel文件的同一目录中出现<code>Output.txt</code>文件，将代码复制到Markdown中即可。</li>
</ul>
<p><a href="/download/table2code.xlsm">代码生成工具下载</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Markdown写东西有时需要插入表格，方式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.使用Markdown的表格语法&lt;/li&gt;
&lt;li&gt;2.使用html的&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标签来创建表格&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是某些Markdown编辑器中使用&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标签会出现表格前有空行的情况。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Markdown" scheme="https://c-xuan.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>【cmd】IF ELSE 复制(copy)文件问题</title>
    <link href="https://c-xuan.com/2017/11/28/20171128001/"/>
    <id>https://c-xuan.com/2017/11/28/20171128001/</id>
    <published>2017-11-27T16:00:00.000Z</published>
    <updated>2017-11-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>cmd中复制文件<code>COPY</code>命令一般都不会有问题，但是如果把<code>COPY</code>放在<code>IF ELSE</code>中可能导致批处理文件无法运行。</p>
<a id="more"></a>
<h3 id="测试场景"><a href="#测试场景" class="headerlink" title="测试场景"></a>测试场景</h3><p>文件夹结构如下：</p>
<p>test <br><br>|—folder1<br><br>|—|—a(b).txt<br><br>|—folder2</p>
<p>选择是否从folder1文件夹复制a(b).txt文件到folder2文件夹。</p>
<h3 id="测试1"><a href="#测试1" class="headerlink" title="测试1"></a>测试1</h3><p>不进行选择交互，直接复制，脚本如下：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off &amp; <span class="built_in">setlocal</span> EnableDelayedExpansion</div><div class="line"></div><div class="line"><span class="built_in">set</span> currentDir=<span class="variable">!cd!</span></div><div class="line"></div><div class="line"><span class="built_in">DEL</span> /Q <span class="variable">!currentDir!</span>\folder2\*.* </div><div class="line"></div><div class="line"><span class="built_in">copy</span> <span class="variable">!currentDir!</span>\folder1\a(b).txt <span class="variable">!currentDir!</span>\folder2</div></pre></td></tr></table></figure></p>
<p>保存为test.bat文件后执行结果：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">已复制         <span class="number">1</span> 个文件。</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<p>copy复制语句似乎没有问题。</p>
<h3 id="测试2"><a href="#测试2" class="headerlink" title="测试2"></a>测试2</h3><p>修改以上脚本，添加选择交互：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off &amp; <span class="built_in">setlocal</span> EnableDelayedExpansion</div><div class="line"></div><div class="line"><span class="built_in">set</span> /p yesno=是否复制(<span class="number">0</span>:否，<span class="number">1</span>:是): </div><div class="line"></div><div class="line"><span class="built_in">set</span> currentDir=<span class="variable">!cd!</span></div><div class="line"></div><div class="line"><span class="built_in">DEL</span> /Q <span class="variable">!currentDir!</span>\folder2\*.*</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="variable">!yesno!</span> <span class="keyword">equ</span> <span class="number">1</span> ( </div><div class="line">    <span class="built_in">copy</span> <span class="variable">!currentDir!</span>\folder1\a(b).txt <span class="variable">!currentDir!</span>\folder2</div><div class="line">)<span class="keyword">else</span> (</div><div class="line">    <span class="built_in">echo</span> 没复制</div><div class="line">)</div><div class="line"></div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>保存为test.bat文件后执行,发现一闪而过，看不到什么报错。</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>经过多次测试，发现将copy中的路径用双引号(“”)包裹起来就可以了。<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off &amp; <span class="built_in">setlocal</span> EnableDelayedExpansion</div><div class="line"></div><div class="line"><span class="built_in">set</span> /p yesno=是否复制(<span class="number">0</span>:否，<span class="number">1</span>:是): </div><div class="line"></div><div class="line"><span class="built_in">set</span> currentDir=<span class="variable">!cd!</span></div><div class="line"></div><div class="line"><span class="built_in">DEL</span> /Q <span class="variable">!currentDir!</span>\folder2\*.*</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="variable">!yesno!</span> <span class="keyword">equ</span> <span class="number">1</span> ( </div><div class="line">    <span class="built_in">copy</span> "<span class="variable">!currentDir!</span>\folder1\a(b).txt" <span class="variable">!currentDir!</span>\folder2</div><div class="line">)<span class="keyword">else</span> (</div><div class="line">    <span class="built_in">echo</span> 没复制</div><div class="line">)</div><div class="line"></div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>由此可见，应该是路径中某些符号没有转义导致的，目测是文件名中的<code>()</code>，修改脚本，用<code>^</code>将<code>()</code>转义：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off &amp; <span class="built_in">setlocal</span> EnableDelayedExpansion</div><div class="line"></div><div class="line"><span class="built_in">set</span> /p yesno=是否复制(<span class="number">0</span>:否，<span class="number">1</span>:是): </div><div class="line"></div><div class="line"><span class="built_in">set</span> currentDir=<span class="variable">!cd!</span></div><div class="line"></div><div class="line"><span class="built_in">DEL</span> /Q <span class="variable">!currentDir!</span>\folder2\*.*</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="variable">!yesno!</span> <span class="keyword">equ</span> <span class="number">1</span> ( </div><div class="line">    <span class="built_in">copy</span> <span class="variable">!currentDir!</span>\folder1\a^(b^).txt <span class="variable">!currentDir!</span>\folder2</div><div class="line">)<span class="keyword">else</span> (</div><div class="line">    <span class="built_in">echo</span> 没复制</div><div class="line">)</div><div class="line"></div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>运行结果：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">是否复制(<span class="number">0</span>:否，<span class="number">1</span>:是): <span class="number">1</span></div><div class="line">已复制         <span class="number">1</span> 个文件。</div><div class="line">请按任意键继续. . .</div></pre></td></tr></table></figure></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>虽然测试1中直接执行复制没问题，但是，将同样的语句放入IF ELSE中居然无法执行，还很难定位问题在哪里，所以解决方法是最好把路径放在双引号(“”)里面，就不用担心这个问题了，如果不这样就在IF ELSE中的路径把特殊字符转义。附上CMD中特殊字符转义说明。</p>
<table>
<thead>
<tr>
<th>Character to be escaped</th>
<th>Escape Sequence</th>
<th>Remark</th>
</tr>
</thead>
<tbody>
<tr>
<td>%</td>
<td>%%</td>
<td>May not always be required in doublequoted strings, just try</td>
</tr>
<tr>
<td>^</td>
<td>^^</td>
<td>May not always be required in doublequoted strings, but it won’t hurt</td>
</tr>
<tr>
<td>&amp;</td>
<td>^&amp;</td>
<td>May not always be required in doublequoted strings, but it won’t hurt</td>
</tr>
<tr>
<td>&lt;</td>
<td>^&lt;</td>
<td>May not always be required in doublequoted strings, but it won’t hurt</td>
</tr>
<tr>
<td>&gt;</td>
<td>^&gt;</td>
<td>May not always be required in doublequoted strings, but it won’t hurt</td>
</tr>
<tr>
<td>‘</td>
<td>^’</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), unless backqis used</td>
</tr>
<tr>
<td>`</td>
<td>^`</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), if backq is used</td>
</tr>
<tr>
<td>,</td>
<td>^,</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), even in doublequoted strings</td>
</tr>
<tr>
<td>;</td>
<td>^;</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), even in doublequoted strings</td>
</tr>
<tr>
<td>=</td>
<td>^=</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), even in doublequoted strings</td>
</tr>
<tr>
<td>(</td>
<td>^(</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), even in doublequoted strings</td>
</tr>
<tr>
<td>)</td>
<td>^)</td>
<td>Required only in the FOR /F “subject” (i.e. between the parenthesis), even in doublequoted strings</td>
</tr>
<tr>
<td>!</td>
<td>^^!</td>
<td>Required only when delayed variable expansion is active</td>
</tr>
<tr>
<td>“</td>
<td>“”</td>
<td>Required only inside the search pattern of FIND</td>
</tr>
<tr>
<td>\</td>
<td>\\</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>[</td>
<td>\[</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>]</td>
<td>\]</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>\</td>
<td>\\</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>.</td>
<td>\.</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>*</td>
<td>\*</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
<tr>
<td>?</td>
<td>\?</td>
<td>Required only inside the regex pattern of FINDSTR</td>
</tr>
</tbody>
</table>
<p>参考：<a href="http://www.robvanderwoude.com/escapechars.php" target="_blank" rel="external">http://www.robvanderwoude.com/escapechars.php</a></p>
<p>将表格快速转换为HTML,Markdown格式：<a href="http://www.tablesgenerator.com/" target="_blank" rel="external">http://www.tablesgenerator.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cmd中复制文件&lt;code&gt;COPY&lt;/code&gt;命令一般都不会有问题，但是如果把&lt;code&gt;COPY&lt;/code&gt;放在&lt;code&gt;IF ELSE&lt;/code&gt;中可能导致批处理文件无法运行。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="cmd" scheme="https://c-xuan.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>【ORACLE】导致物化视图快速刷新变慢的原因和解决</title>
    <link href="https://c-xuan.com/2017/11/19/20171119001/"/>
    <id>https://c-xuan.com/2017/11/19/20171119001/</id>
    <published>2017-11-18T16:00:00.000Z</published>
    <updated>2017-11-28T17:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>ORACLE物化视图(MATERIALIZED VIEW)有自动提交刷新和手动刷新两种刷新方式，每种刷新方式下有增量刷新(FAST)、全量刷新(COMPLETE)、系统自动判断(FORCE)三种刷新方法。一般而言，增量刷新理论上是比全量刷新要快一些的，但是我发现某些情况下增量刷新将导致基表提交后延迟严重，下面将做一些测试。</p>
<a id="more"></a>
<h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><ul>
<li>操作系统：Red Hat Enterprise Linux Server release 5.8 虚拟机</li>
<li>处理器：Intel(R) Core(TM) i7-4700MQ CPU @ 2.40GHz</li>
<li>内存大小：4G</li>
<li>数据库：Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production</li>
</ul>
<h3 id="准备测试数据"><a href="#准备测试数据" class="headerlink" title="准备测试数据"></a>准备测试数据</h3><p>创建三个表结构相同的测试表，id为自增长主键，这三个表作为物化视图的基表。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> t1 (</div><div class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</div><div class="line">    c1 <span class="built_in">INT</span>,</div><div class="line">    c2 <span class="built_in">INT</span>,</div><div class="line">    <span class="keyword">constraint</span> pk1 primary <span class="keyword">key</span>(<span class="keyword">id</span>));</div><div class="line">    </div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> t2 (</div><div class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</div><div class="line">    c1 <span class="built_in">INT</span>,</div><div class="line">    c2 <span class="built_in">INT</span>,</div><div class="line">    <span class="keyword">constraint</span> pk2 primary <span class="keyword">key</span>(<span class="keyword">id</span>));</div><div class="line">    </div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> t3 (</div><div class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</div><div class="line">    c1 <span class="built_in">INT</span>,</div><div class="line">    c2 <span class="built_in">INT</span>,</div><div class="line">    <span class="keyword">constraint</span> pk3 primary <span class="keyword">key</span>(<span class="keyword">id</span>));</div></pre></td></tr></table></figure>
<p>每个表插入30000行数据，并给三个基表创建物化视图日志(MATERIALIZED VIEW LOG)：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> <span class="keyword">LOG</span> <span class="keyword">ON</span> t1 <span class="keyword">WITH</span> <span class="keyword">ROWID</span>,<span class="keyword">SEQUENCE</span>(<span class="keyword">id</span>,c1,c2) <span class="keyword">INCLUDING</span> <span class="keyword">NEW</span> <span class="keyword">VALUES</span>;</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> <span class="keyword">LOG</span> <span class="keyword">ON</span> t2 <span class="keyword">WITH</span> <span class="keyword">ROWID</span>,<span class="keyword">SEQUENCE</span>(<span class="keyword">id</span>,c1,c2) <span class="keyword">INCLUDING</span> <span class="keyword">NEW</span> <span class="keyword">VALUES</span>;</div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> <span class="keyword">LOG</span> <span class="keyword">ON</span> t3 <span class="keyword">WITH</span> <span class="keyword">ROWID</span>,<span class="keyword">SEQUENCE</span>(<span class="keyword">id</span>,c1,c2) <span class="keyword">INCLUDING</span> <span class="keyword">NEW</span> <span class="keyword">VALUES</span>;</div></pre></td></tr></table></figure>
<h3 id="物化视图中不包含列计算"><a href="#物化视图中不包含列计算" class="headerlink" title="物化视图中不包含列计算"></a>物化视图中不包含列计算</h3><p>首先创建的物化视图如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">SELECT</span> a.id aid,a.c1 ac1,a.c2 ac2,b.c1 bc1,b.c2 bc2,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line">  <span class="keyword">FROM</span> t1 a,t2 b</div><div class="line"> <span class="keyword">WHERE</span> a.id=b.id(+)</div><div class="line">   <span class="keyword">AND</span> a.c1=b.c1(+);</div></pre></td></tr></table></figure></p>
<p>该物化视图采用的是基表提交(commit)触发快速刷新(FAST)的方式刷新数据，物化视图为两个基表t1,t2的外联接，SELECT后面的列只是简单列出t1,t2表中的列而已。</p>
<h4 id="更新外联接主表数据"><a href="#更新外联接主表数据" class="headerlink" title="更新外联接主表数据"></a>更新外联接主表数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mv1 <span class="keyword">where</span> aid = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-01.png" alt="20171119001-01"></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> t1 <span class="keyword">set</span> c2=<span class="number">3</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-02.png" alt="20171119001-02"></p>
<p>可见提交耗时很短，再查看物化视图数据，已经更新。</p>
<p><img src="/img/posts/20171119001-03.png" alt="20171119001-03"></p>
<p>使用如下语句查询物化视图的刷新方式，刷新时间等信息。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> MVIEW_NAME,</div><div class="line">       REFRESH_MODE,</div><div class="line">       REFRESH_METHOD,</div><div class="line">       FAST_REFRESHABLE,</div><div class="line">       LAST_REFRESH_TYPE,</div><div class="line">       LAST_REFRESH_DATE,</div><div class="line">       STALENESS </div><div class="line">  <span class="keyword">FROM</span> USER_MVIEWS </div><div class="line"> <span class="keyword">WHERE</span> MVIEW_NAME = <span class="string">'MV1'</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-04.png" alt="20171119001-04"></p>
<h4 id="更新外联接非主表数据"><a href="#更新外联接非主表数据" class="headerlink" title="更新外联接非主表数据"></a>更新外联接非主表数据</h4><p>更新非主表t2的同一行的数据，提交后耗时也很短。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> t2 <span class="keyword">set</span> c2=<span class="number">13</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-05.png" alt="20171119001-05"></p>
<p><img src="/img/posts/20171119001-06.png" alt="20171119001-06"></p>
<p><img src="/img/posts/20171119001-07.png" alt="20171119001-07"></p>
<p>所以这种情况下，物化视图的增量刷新是没有多少延迟的。</p>
<h3 id="物化视图中包含列计算"><a href="#物化视图中包含列计算" class="headerlink" title="物化视图中包含列计算"></a>物化视图中包含列计算</h3><p>将MV1物化视图删除，重新创建一个。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">SELECT</span> a.id aid,a.c1 ac1,a.c2 ac2,b.c1 bc1,b.c2 bc2,</div><div class="line">       a.c2+b.c2 <span class="keyword">as</span> d,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line"> <span class="keyword">FROM</span> t1 a,t2 b</div><div class="line"><span class="keyword">WHERE</span> a.id=b.id(+)</div><div class="line">  <span class="keyword">AND</span> a.c1=b.c1(+);</div></pre></td></tr></table></figure></p>
<p>在之前的基础上增加了d列，这列是t1和t2基表中各一列的计算。</p>
<h4 id="更新外联接主表数据-1"><a href="#更新外联接主表数据-1" class="headerlink" title="更新外联接主表数据"></a>更新外联接主表数据</h4><p>测试更新主表数据，查看提交耗时。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mv1 <span class="keyword">where</span> aid = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-08.png" alt="20171119001-08"></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> t1 <span class="keyword">set</span> c2=<span class="number">6</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-09.png" alt="20171119001-09"></p>
<p><img src="/img/posts/20171119001-10.png" alt="20171119001-10"></p>
<p><img src="/img/posts/20171119001-11.png" alt="20171119001-11"></p>
<p>基表数据提交时延迟很小。</p>
<h4 id="更新外联接非主表数据-1"><a href="#更新外联接非主表数据-1" class="headerlink" title="更新外联接非主表数据"></a>更新外联接非主表数据</h4><p>测试更新t2表数据，查看提交耗时。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> t2 <span class="keyword">set</span> c2=<span class="number">1</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</div></pre></td></tr></table></figure>
<p><img src="/img/posts/20171119001-12.png" alt="20171119001-12"></p>
<p><img src="/img/posts/20171119001-13.png" alt="20171119001-13"></p>
<p><img src="/img/posts/20171119001-14.png" alt="20171119001-14"></p>
<p>基表更新数据提交时，显示<strong>20多秒</strong>才完成，显然，这种情况会导致物化视图增量刷新延迟严重。</p>
<p>将MV1删除后重建为下列情况，相加的两列是同一个表的两列，这时再更新t2表的一行数据，发现提交没有延迟。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">SELECT</span> a.id aid,a.c1 ac1,a.c2 ac2,b.c1 bc1,b.c2 bc2,</div><div class="line">       b.c1+b.c2 <span class="keyword">as</span> d,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line">  <span class="keyword">FROM</span> t1 a,t2 b</div><div class="line"> <span class="keyword">WHERE</span> a.id=b.id;</div></pre></td></tr></table></figure>
<h3 id="一种解决方案"><a href="#一种解决方案" class="headerlink" title="一种解决方案"></a>一种解决方案</h3><p>既然含有外联接的物化视图多表列运算有问题，可以在MV1中将运算列都SELECT出来，再创建一个嵌套物化视图MV2，将MV1中的列进行运算处理。<br>物化视图MV1创建如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">SELECT</span> a.id aid,a.c1 ac1,a.c2 ac2,b.c1 bc1,b.c2 bc2,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line">  <span class="keyword">FROM</span> t1 a,t2 b</div><div class="line"> <span class="keyword">WHERE</span> a.id=b.id(+)</div><div class="line">   <span class="keyword">AND</span> a.c1=b.c1(+);</div><div class="line"><span class="comment">--因为MV1将作为MV2的基本表，所以要建物化视图日志</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> <span class="keyword">log</span> <span class="keyword">on</span> mv1 <span class="keyword">with</span> <span class="keyword">rowid</span>,<span class="keyword">sequence</span>(aid) <span class="keyword">including</span> <span class="keyword">new</span> <span class="keyword">values</span>;</div></pre></td></tr></table></figure></p>
<p>物化视图MV2创建如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> mv2</div><div class="line"><span class="keyword">build</span> <span class="keyword">immediate</span></div><div class="line"><span class="keyword">refresh</span> <span class="keyword">fast</span> <span class="keyword">on</span> <span class="keyword">commit</span></div><div class="line"><span class="keyword">with</span> <span class="keyword">rowid</span></div><div class="line"><span class="keyword">as</span></div><div class="line"><span class="keyword">select</span> aid,ac1,ac2,bc1,bc2,</div><div class="line">       ac2+bc2 <span class="keyword">as</span> d, <span class="comment">--原本在MV1中计算的列在这里计算</span></div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line">  <span class="keyword">from</span> mv1 a,t3 b <span class="comment">--这里注意，在这个ORACLE版本中，创建嵌套物化视图必须要有表关联或者聚合计算，单独from mv1创建不了MV2.</span></div><div class="line"> <span class="keyword">where</span> a.aid=b.id(+);</div></pre></td></tr></table></figure></p>
<p>查看初始数据<code>select * from mv2 where aid = 99;</code><br><img src="/img/posts/20171119001-15.png" alt="20171119001-15"><br>更新t2表数据<code>update t2 set c2=37 where id = 99;</code>，查看提交耗时<br><img src="/img/posts/20171119001-16.png" alt="20171119001-16"><br>查看MV2结果<br><img src="/img/posts/20171119001-17.png" alt="20171119001-17"><br>查看物化视图刷新情况<br><img src="/img/posts/20171119001-18.png" alt="20171119001-18"><br>可见，两个物化视图在基表数据更新后提交不会耗时很久。用这种方式将一个运算分开两步完成，虽然可行，但是代价也很明显，要多创建嵌套物化视图，不敢保证复杂情况下，嵌套物化视图会有其他问题。</p>
<h3 id="另两种解决方案"><a href="#另两种解决方案" class="headerlink" title="另两种解决方案"></a>另两种解决方案</h3><ul>
<li>1.将含有多表列运算的外联接快速刷新物化视图改为定时全量刷新。</li>
<li>2.将外联接重写为内连接。</li>
</ul>
<h3 id="最终解决"><a href="#最终解决" class="headerlink" title="最终解决"></a>最终解决</h3><p>经测试，除以上方法外，有一个方法比较完美的解决延迟问题的方案，就是在物化视图上的ROWID列创建索引。测试如下：<br>这里做了一个相对复杂的嵌套物化视图测试。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">drop</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv1</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">SELECT</span> a.id aid,a.c1 ac1,a.c2 ac2,b.c1 bc1,b.c2 bc2,</div><div class="line">       a.c2+b.c2 <span class="keyword">as</span> d,</div><div class="line">       (a.c2+b.c2)*b.c1 <span class="keyword">as</span> e,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line"> <span class="keyword">FROM</span> t1 a,t2 b</div><div class="line"><span class="keyword">WHERE</span> a.id=b.id(+)</div><div class="line">  <span class="keyword">AND</span> a.c1=b.c1(+);</div><div class="line"><span class="comment">--在mv1上所有rowid创建索引</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx1 <span class="keyword">on</span> mv1(rida,ridb);</div><div class="line"><span class="comment">--创建mv1物化视图日志</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">materialized</span> <span class="keyword">view</span> <span class="keyword">log</span> <span class="keyword">on</span> mv1 <span class="keyword">with</span> <span class="keyword">rowid</span>(aid,ac1,ac2,bc1,bc2) <span class="keyword">including</span> <span class="keyword">new</span> <span class="keyword">values</span>;</div><div class="line"><span class="comment">--mv2引用mv1</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> mv2</div><div class="line"><span class="keyword">BUILD</span> <span class="keyword">IMMEDIATE</span></div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">COMMIT</span></div><div class="line"><span class="keyword">WITH</span> <span class="keyword">ROWID</span></div><div class="line"><span class="keyword">AS</span></div><div class="line"><span class="keyword">select</span> a.aid,a.ac1,a.ac2,b.c1 bc1,b.c2 bc2,a.e,</div><div class="line">       a.e+b.c2 <span class="keyword">as</span> d,</div><div class="line">       a.rowid rida,b.rowid ridb</div><div class="line"><span class="keyword">from</span> mv1 a,t2 b</div><div class="line"><span class="keyword">where</span> a.aid=b.id(+)</div><div class="line">  <span class="keyword">and</span> a.ac1=b.c1(+);</div><div class="line"><span class="comment">--在mv2上所有rowid创建索引</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx2 <span class="keyword">on</span> mv2(rida,ridb);</div></pre></td></tr></table></figure></p>
<p>以上脚本，创建了两个物化视图mv1,mv2，每个物化视图都含有外联接，且select列中含有多个表列结算，mv1嵌套在mv2中，基表t2被两个物化视图引用，且t2的字段在两个物化视图中都参与计算，这样的情况应该算比较复杂了，注意每个物化视图都建立索引。</p>
<p>查询mv2初始值:<br><code>select * from mv2 where aid = 509;</code><br><img src="/img/posts/20171119001-19.png" alt="20171119001-19"><br>修改基表t2的数据：<br><code>update t2 set c2=85 where id = 509;</code><br><img src="/img/posts/20171119001-20.png" alt="20171119001-20"><br>查看结果：<br><code>select * from mv2 where aid = 509;</code><br><img src="/img/posts/20171119001-21.png" alt="20171119001-21"><br>查看物化视图状态：<br><img src="/img/posts/20171119001-22.png" alt="20171119001-22"><br>可见物化视图为增量刷新，且没有之前发生的严重延迟的情况，需要注意的是，物化视图都要建立索引，且索引列都是包含rowid列的复合索引，如果是其他不是rowid列索引，可能没有任何效果。经测试，对基表增删改都是有效果的。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>1.创建含有外联接且刷新方式为REFRESH FAST ON COMMIT的物化视图时，如果select列里含有多个表中取某些列做运算，注意了，这时更新非主表的数据(增删改)，那么基表提交数据后将有可能导致延迟阻塞，这个时间比物化视图全量刷新还要慢。</li>
<li>2.除上述情况，例如物化视图都是内连接，有外联接但是没有多个表列做运算等，增量刷新都没问题。</li>
<li><del>3.至于多表列运算的外联接物化视图增量刷新很慢的原因，与ORACLE物化视图的刷新机制有关，官方文档也有提及这种情况会影响效率，建议最好改为内连接。</del></li>
<li><del>4.解决方法是改为定时全量刷新或者改外联接为内连接或者利用嵌套物化视图，或者还有其他方法，总之就是为了避开这种情况。</del></li>
<li>3.比较靠谱的解决方案是在多表列运算的外联接物化视图上创建包含rowid列的索引，创建与不创建索引在这个问题上显现出天壤之别。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ORACLE物化视图(MATERIALIZED VIEW)有自动提交刷新和手动刷新两种刷新方式，每种刷新方式下有增量刷新(FAST)、全量刷新(COMPLETE)、系统自动判断(FORCE)三种刷新方法。一般而言，增量刷新理论上是比全量刷新要快一些的，但是我发现某些情况下增量刷新将导致基表提交后延迟严重，下面将做一些测试。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORACLE" scheme="https://c-xuan.com/tags/ORACLE/"/>
    
      <category term="物化视图" scheme="https://c-xuan.com/tags/%E7%89%A9%E5%8C%96%E8%A7%86%E5%9B%BE/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>【ORACLE】常用物化视图相关元数据查询语句</title>
    <link href="https://c-xuan.com/2017/08/15/20170815001/"/>
    <id>https://c-xuan.com/2017/08/15/20170815001/</id>
    <published>2017-08-14T16:00:00.000Z</published>
    <updated>2017-08-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>对物化视图的状态等信息进行查询，监控和管理时，需要对系统视图进行查询，以下列出了常用的物化视图状态、依赖关联，批量维护时能用到的查询语句，根据具体情况进行适当修改。</p>
<a id="more"></a>
<p>语句中使用到的系统表字段说明请查看<a href="/2017/08/13/20170813001">物化视图相关元数据视图字段说明</a></p>
<h3 id="基本信息查询"><a href="#基本信息查询" class="headerlink" title="基本信息查询"></a>基本信息查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 物化视图基本信息</span></div><div class="line">	<span class="keyword">SELECT</span> OWNER            , <span class="comment">--所有者账户</span></div><div class="line">		   MVIEW_NAME       , <span class="comment">--名称</span></div><div class="line">		   LAST_REFRESH_DATE, <span class="comment">--上次更新时间</span></div><div class="line">		   REFRESH_METHOD   , <span class="comment">--更新方式</span></div><div class="line">		   INVALID          , <span class="comment">--是否失效</span></div><div class="line">		   <span class="keyword">QUERY</span>              <span class="comment">--查询语句</span></div><div class="line">	  <span class="keyword">FROM</span> USER_MVIEW_ANALYSIS </div><div class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> LAST_REFRESH_DATE <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>
<h3 id="物化视图输出列"><a href="#物化视图输出列" class="headerlink" title="物化视图输出列"></a>物化视图输出列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">    <span class="keyword">SELECT</span> a.OWNER        , <span class="comment">--所有者账户</span></div><div class="line">		a.MVIEW_NAME   , <span class="comment">--名称</span></div><div class="line">		b.COLUMN_NAME  , <span class="comment">--列名称</span></div><div class="line">		b.COMMENTS       <span class="comment">--列注释</span></div><div class="line">      <span class="keyword">FROM</span> USER_MVIEW_ANALYSIS a</div><div class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> USER_COL_COMMENTS b</div><div class="line">        <span class="keyword">ON</span> a.MVIEW_NAME = b.TABLE_NAME;</div></pre></td></tr></table></figure>
<h3 id="物化视图引用了哪些基表"><a href="#物化视图引用了哪些基表" class="headerlink" title="物化视图引用了哪些基表"></a>物化视图引用了哪些基表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 物化视图关联表</span></div><div class="line">		<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </div><div class="line">			   A.OWNER,          <span class="comment">--所有者账户</span></div><div class="line">			   A.MVIEW_NAME     ,<span class="comment">--物化视图名称</span></div><div class="line">		       B.COMMENTS       ,<span class="comment">--视图注释</span></div><div class="line">		       A.DETAILOBJ_OWNER,<span class="comment">--基表所有者账号</span></div><div class="line">		       A.DETAILOBJ_NAME  <span class="comment">--基表名称</span></div><div class="line">		  <span class="keyword">FROM</span> USER_MVIEW_DETAIL_RELATIONS A</div><div class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> USER_MVIEW_COMMENTS B <span class="keyword">ON</span> A.MVIEW_NAME = B.MVIEW_NAME</div><div class="line">		 <span class="keyword">WHERE</span> DETAILOBJ_NAME <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'BIN%'</span>;</div></pre></td></tr></table></figure>
<h3 id="物化视图-基表-存储过程引用关系"><a href="#物化视图-基表-存储过程引用关系" class="headerlink" title="物化视图-基表-存储过程引用关系"></a>物化视图-基表-存储过程引用关系</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 物化视图或普通视图引用了什么普通表，视图被哪些存储过程引用</span></div><div class="line">WITH CTE AS (</div><div class="line">    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </div><div class="line">           A.OWNER,               <span class="comment">-- 所有者账户</span></div><div class="line">           A.MVIEW_NAME         , <span class="comment">-- 物化视图名称</span></div><div class="line">           A.DETAILOBJ_OWNER    , <span class="comment">-- 被引用表账号</span></div><div class="line">           A.DETAILOBJ_NAME       <span class="comment">-- 被引用表名称</span></div><div class="line">      <span class="keyword">FROM</span> USER_MVIEW_DETAIL_RELATIONS A</div><div class="line">     <span class="keyword">WHERE</span> A.DETAILOBJ_NAME <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'BIN%'</span></div><div class="line"> <span class="keyword">UNION</span> ALL</div><div class="line">    <span class="keyword">SELECT</span> <span class="string">''</span> <span class="keyword">AS</span> OWNER,</div><div class="line">           <span class="keyword">NAME</span> <span class="keyword">AS</span> MVIEW_NAME,</div><div class="line">           REFERENCED_OWNER <span class="keyword">AS</span> DETAILOBJ_OWNER,</div><div class="line">           REFERENCED_NAME <span class="keyword">AS</span> DETAILOBJ_NAME</div><div class="line">      <span class="keyword">FROM</span> USER_DEPENDENCIES </div><div class="line">     <span class="keyword">WHERE</span> <span class="keyword">TYPE</span> =<span class="string">'VIEW'</span></div><div class="line">)</div><div class="line">    <span class="keyword">SELECT</span> A.OWNER            ,<span class="comment">-- 视图所有者账户</span></div><div class="line">           A.MVIEW_NAME <span class="keyword">AS</span> MV ,<span class="comment">-- 视图名称</span></div><div class="line">           A.DETAILOBJ_OWNER  ,<span class="comment">-- 基表所有者账户</span></div><div class="line">           A.DETAILOBJ_NAME   ,<span class="comment">-- 基表/视图</span></div><div class="line">           NVL(B.NAME,<span class="string">'-'</span>) <span class="keyword">AS</span> PROC_NAME <span class="comment">-- 存储过程名称</span></div><div class="line">      <span class="keyword">FROM</span> CTE A</div><div class="line"> <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">NAME</span>,REFERENCED_NAME </div><div class="line">              <span class="keyword">FROM</span> USER_DEPENDENCIES B </div><div class="line">             <span class="keyword">WHERE</span> B.TYPE = <span class="string">'PROCEDURE'</span> </div><div class="line">            ) B <span class="keyword">ON</span> A.MVIEW_NAME = B.REFERENCED_NAME</div><div class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.MVIEW_NAME,A.DETAILOBJ_NAME,B.NAME</div><div class="line">    ;</div></pre></td></tr></table></figure>
<h3 id="批量删除物化视图日志"><a href="#批量删除物化视图日志" class="headerlink" title="批量删除物化视图日志"></a>批量删除物化视图日志</h3><p>将结果复制出来执行。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 批量删除物化视图日志</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">MASTER</span>,<span class="string">'DROP MATERIALIZED VIEW LOG ON '</span> || <span class="keyword">MASTER</span> || <span class="string">' ;'</span> <span class="keyword">AS</span> DSQL </div><div class="line">  <span class="keyword">FROM</span> USER_MVIEW_LOGS;</div></pre></td></tr></table></figure></p>
<h3 id="删除没有被引用的基表的物化视图日志"><a href="#删除没有被引用的基表的物化视图日志" class="headerlink" title="删除没有被引用的基表的物化视图日志"></a>删除没有被引用的基表的物化视图日志</h3><p>将结果复制出来执行。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 删除没有被物化视图引用的基表的物化视图日志</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">MASTER</span>,<span class="string">'DROP MATERIALIZED VIEW LOG ON '</span> || <span class="keyword">MASTER</span> || <span class="string">';'</span>  <span class="keyword">AS</span> A</div><div class="line">  <span class="keyword">FROM</span> ALL_MVIEW_LOGS </div><div class="line"> <span class="keyword">WHERE</span> <span class="keyword">MASTER</span> <span class="keyword">NOT</span> <span class="keyword">IN</span> (</div><div class="line">           <span class="keyword">SELECT</span> DETAILOBJ_NAME </div><div class="line">             <span class="keyword">FROM</span> USER_MVIEW_DETAIL_RELATIONS </div><div class="line">        );</div></pre></td></tr></table></figure></p>
<h3 id="批量修改物化视图刷新方式"><a href="#批量修改物化视图刷新方式" class="headerlink" title="批量修改物化视图刷新方式"></a>批量修改物化视图刷新方式</h3><p>将结果复制出来执行。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--修改物化视图为手动增量刷新</span></div><div class="line"><span class="keyword">SELECT</span> <span class="string">'ALTER MATERIALIZED VIEW '</span> || MVIEW_NAME || <span class="string">' REFRESH FAST ON DEMAND;'</span> <span class="keyword">AS</span> S</div><div class="line"><span class="keyword">FROM</span> USER_MVIEWS <span class="keyword">WHERE</span> MVIEW_NAME <span class="keyword">LIKE</span> <span class="string">'MV_%'</span>;</div><div class="line"><span class="comment">--手动执行物化视图增量刷新</span></div><div class="line"><span class="keyword">SELECT</span> <span class="string">'DBMS_MVIEW.REFRESH('''</span> || MVIEW_NAME || <span class="string">''',''F'');'</span> <span class="keyword">AS</span> S</div><div class="line"><span class="keyword">FROM</span> USER_MVIEWS <span class="keyword">WHERE</span> MVIEW_NAME <span class="keyword">LIKE</span> <span class="string">'MV_%'</span>;</div><div class="line"><span class="comment">--修改物化视图为自动增量刷新</span></div><div class="line"><span class="keyword">SELECT</span> <span class="string">'ALTER MATERIALIZED VIEW '</span> || MVIEW_NAME || <span class="string">' REFRESH FAST ON COMMIT;'</span> <span class="keyword">AS</span> S</div><div class="line"><span class="keyword">FROM</span> USER_MVIEWS <span class="keyword">WHERE</span> MVIEW_NAME <span class="keyword">LIKE</span> <span class="string">'MV_%'</span>;</div><div class="line"><span class="comment">--修改引用了某个基表的所有物化视图为手动增量刷新</span></div><div class="line"><span class="keyword">SELECT</span> <span class="string">'ALTER MATERIALIZED VIEW '</span> || MVIEW_NAME || <span class="string">' REFRESH FAST ON DEMAND;'</span> <span class="keyword">AS</span> S</div><div class="line"><span class="keyword">FROM</span> USER_MVIEWS</div><div class="line"><span class="keyword">WHERE</span> MVIEW_NAME <span class="keyword">IN</span> (</div><div class="line">      <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">NAME</span> </div><div class="line">      <span class="keyword">FROM</span> USER_DEPENDENCIES </div><div class="line">      <span class="keyword">WHERE</span> <span class="keyword">TYPE</span> = <span class="string">'MATERIALIZED VIEW'</span> </div><div class="line">      <span class="keyword">AND</span> REFERENCED_NAME <span class="keyword">LIKE</span> <span class="string">'%table_name%'</span> <span class="comment">-- 基表名称</span></div><div class="line">);</div></pre></td></tr></table></figure></p>
<h3 id="物化视图刷新信息"><a href="#物化视图刷新信息" class="headerlink" title="物化视图刷新信息"></a>物化视图刷新信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--物化视图刷新信息</span></div><div class="line"><span class="keyword">SELECT</span> MVIEW_NAME,<span class="comment">--物化视图名称</span></div><div class="line">       REFRESH_MODE,<span class="comment">--刷新方式</span></div><div class="line">       REFRESH_METHOD,<span class="comment">--刷新类型</span></div><div class="line">       FAST_REFRESHABLE,<span class="comment">--是否可刷新</span></div><div class="line">       LAST_REFRESH_TYPE,<span class="comment">--最近一次刷新类型</span></div><div class="line">       LAST_REFRESH_DATE,<span class="comment">--最近一次刷新时间</span></div><div class="line">       STALENESS <span class="comment">--数据是否过时</span></div><div class="line">  <span class="keyword">FROM</span> USER_MVIEWS </div><div class="line"> <span class="comment">--WHERE MVIEW_NAME = 'MV1'</span></div><div class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> LAST_REFRESH_DATE <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>
<h3 id="物化视图最近一次刷新信息"><a href="#物化视图最近一次刷新信息" class="headerlink" title="物化视图最近一次刷新信息"></a>物化视图最近一次刷新信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--查询物化视图最近一次刷新信息</span></div><div class="line"> <span class="keyword">SELECT</span> MVIEW_NAME,  <span class="comment">--物化视图名称</span></div><div class="line">	    LAST_REFRESH_DATE <span class="string">"START_TIME"</span>, <span class="comment">--刷新开始时间</span></div><div class="line">	    <span class="keyword">CASE</span> <span class="keyword">WHEN</span> FULLREFRESHTIM &lt;&gt; <span class="number">0</span> </div><div class="line">			 <span class="keyword">THEN</span> LAST_REFRESH_DATE + FULLREFRESHTIM/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span></div><div class="line">		     <span class="keyword">WHEN</span> INCREFRESHTIM &lt;&gt; <span class="number">0</span> </div><div class="line">			 <span class="keyword">THEN</span> LAST_REFRESH_DATE + INCREFRESHTIM/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span></div><div class="line">		     <span class="keyword">ELSE</span> LAST_REFRESH_DATE</div><div class="line">	    <span class="keyword">END</span> <span class="string">"END_TIME"</span>, <span class="comment">--刷新结束时间</span></div><div class="line">	    FULLREFRESHTIM, <span class="comment">--全量刷新耗时</span></div><div class="line">	    INCREFRESHTIM , <span class="comment">--增量刷新耗时</span></div><div class="line">	    REFRESH_METHOD, <span class="comment">--最近一次刷新方式</span></div><div class="line">	    SUMMARY       , <span class="comment">--是否含有聚合查询</span></div><div class="line">	    INC_REFRESHABLE,<span class="comment">--是否支持增量刷新</span></div><div class="line">	    INVALID       , <span class="comment">--是否失效</span></div><div class="line">	    REWRITE_ENABLED <span class="comment">--是否支持查询重写</span></div><div class="line">   <span class="keyword">FROM</span> ALL_MVIEW_ANALYSIS</div><div class="line">  <span class="keyword">WHERE</span> OWNER=<span class="string">'OWNER'</span> <span class="comment">--物化视图所有者账户</span></div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> LAST_REFRESH_DATE <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对物化视图的状态等信息进行查询，监控和管理时，需要对系统视图进行查询，以下列出了常用的物化视图状态、依赖关联，批量维护时能用到的查询语句，根据具体情况进行适当修改。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORACLE" scheme="https://c-xuan.com/tags/ORACLE/"/>
    
      <category term="物化视图" scheme="https://c-xuan.com/tags/%E7%89%A9%E5%8C%96%E8%A7%86%E5%9B%BE/"/>
    
      <category term="原创" scheme="https://c-xuan.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>【ORACLE】物化视图相关元数据视图字段说明</title>
    <link href="https://c-xuan.com/2017/08/13/20170813001/"/>
    <id>https://c-xuan.com/2017/08/13/20170813001/</id>
    <published>2017-08-12T16:00:00.000Z</published>
    <updated>2017-08-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>当需要对物化视图的状态等信息进行查询，监控和管理时，就要用到相关的系统元数据表了，本文介绍了Oracle物化视图相关的元数据系统视图的表结构，这些视图有：<br><code>ALL_VIEWS</code>,<code>DBA_MVIEWS</code>,<code>USER_MVIEWS</code>，<code>ALL_MVIEW_ANALYSIS</code>，<code>DBA_MVIEW_ANALYSIS</code>，<code>USER_MVIEW_ANALYSIS</code>，<code>ALL_MVIEW_AGGREGATES</code>，<code>DBA_MVIEW_AGGREGATES</code>，<code>USER_MVIEW_AGGREGATES</code>，<code>ALL_MVIEW_REFRESH_TIMES</code>，<code>DBA_MVIEW_REFRESH_TIMES</code>，<code>USER_MVIEW_REFRESH_TIMES</code>，<code>ALL_MVIEW_JOINS</code>，<code>DBA_MVIEW_JOINS</code>，<code>USER_MVIEW_JOINS</code>，<code>ALL_MVIEW_KEYS</code>，<code>DBA_MVIEW_KEYS</code>，<code>USER_MVIEW_KEYS</code>，<code>ALL_MVIEW_LOGS</code>，<code>DBA_MVIEW_LOGS</code>，<code>USER_MVIEW_LOGS</code>。</p>
<a id="more"></a>
<h3 id="ALL-MVIEWS"><a href="#ALL-MVIEWS" class="headerlink" title="ALL_MVIEWS"></a>ALL_MVIEWS</h3><p><code>ALL_MVIEWS</code>系统视图描述了当前用户下所有可以访问的物化视图的相关信息。<br>相关视图</p>
<ul>
<li><code>DBA_MVIEWS</code>描述了数据库中创建的所有物化视图的相关信息。</li>
<li><code>USER_MVIEWS</code>描述了所属于当前用户下的所有物化视图的相关信息。</li>
</ul>
<table style="font-size:14px;"><tr><th width="16.78%">列名称</th><th width="14.24%">数据类型</th><th width="11.44%">是否可为NULL</th><th width="57.58%">字段描述</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>创建物化视图所用的Schema.</td></tr><tr><td>MVIEW_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>物化视图名称</td></tr><tr><td>CONTAINER_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>存储物化视图数据的容器名称。一般跟MVIEWNAME是一样的。对于早于Oracle8i的版本，数据库附上了SNAP$的前缀。如果MVIEW_NAME超过里了19比特长度，数据库将会把名称截断至19比特，外加了4位的序列号以免发生名称重复。</td></tr><tr><td>QUERY</td><td>LONG</td><td></td><td>定义物化视图查询的语句</td></tr><tr><td>QUERY_LEN</td><td>NUMBER(38)</td><td></td><td>定义的物化视图查询语句的长度，以比特为单位</td></tr><tr><td>UPDATABLE</td><td>VARCHAR2(1)</td><td></td><td>指明物化视图是(Y)否(N)可更新</td></tr><tr><td>UPDATE_LOG</td><td>VARCHAR2(30)</td><td></td><td>对于可更新的物化视图，更新日志的文件名称</td></tr><tr><td>MASTER_ROLLBACK_SEG</td><td>VARCHAR2(30)</td><td></td><td>Rollback segment for the master site or the master materialized view site</td></tr><tr><td>MASTER_LINK</td><td>VARCHAR2(128)</td><td></td><td>基表端的数据库链接</td></tr><tr><td>REWRITE_ENABLED</td><td>VARCHAR2(1)</td><td></td><td>指出是(Y)否(N)支持物化视图的查询重写</td></tr><tr><td>REWRITE_CAPABILITY</td><td>VARCHAR2(9)</td><td></td><td>指出物化视图是否适合查询重写。会有以下三种情况：<br>NONE：物化视图不能被用于查询重写以为查询重写选项被禁用了。<br>TEXTMATCH：物化视图的查询语句中包含查询重写的相关限制。<br>GENETAL：物化视图的查询语句中没有任何限制，所以数据库将在物化视图上应用支持的查询重写功能。</td></tr><tr><td>REFRESH_MODE</td><td>VARCHAR2(6)</td><td></td><td>物化视图的刷新模式：<br>DEMAND：物化视图将在调用刷新物化视图的存储过程时刷新。<br>COMMIT：物化视图将在基表上的事物提交后刷新。<br>NEVER：物化视图永远不会被刷新。</td></tr><tr><td>REFRESH_METHOD</td><td>VARCHAR2(8)</td><td></td><td>物化视图的刷新方法：<br>COMPLETE：物化视图会对基表的数据进行全量刷新。<br>FORCE：数据库引擎自动判断，如果物化视图可被增量刷新则执行增量刷新，否则全量刷新。<br>FAST：物化视图将从上一次刷新后，对于基表的数据变化进行增量刷新。<br>NEVER：用户告诉数据库该物化视图不用刷新。</td></tr><tr><td>BUILD_MODE</td><td>VARCHAR2(9)</td><td></td><td>指明物化视图在创建时是否填充数据：<br>IMMEDIATE：在创建物化视图时填充数据。<br>DEFERRED：在创建时不填充数据，之后用户要手动更新数据。<br>PREBUILT：在创建物化视图时用一个已经存在的表的数据填充物化视图。</td></tr><tr><td>FAST_REFRESHABLE</td><td>VARCHAR2(18)</td><td></td><td>指明物化视图是否适合增量刷新。Oracle数据库会基于定义物化视图的查询语句静态计算这个值。<br>NO：物化视图不支持增量刷新。<br>DML；只支持DML操作的增量刷新。<br>DIRLOAD_DML；适合于直接装载和DML操作的增加刷新。<br>DIRLOAD_LIMITEDDML；只支持直接装载和某些类型的DML操作的增量刷新。</td></tr><tr><td>LAST_REFRESH_TYPE</td><td>VARCHAR2(8)</td><td></td><td>最近一次刷新方法：COMPLETE：全量刷新。FAST：增量刷新。NA：还没有刷新过，比如创建时没指定填充数据的时候。</td></tr><tr><td>LAST_REFRESH_DATE</td><td>DATE</td><td></td><td>最近一次刷新的日期时间，如果从没刷新过就是空。</td></tr><tr><td>STALENESS</td><td>VARCHAR2(19)</td><td></td><td>物化视图的数据和基表数据的关系：<br>FRESH：物化视图数据跟基表的数据是一致的。<br>STALE：物化视图过期了，因为有一个或多个基表的数据已经变了，如果物化视图在此之前是FRESH，然后才变成STALE，那物化视图的数据跟基表表数据变更前是一致的。<br>NEEDS_COMPILE：物化视图的某些基表已经改了，要用ALTER MATERIALIZED VIEW…COMPILE语句来重新计算物化视图该状态。<br>UNUSABLE：物化视图的数据跟基表的数据任何时间都不一致。<br>UNKNOWN：Oracle数据库无法得知物化视图的数据跟基表的关系。这可能是基于prebuilt table来创建的物化视图。<br>UNDEFINED：物化视图有远程的基表，对于这类物化视图该状态不适用。</td></tr><tr><td>AFTER_FAST_REFRESH</td><td>VARCHAR2(19)</td><td></td><td>指明在物化视图执行增量刷新后是啥状态，状态值跟STALENESS列是一样的，只是多了一个NA，当执行增量刷新后变为不适用增量了出现这个值。</td></tr><tr><td>UNKNOWN_PREBUILT</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view is prebuilt (Y) or not (N)</td></tr><tr><td>UNKNOWN_PLSQL_FUNC</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view contains PL/SQL functions (Y) or not (N)</td></tr><tr><td>UNKNOWN_EXTERNAL_TABLE</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view contains external tables (Y) or not (N)</td></tr><tr><td>UNKNOWN_CONSIDER_FRESH</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view is considered fresh (Y) or not (N)</td></tr><tr><td>UNKNOWN_IMPORT</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view is imported (Y) or not (N)</td></tr><tr><td>UNKNOWN_TRUSTED_FD</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the materialized view uses trusted constraints for refresh (Y) or not (N)</td></tr><tr><td>COMPILE_STATE</td><td>VARCHAR2(19)</td><td></td><td>检查物化视图的相关基表都是否合法：<br>VALID：物化视图是没问题的，物化视图的基表没有变更。<br>NEEDS_COMPILE：物化视图的某些基表被改变了，要重新编译。<br>ERROR：物化视图有错误。</td></tr><tr><td>USE_NO_INDEX</td><td>VARCHAR2(1)</td><td></td><td>指出创建物化视图的时候是否使用USING NO INDEX子句，或者物化视图创建时默认了索引。</td></tr><tr><td>STALE_SINCE</td><td>DATE</td><td></td><td>Time from when the materialized view became stale</td></tr><tr><td>NUM_PCT_TABLES</td><td>NUMBER</td><td></td><td>Number of PCT detail tables</td></tr><tr><td>NUM_FRESH_PCT_REGIONS</td><td>NUMBER</td><td></td><td>Number of fresh PCT partition regions</td></tr><tr><td>NUM_STALE_PCT_REGIONS</td><td>NUMBER</td><td></td><td>Number of stale PCT partition regions</td></tr></table>


<p>参考<a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1153.htm#REFRN20139" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1153.htm#REFRN20139</a></p>
<h3 id="ALL-MVIEW-ANALYSIS"><a href="#ALL-MVIEW-ANALYSIS" class="headerlink" title="ALL_MVIEW_ANALYSIS"></a>ALL_MVIEW_ANALYSIS</h3><p>ALL_MVIEW_ANALYSIS describes the materialized views accessible to the current user. It provides additional information for analysis by applications. Minimal information is displayed for materialized views that do not support query rewrite (such as materialized views with remote master tables or nondeterministic functions).<br>Related Views<br>  ● DBA_MVIEW_ANALYSIS describes all such materialized views in the database.<br>  ● USER_MVIEW_ANALYSIS describes all such materialized views owned by the current user.<br>Note:<br>All of the information in these views is also displayed in ALL_MVIEWS and its related views. Oracle recommends that you refer to ALL_MVIEWSfor this information instead of these views.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the materialized view</td></tr><tr><td>MVIEW_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the materialized view</td></tr><tr><td>MVIEW_TABLE_OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the container table (see next column)</td></tr><tr><td>CONTAINER_NAME</td><td>VARCHAR2(30)</td><td></td><td>Name of the internal container in which the materialized view data is held. Normally this is the same asMVIEW<em>NAME. For materialized views created prior to Oracle8i, Oracle Database attaches the 6-byte prefix?SNAP$</em>. If?MVIEW_NAMEhas more than 19 bytes, then Oracle Database truncates the name to 19 bytes and adds a 4-byte sequence number as a suffix to produce a nonambiguousCONTAINER_NAME.</td></tr><tr><td>LAST_REFRESH_SCN</td><td>NUMBER</td><td></td><td>System change number (SCN) of the last refresh operation</td></tr><tr><td>LAST_REFRESH_DATE</td><td>DATE</td><td></td><td>SYSDATE?of the last refresh</td></tr><tr><td>REFRESH_METHOD</td><td>VARCHAR2(8)</td><td></td><td>Default refresh method:<br>FORCE<br>FAST<br>COMPLETE<br>NEVER</td></tr><tr><td>SUMMARY</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view includes a?GROUP BY?clause or aggregation (Y) or not (N)</td></tr><tr><td>FULLREFRESHTIM</td><td>NUMBER</td><td></td><td>Approximate refresh time, in seconds, for full refresh (defined only when?SUMMARY?=?Y)</td></tr><tr><td>INCREFRESHTIM</td><td>NUMBER</td><td></td><td>Approximate refresh time, in seconds, for fast refresh (defined only when?SUMMARY?=?Y)</td></tr><tr><td>CONTAINS_VIEWS</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view contains a view in its definition (Y) or not (N)</td></tr><tr><td>UNUSABLE</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view is?UNUSABLE?(inconsistent data) (Y) or not (N). A materialized view can be?UNUSABLE?if a system failure occurs during a full refresh.</td></tr><tr><td>RESTRICTED_SYNTAX</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view had a restriction in its defining query that limits the use of query rewrite (Y) or not (N). More complete information is provided by theREWRITE_CAPABILITY?column of the?*_MVIEWS?view.</td></tr><tr><td>INC_REFRESHABLE</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view can be fast refreshed (Y) or not (N)</td></tr><tr><td>KNOWN_STALE</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the data contained in the materialized view is known to be inconsistent with the master table data because that has been updated since the last successful refresh (Y) or not (N)</td></tr><tr><td>INVALID</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view is in an invalid state (inconsistent metadata) (Y) or not (N)</td></tr><tr><td>REWRITE_ENABLED</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this materialized view is currently enabled for query rewrite (Y) or not (N)</td></tr><tr><td>QUERY_LEN</td><td>NUMBER</td><td></td><td>Length (in bytes) of the query field</td></tr><tr><td>QUERY</td><td>LONG</td><td></td><td>SELECT?expression of the materialized view definition</td></tr><tr><td>REVISION</td><td>NUMBER</td><td>NOT NULL</td><td>Reserved for internal use</td></tr></table>

<p>参考<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1144.htm#REFRN20132" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1144.htm#REFRN20132</a></p>
<h3 id="ALL-MVIEW-AGGREGATES"><a href="#ALL-MVIEW-AGGREGATES" class="headerlink" title="ALL_MVIEW_AGGREGATES"></a>ALL_MVIEW_AGGREGATES</h3><p>ALL_MVIEW_AGGREGATES describes the grouping functions (aggregate operations) that appear in the SELECT list of materialized aggregate views accessible to the current user.<br>Related Views<br>  ● DBA_MVIEW_AGGREGATES describes all such grouping functions defined for all materialized views in the database.<br>  ● USER_MVIEW_AGGREGATES describes all such grouping functions defined for all materialized views owned by the current user.<br>Note:<br>All three views exclude materialized views that reference remote tables or that include references to a nonstatic value such as SYSDATE orUSER. These views also exclude materialized views that were created as “snapshots” prior to Oracle8i and that were never altered to enable query rewrite.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the materialized view</td></tr><tr><td>MVIEW_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the materialized view</td></tr><tr><td>POSITION_IN_SELECT</td><td>NUMBER</td><td>NOT NULL</td><td>Ordinal position of this aggregation within the?SELECT?list. For the position of nonaggregate elements of the select list, see”ALL_MVIEW_KEYS”.</td></tr><tr><td>CONTAINER_COLUMN</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of this column in the container table</td></tr><tr><td>AGG_FUNCTION</td><td>VARCHAR2(8)</td><td></td><td>Aggregation function</td></tr><tr><td>DISTINCTFLAG</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether this aggregation is distinct (Y) or not (N)</td></tr><tr><td>MEASURE</td><td>LONG</td><td></td><td>SQL text of the measure, excluding the aggregation function. Equal to?<em>?for?COUNT(</em>).</td></tr></table>

<p>参考<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1143.htm#REFRN20131" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1143.htm#REFRN20131</a></p>
<h3 id="ALL-MVIEW-REFRESH-TIMES"><a href="#ALL-MVIEW-REFRESH-TIMES" class="headerlink" title="ALL_MVIEW_REFRESH_TIMES"></a>ALL_MVIEW_REFRESH_TIMES</h3><p>ALL_MVIEW_REFRESH_TIMES describes refresh times of the materialized views accessible to the current user.<br>Related Views<br>  ● DBA_MVIEW_REFRESH_TIMES describes refresh times of all materialized views in the database.<br>  ● USER_MVIEW_REFRESH_TIMES describes refresh times of the materialized views owned by the current user.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the materialized view</td></tr><tr><td>NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the materialized view</td></tr><tr><td>MASTER_OWNER</td><td>VARCHAR2(30)</td><td></td><td>Owner of the master table</td></tr><tr><td>MASTER</td><td>VARCHAR2(30)</td><td></td><td>Name of the master table</td></tr><tr><td>LAST_REFRESH</td><td>DATE</td><td></td><td>SYSDATE?from the master site at the time of the last refresh</td></tr></table>

<h3 id="ALL-MVIEW-JOINS"><a href="#ALL-MVIEW-JOINS" class="headerlink" title="ALL_MVIEW_JOINS"></a>ALL_MVIEW_JOINS</h3><p>ALL_MVIEW_JOINS describes joins between two columns in the WHERE clause of the subquery that defines a materialized view accessible to the current user.<br>Related Views<br>  ● DBA_MVIEW_JOINS describes all such joins for all materialized views in the database.<br>  ● USER_MVIEW_JOINS describes such joins for all materialized views owned by the current user.<br>Note:<br>All three views exclude materialized views that reference remote tables or that includes references to a nonstatic value such as SYSDATE orUSER. These views also exclude materialized views that were created as “snapshots” prior to Oracle8i and that were never altered to enable query rewrite.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the materialized view</td></tr><tr><td>MVIEW_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Materialized view name</td></tr><tr><td>DETAILOBJ1_OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the first object in the joinFoot?1?</td></tr><tr><td>DETAILOBJ1_RELATION</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the first object in the joinFootref?1</td></tr><tr><td>DETAILOBJ1_COLUMN</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Join column of the first object in the joinFootref?1</td></tr><tr><td>OPERATOR</td><td>CHAR(1)</td><td></td><td>Join operatorFootref?1</td></tr><tr><td>OPERATOR_TYPE</td><td>VARCHAR2(1)</td><td></td><td>Indicates whether the join is an inner join (I) or the?DETAILOBJ1table is the left side of an outer join (L)Footref?1</td></tr><tr><td>DETAILOBJ2_OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the second object in the joinFootref?1</td></tr><tr><td>DETAILOBJ2_RELATION</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the second object in the joinFootref?1</td></tr><tr><td>DETAILOBJ2_COLUMN</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Join column of the second object in the joinFootref?1</td></tr></table>

<p>Footnote 1 These rows relate only to materialized join views and materialized aggregate views. They describe the two detail objects of a materialized view join.</p>
<p>参考<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1149.htm#REFRN20134" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1149.htm#REFRN20134</a></p>
<h3 id="ALL-MVIEW-KEYS"><a href="#ALL-MVIEW-KEYS" class="headerlink" title="ALL_MVIEW_KEYS"></a>ALL_MVIEW_KEYS</h3><p>ALL_MVIEW_KEYS describes the columns or expressions in the SELECT list upon which materialized views accessible to the current user are based.<br>Related Views<br>  ● DBA_MVIEW_KEYS describes such columns and expressions for all materialized views in the database.<br>  ● USER_MVIEW_KEYS describes such columns and expressions for all materialized views owned by the current user.<br>Note:<br>All three views exclude materialized views that reference remote tables or that includes references to a nonstatic value such as SYSDATE orUSER. These views also exclude materialized views that were created as snapshots prior to Oracle8i and that were never altered to enable query rewrite.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Owner of the materialized view</td></tr><tr><td>MVIEW_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Materialized view name</td></tr><tr><td>POSITION_IN_SELECT</td><td>NUMBER</td><td>NOT NULL</td><td>Ordinal position of this key within the?SELECT?list</td></tr><tr><td>CONTAINER_COLUMN</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Name of the column in the container table</td></tr><tr><td>DETAILOBJ_OWNER</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Detail object owner</td></tr><tr><td>DETAILOBJ_NAME</td><td>VARCHAR2(30)</td><td>NOT NULL</td><td>Detail object name (for example, the name of a table or view)</td></tr><tr><td>DETAILOBJ_ALIAS</td><td>VARCHAR2(30)</td><td></td><td>Implicit or explicit alias for detail relation</td></tr><tr><td>DETAILOBJ_TYPE</td><td>VARCHAR2(5)</td><td></td><td>Detail object type:</td></tr></table>

<p>参考<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1150.htm#REFRN20135" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1150.htm#REFRN20135</a></p>
<h3 id="ALL-MVIEW-LOGS"><a href="#ALL-MVIEW-LOGS" class="headerlink" title="ALL_MVIEW_LOGS"></a>ALL_MVIEW_LOGS</h3><p>ALL_MVIEW_LOGS describes all materialized view logs accessible to the current user.<br>Related Views<br>  ● DBA_MVIEW_LOGS describes all materialized view logs in the database.<br>  ● USER_MVIEW_LOGS describes all materialized view logs owned by the current user.</p>
<table style="font-size:14px;"><tr><th width="16.78%">Column</th><th width="14.24%">Datatype</th><th width="11.44%">NULL</th><th width="57.58%">Description</th></tr><tr><td>LOG_OWNER</td><td>VARCHAR2(30)</td><td></td><td>Owner of the materialized view log</td></tr><tr><td>MASTER</td><td>VARCHAR2(30)</td><td></td><td>Name of the master table or master materialized view whose changes are logged</td></tr><tr><td>LOG_TABLE</td><td>VARCHAR2(30)</td><td></td><td>Name of the table where the changes to the master table or master materialized view are logged</td></tr><tr><td>LOG_TRIGGER</td><td>VARCHAR2(30)</td><td></td><td>Obsolete with Oracle8i?and later. Set to NULL. Formerly, this parameter was an after-row trigger on the master which inserted rows into the log.</td></tr><tr><td>ROWIDS</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether rowid information is recorded (YES) or not (NO)</td></tr><tr><td>PRIMARY_KEY</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether primary key information is recorded (YES) or not (NO)</td></tr><tr><td>OBJECT_ID</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether object identifier information in an object table is recorded (YES) or not (NO)</td></tr><tr><td>FILTER_COLUMNS</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether filter column information is recorded (YES) or not (NO)</td></tr><tr><td>SEQUENCE</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether the sequence value, which provides additional ordering information, is recorded (YES) or not (NO)</td></tr><tr><td>INCLUDE_NEW_VALUES</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether both old and new values are recorded (YES) or old values are recorded but new values are not recorded (NO)</td></tr><tr><td>PURGE_ASYNCHRONOUS</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether the materialized view log is purged asynchronously (YES) or not (NO)</td></tr><tr><td>PURGE_DEFERRED</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether the materialized view log is purged in a deferred manner (YES) or not (NO)</td></tr><tr><td>PURGE_START</td><td>DATE</td><td></td><td>For deferred purge, the purge start date</td></tr><tr><td>PURGE_INTERVAL</td><td>VARCHAR2(200)</td><td></td><td>For deferred purge, the purge interval</td></tr><tr><td>LAST_PURGE_DATE</td><td>DATE</td><td></td><td>Date of the last purge</td></tr><tr><td>LAST_PURGE_STATUS</td><td>NUMBER</td><td></td><td>Status of the last purge (error code or?0?for success)</td></tr><tr><td>NUM_ROWS_PURGED</td><td>NUMBER</td><td></td><td>Number of rows purged in the last purge</td></tr><tr><td>COMMIT_SCN_BASED</td><td>VARCHAR2(3)</td><td></td><td>Indicates whether the materialized view log is commit SCN-based (YES) or not (NO)</td></tr></table>

<p>参考<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1151.htm#REFRN20137" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e40402/statviews_1151.htm#REFRN20137</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当需要对物化视图的状态等信息进行查询，监控和管理时，就要用到相关的系统元数据表了，本文介绍了Oracle物化视图相关的元数据系统视图的表结构，这些视图有：&lt;br&gt;&lt;code&gt;ALL_VIEWS&lt;/code&gt;,&lt;code&gt;DBA_MVIEWS&lt;/code&gt;,&lt;code&gt;USER_MVIEWS&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_ANALYSIS&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_ANALYSIS&lt;/code&gt;，&lt;code&gt;USER_MVIEW_ANALYSIS&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_AGGREGATES&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_AGGREGATES&lt;/code&gt;，&lt;code&gt;USER_MVIEW_AGGREGATES&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_REFRESH_TIMES&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_REFRESH_TIMES&lt;/code&gt;，&lt;code&gt;USER_MVIEW_REFRESH_TIMES&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_JOINS&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_JOINS&lt;/code&gt;，&lt;code&gt;USER_MVIEW_JOINS&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_KEYS&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_KEYS&lt;/code&gt;，&lt;code&gt;USER_MVIEW_KEYS&lt;/code&gt;，&lt;code&gt;ALL_MVIEW_LOGS&lt;/code&gt;，&lt;code&gt;DBA_MVIEW_LOGS&lt;/code&gt;，&lt;code&gt;USER_MVIEW_LOGS&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORACLE" scheme="https://c-xuan.com/tags/ORACLE/"/>
    
      <category term="物化视图" scheme="https://c-xuan.com/tags/%E7%89%A9%E5%8C%96%E8%A7%86%E5%9B%BE/"/>
    
      <category term="翻译" scheme="https://c-xuan.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>【ORACLE】物化视图快速刷新限制条件</title>
    <link href="https://c-xuan.com/2017/07/13/20170713001/"/>
    <id>https://c-xuan.com/2017/07/13/20170713001/</id>
    <published>2017-07-12T16:00:00.000Z</published>
    <updated>2017-07-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>快速刷新的物化视图创建比较麻烦，限制条件比较多，本文参考Oracle 11g 11.2版本官方文档，总结一般情况、含有联接、含有聚合计算、UNION ALL等情况下的限制条件。</p>
<a id="more"></a>
<h3 id="所有快速刷新的物化视图都必须满足的条件"><a href="#所有快速刷新的物化视图都必须满足的条件" class="headerlink" title="所有快速刷新的物化视图都必须满足的条件"></a><span id="here">所有快速刷新的物化视图都必须满足的条件</span></h3><p>定义物化视图的查询语句限制如下：</p>
<ul>
<li>1.物化视图中不能含有非重复表达式的引用，例如<code>SYSDATE</code>和<code>ROWNUM</code>.</li>
<li>2.物化视图中不能出现<code>RAW</code>或<code>LONG RAW</code>数据类型的引用。</li>
<li>3.查询语句的<code>SELECT</code>部分语不能出现子查询。</li>
<li>4.<code>SELECT</code>子句部分不能包含分析性质的函数，例如<code>RANK</code>。</li>
<li>5.不能含有<code>MODEL</code>子句。</li>
<li>6.子查询中不能含有<code>HAVING</code>子句。</li>
<li>7.不能出现含有<code>ANY</code>,<code>ALL</code>或<code>NOT EXISTS</code>的嵌套子查询。</li>
<li>8.不能含有<code>[START WITH …] CONNECT BY</code>子句。</li>
<li>9.不能包含不同站点的多个明细表。</li>
<li>10.<code>ON COMMIT</code>刷新方式的物化视图不能有远程明细表的引用。</li>
<li>11.嵌套物化视图必须含有表联接或者聚合计算。</li>
<li>12.物化视图包含联接和<code>GROUP BY</code>子句的聚合计算时，不能select from 一个有索引的表。</li>
</ul>
<h3 id="只包含联接的物化视图快速刷新限制条件"><a href="#只包含联接的物化视图快速刷新限制条件" class="headerlink" title="只包含联接的物化视图快速刷新限制条件"></a>只包含联接的物化视图快速刷新限制条件</h3><p>定义物化视图的查询语句只含有联接且没有聚合计算，实现快速刷新除满足<a href="#here">通用条件</a>外，还要满足条件如下：</p>
<ul>
<li>1.不能含有<code>GROUP BY</code>子句或聚合计算。</li>
<li>2.<code>FROM</code>中出现的每个基表的<code>ROWID</code>必须出现在<code>SELECT</code>子句中。</li>
<li>3.<code>FROM</code>中出现的每个基表都必须创建基于<code>ROWID</code>的物化视图日志(MATERIALIZED VIEW LOG)。</li>
<li>4.<code>SELECT</code>子句中不能含有object类型的列。</li>
</ul>
<p><font color="red"><strong>另外，以下情况将会影响快速刷新的效率：</strong></font></p>
<ul>
<li><strong><font color="red">1.定义的查询语句含有外联接，如果这样的话，请考虑重写查询语句改为内连接。</font></strong></li>
<li><strong><font color="red">2.<code>SELECT</code>子句中含有多个表的列运算。</font></strong></li>
</ul>
<h3 id="包含聚合的物化视图快速刷新限制"><a href="#包含聚合的物化视图快速刷新限制" class="headerlink" title="包含聚合的物化视图快速刷新限制"></a>包含聚合的物化视图快速刷新限制</h3><p>定义物化视图的查询语句含有聚合计算，实现快速刷新除满足<a href="#here">通用条件</a>外，还要满足条件如下：</p>
<ul>
<li>1.所有基表必须建立物化视图日志，创建日志必须满足：<ul>
<li>1.1 包含在物化视图中引用的所有列，确保这些列没有被加密。</li>
<li>1.2 需要指定<code>ROWID</code>和<code>INCLUDING NEW VAUES</code>。</li>
<li>1.3 如果基表会有插入/直接导入，删除，更新数据的混合操作，需要指定<code>SEQUENCE</code>子句。</li>
</ul>
</li>
<li>2.只有<code>SUM</code>,<code>COUNT</code>,<code>AVG</code>,<code>STDDEV</code>,<code>VARIANCE</code>,<code>MIN</code>和<code>MAX</code>才支持快速刷新。</li>
<li>3.必须有写<code>COUNT(*)</code>。</li>
<li>4.聚合函数必须出现在表达式的最外层，也就是说像<code>AVG(AVG(X))</code>或<code>AVG(x)+AVG(x)</code>都是不允许的。</li>
<li>5.对每一个聚集计算如<code>AVG(expr)</code>,相应的<code>COUNT(expr)</code>也必须要有，Oracle建议<code>SUM(expr)</code>也写上。</li>
<li>6.如果含有<code>VARIANCE(expr)</code>或<code>STDDEV(expr)</code>,<code>COUNT(expr)</code>和<code>SUM(expr)</code>都必须写，Oracle建议<code>SUM(expr*expr)</code>也写上。</li>
<li>7.查询中定义的<code>SELECT</code>列不能是来自多个表的列复杂运算，可以考虑使用嵌套物化视图作为变通方案。</li>
<li>8.<code>GROUP BY</code>中的列都要在<code>SELECT</code>里出现。</li>
<li>9.如果物化视图日志中过滤列字段类型为<code>CHAR</code>，那么基表所在的数据库和物化视图所在的数据库的字符集必须要一样。</li>
<li>10.如果物化视图有以下情况，增量刷新只支持DML操作中的<code>INSERT</code>和直接装载(direct loads)操作，这种物化视图叫只能插入(insert-only)的物化视图：<ul>
<li>10.1 物化视图有<code>MIN</code>或者<code>MAX</code>聚合计算。</li>
<li>10.2 物化视图有<code>SUM(expr)</code>但是没有<code>COUNT(expr)</code>。</li>
<li>10.3 物化视图没有指定<code>COUNT(*)</code>。</li>
</ul>
</li>
<li>11.含有<code>MAX</code>或<code>MIN</code>聚合计算的物化视图如果没有<code>WHERE</code>子句，是支持基表增删改的增量刷新的。</li>
<li>12.物化视图的<code>FROM</code>子句中有普通视图或者子查询，如果普通视图可以被完全合并是可以支持增量刷新的。(PS.这一条不懂啥意思)</li>
<li>13.如果没有外联接，<code>WHERE</code>子句没有限制。<br>-14.有外联接和聚合计算的物化视图是支持增量刷新的，只有外接表数据变更的时候。另外，唯一约束必须存在于表的内连接列上。如果有外联接，所有连接必须用<code>AND</code>和<code>=</code>操作符。</li>
<li>15.对于含有<code>CUBE</code>，<code>ROLLUP</code>，<code>GOUPING SETS</code>的物化视图，会有以下限制：<ul>
<li>15.1<code>SELECT</code>列表要包含<code>GROUP BY</code>所有字段的<code>GROUPING_ID</code>或<code>GROUPING</code>。举个例子，<code>GROUP BY</code>子句是<code>GROUP BY CUBE(a, b)</code>，那么<code>SELECT</code>列表中应该包含<code>GROUPING_ID(a, b)</code>或<code>GROUPING(a) , GROUPING(b)</code>，这样才会使物化视图增量刷新。</li>
<li>15.2 <code>GROUP BY</code>不能导致多个groupings的情况，比如，<code>GROUP BY a, ROLLUP(a, b)</code>就不会增量刷新因为这会导致多个groupings，<code>(a), (a, b), (a)</code>。</li>
</ul>
</li>
</ul>
<h3 id="包含UNION-ALL的物化视图快速刷新限制"><a href="#包含UNION-ALL的物化视图快速刷新限制" class="headerlink" title="包含UNION ALL的物化视图快速刷新限制"></a>包含UNION ALL的物化视图快速刷新限制</h3><p>含有<code>UNION ALL</code>的物化视图<code>REFRESH FAST</code>需要满足以下条件：</p>
<ul>
<li>1.<code>UNION ALL</code>操作必须在查询语句的顶层。<code>UNION ALL</code>不能被嵌套在一个子查询里面，这里有一个例外：<code>SELECT * FROM</code>后面直接跟含有<code>UNION ALL</code>的子查询。</li>
</ul>
<p>例如：<br>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> view_with_unionall <span class="keyword">AS</span></div><div class="line">(<span class="keyword">SELECT</span> c.rowid crid, c.cust_id, <span class="number">2</span> umarker</div><div class="line">   <span class="keyword">FROM</span> customers c <span class="keyword">WHERE</span> c.cust_last_name = <span class="string">'Smith'</span></div><div class="line">  <span class="keyword">UNION</span> ALL</div><div class="line"> <span class="keyword">SELECT</span> c.rowid crid, c.cust_id, <span class="number">3</span> umarker</div><div class="line">   <span class="keyword">FROM</span> customers c <span class="keyword">WHERE</span> c.cust_last_name = <span class="string">'Jones'</span>);</div><div class="line"></div><div class="line"> <span class="keyword">CREATE</span> <span class="keyword">MATERIALIZED</span> <span class="keyword">VIEW</span> unionall_inside_view_mv</div><div class="line"><span class="keyword">REFRESH</span> <span class="keyword">FAST</span> <span class="keyword">ON</span> <span class="keyword">DEMAND</span> <span class="keyword">AS</span></div><div class="line"> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> view_with_unionall;</div></pre></td></tr></table></figure></p>
<ul>
<li>2.<code>UNION ALL</code>的每一部分查询必须满足聚合物化视图货连接物化视图的增量刷新条件。相应的物化视图日志也要建上。</li>
<li>3.<code>UNION ALL</code>的每一部分查询必须包含一列标记列，这个标识列必须是数值或者字符型的固定数值，而且这一列在每一部分的查询中<code>SELECT</code>列顺序相同。</li>
<li>4.一些特性如外联接，只能插入(insert-only)的物化视图查询和远程表都是不支持<code>UNION ALL</code>物化视图的。然而，那些被用于复制的不包含联接和聚集计算的物化视图，是可以增量刷新的。</li>
<li>5.创建包含<code>UNION ALL</code>的增量刷新物化视图，版本需满足9.2.0或更高才能满足兼容。</li>
</ul>
<p>参考：<br><a href="https://docs.oracle.com/cd/E11882_01/server.112/e25554/basicmv.htm#i1007013" target="_blank" rel="external">https://docs.oracle.com/cd/E11882_01/server.112/e25554/basicmv.htm#i1007013</a></p>
<p>更多：<br><a href="http://c-xuan.com/2017/07/13/20170713001">http://c-xuan.com/2017/07/13/20170713001</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;快速刷新的物化视图创建比较麻烦，限制条件比较多，本文参考Oracle 11g 11.2版本官方文档，总结一般情况、含有联接、含有聚合计算、UNION ALL等情况下的限制条件。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORACLE" scheme="https://c-xuan.com/tags/ORACLE/"/>
    
      <category term="物化视图" scheme="https://c-xuan.com/tags/%E7%89%A9%E5%8C%96%E8%A7%86%E5%9B%BE/"/>
    
      <category term="翻译" scheme="https://c-xuan.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>树形结构数据存储方案（五）：区间嵌套</title>
    <link href="https://c-xuan.com/2017/03/07/tree-table-store5/"/>
    <id>https://c-xuan.com/2017/03/07/tree-table-store5/</id>
    <published>2017-03-07T15:44:08.000Z</published>
    <updated>2017-03-07T16:11:16.129Z</updated>
    
    <content type="html"><![CDATA[<p>前面的一篇文章介绍了左右值编码，不知道大家注意到了没有，如果数据庞大，每次更新都需要更新差不多全表，效率较低没有更好的方式？今天我们就来研究下区间嵌套法。</p>
<p><strong>区间嵌套法原理</strong></p>
<p>如果节点区间<code>[clft, crgt]</code>与<code>[plft, prgt]</code>存在如下关系：<code>plft &lt;= clft and crgt &gt;= prgt</code>，则<code>[clft, crgt]</code>区间里的点是<code>[plft, prgt]</code>的子节点。基于此假设我们就可以通过对区间的不断的向下划来获取新的区间。举例：如果在区间<code>[plft, prgt]</code>中存在一个空白区间<code>[lft1, rgt1]</code>，如果要加入一个<code>[plft,lft1]</code>、<code>[rgt1,prgt]</code>同级的区间，只需插入节点：<code>[(2*lft1+rgt1)/3</code>,  <code>(rgt1+2*lft)/3]</code>。在添加完节点后我们还留下<code>[lft1,(2*lft1+rgt1)/3]</code>和 <code>[(rgt1+2*lft)/3,rgt1]</code>两个空余的空间用来添加更多的子节点。</p>
<a id="more"></a>
<center><img src="/img/posts/tree-table-store5-1.gif"></center>

<p>如果我们把区间放在二位平面上，把<code>rgt</code>当成是x轴，<code>lft</code>当做是y轴，纳闷嵌套的区间数差不多是这样的：</p>
<center><img src="/img/posts/tree-table-store5-2.gif"></center>

<p>每个节点<code>[lft, rgt]</code>拥有的子节点都被包含在<code>y &gt;= lft &amp; x &lt;= rgt</code>中。同时<code>y &gt;= clft &amp; x &lt;= crgt</code>所在的空间也是<code>y &gt;= plft  &amp; x &lt;= prgt</code>的子集。另外由于新增的右区间都小于已有的左区间，所以新增的节点均在y=x这条直线以下。</p>
<p><strong>区间嵌套法实现</strong></p>
<p>了解了区间嵌套法的原理后，接下来我们就要考虑如何实现他，原则上初始的区间使用任何区间都是可以的，这里我们使用的是[0,1]作为根区间。</p>
<center><img src="/img/posts/tree-table-store5-3.gif"></center>

<p>首先，我们在XY平面上定义2个点。深度优先集合点和广度有限集合点，针对点<code>&lt;x=1,y=1/2&gt;</code>的深度优先集合点为<code>&lt;x=1,y=1&gt;</code>，广度优先集合点为<code>&lt;x=1/2,y=1/2&gt;</code>。接下来我们定义第一个子节点的位置为父节点和深度优先集合点的中间点。兄弟节点则为前一个子节点到广度优先集合点的中间点，如上图所示，节点1.2的位置为<code>&lt;x=3/4, y=5/8&gt;</code>。</p>
<p>另外仔细看我们可以看到点与点之间的关系。另外如果我们知道x和y的和，我们就能反推出x,y的值（具体的逻辑是什么，我现在也还没有搞懂，有知道的朋友可以帮忙解释下）。</p>
<p>我们以节点<code>&lt;x=3/4, y=5/8&gt;</code>为例，我们可以得到他的和为11/8。</p>
<p>我们定义11为分子（numerator），8为分母（denominator），则x点的分子为：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`x_numer`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> ret_num <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret_den <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">SET</span> ret_num := numer+<span class="number">1</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := denom*<span class="number">2</span>;</div><div class="line">WHILE floor(ret_num/2) = ret_num/2 <span class="keyword">DO</span></div><div class="line"><span class="keyword">SET</span> ret_num := ret_num/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := ret_den/<span class="number">2</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN ret_num;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>x点的分母为：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`x_ denom`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> ret_num <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret_den <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">SET</span> ret_num := numer+<span class="number">1</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := denom*<span class="number">2</span>;</div><div class="line">WHILE floor(ret_num/2) = ret_num/2 <span class="keyword">DO</span></div><div class="line"><span class="keyword">SET</span> ret_num := ret_num/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := ret_den/<span class="number">2</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN ret_den;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>Y点的分子:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">CREATE DEFINER = `root`@`localhost` FUNCTION `y_numer`(`numer` int,`denom` int)</div><div class="line">RETURNS int(11)</div><div class="line">BEGIN</div><div class="line">DECLARE num INT;</div><div class="line">DECLARE den INT;</div><div class="line">SET num := x_numer(numer, denom);</div><div class="line">SET den := x_denom(numer, denom);</div><div class="line">WHILE den &lt; denom DO</div><div class="line">SET num := num*2;</div><div class="line">SET den := den*2;</div><div class="line">END WHILE;</div><div class="line">SET num := (numer - num);</div><div class="line">WHILE floor(num/2) = num/2 DO</div><div class="line">SET num := num/2;</div><div class="line">SET den := den/2;</div><div class="line">END WHILE;</div><div class="line">RETURN num;</div><div class="line">END;</div></pre></td></tr></table></figure>
<p>Y 的分母：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">CREATE DEFINER = `root`@`localhost` FUNCTION `y_denom`(`numer` int,`denom` int)</div><div class="line">RETURNS int(11)</div><div class="line">BEGIN</div><div class="line">DECLARE num INT;</div><div class="line">DECLARE den INT;</div><div class="line">SET num := x_numer(numer, denom);</div><div class="line">SET den := x_denom(numer, denom);</div><div class="line">WHILE den &lt; denom DO</div><div class="line">SET num := num*2;</div><div class="line">SET den := den*2;</div><div class="line">END WHILE;</div><div class="line">SET num := (numer - num);</div><div class="line">WHILE floor(num/2) = num/2 DO</div><div class="line">SET num := num/2;</div><div class="line">SET den := den/2;</div><div class="line">END WHILE;</div><div class="line">RETURN den;</div><div class="line">END;</div></pre></td></tr></table></figure>
<p>接下来我们来测试下，X与Y是否能解码出来：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line"><span class="keyword">CONCAT</span>(x_numer (<span class="number">11</span>, <span class="number">8</span>),<span class="string">'/'</span>,x_denom (<span class="number">11</span>, <span class="number">8</span>)) <span class="keyword">AS</span> X,</div><div class="line"><span class="keyword">CONCAT</span>(y_numer (<span class="number">11</span>, <span class="number">8</span>),<span class="string">'/'</span>,y_denom (<span class="number">11</span>, <span class="number">8</span>)) <span class="keyword">AS</span> Y</div></pre></td></tr></table></figure>
<center><img src="/img/posts/tree-table-store5-4.gif"></center>

<p>结果与节点1.2的位置为<code>&lt;x=3/4, y=5/8&gt;</code>完全一致。现在我们知道只需要一个分数即可表示平面上的一个点。</p>
<p>如有已经有分数11/8如何获取该节点的父节点？(如果分子为3，则代表其为根节点)</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`parent_numer`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> ret_num <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret_den <span class="built_in">INT</span>;</div><div class="line">IF numer=3 THEN</div><div class="line">RETURN denom/2;</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"><span class="keyword">SET</span> ret_num := (numer<span class="number">-1</span>)/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := denom/<span class="number">2</span>;</div><div class="line">WHILE floor((ret_num-1)/4) = (ret_num-1)/4 <span class="keyword">DO</span></div><div class="line"><span class="keyword">SET</span> ret_num := (ret_num+<span class="number">1</span>)/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := ret_den/<span class="number">2</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN ret_num;</div><div class="line"><span class="keyword">END</span>;</div><div class="line"></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(parent_numer(<span class="number">11</span>,<span class="number">8</span>),<span class="string">'/'</span>,parent_denom(<span class="number">11</span>,<span class="number">8</span>)) <span class="keyword">AS</span> <span class="keyword">parent</span></div></pre></td></tr></table></figure>
<p>计算当前节点在同级所在的位置：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`parent_denom`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> ret_num <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret_den <span class="built_in">INT</span>;</div><div class="line">IF numer=3 THEN</div><div class="line">RETURN NULL;</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"><span class="keyword">SET</span> ret_num := (numer<span class="number">-1</span>)/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := denom/<span class="number">2</span>;</div><div class="line">WHILE floor((ret_num-1)/4) = (ret_num-1)/4 <span class="keyword">DO</span></div><div class="line"><span class="keyword">SET</span> ret_num := (ret_num+<span class="number">1</span>)/<span class="number">2</span>;</div><div class="line"><span class="keyword">SET</span> ret_den := ret_den/<span class="number">2</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN ret_den;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>有了查询父节点的方法及当前节点所在同级中的位置的方法，即可通过这两个的组合，将节点的路径给计算出来。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`path`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">varchar</span>(<span class="number">255</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">IF</span> numer <span class="keyword">is</span> <span class="literal">NULL</span> <span class="keyword">THEN</span></div><div class="line"><span class="keyword">RETURN</span> <span class="string">''</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">RETURN path(parent_numer(numer, denom),parent_denom(numer, denom))|| ‘.’ || sibling_number(numer, denom);</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>按照以上方法添加后进行测试，返回<br><strong>[Err] 1424 – Recursive stored functions and triggers are not allowed.</strong>即MySQL的自定义函数不支持递归查询。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`path`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">varchar</span>(<span class="number">255</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> numer_temp <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> denom_temp <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> path_result <span class="built_in">VARCHAR</span>(<span class="number">255</span>);</div><div class="line"><span class="keyword">DECLARE</span> path_temp <span class="built_in">VARCHAR</span>(<span class="number">255</span>);</div><div class="line"><span class="keyword">DECLARE</span> sn <span class="built_in">VARCHAR</span>(<span class="number">255</span>);</div><div class="line"><span class="keyword">SET</span> path_temp := <span class="string">''</span>;</div><div class="line">WHILE numer IS NOT NULL <span class="keyword">DO</span></div><div class="line"><span class="keyword">IF</span> path_temp = <span class="string">''</span></div><div class="line"><span class="keyword">THEN</span></div><div class="line"><span class="keyword">SET</span> path_result := sibling_number(numer, denom);</div><div class="line">ELSE</div><div class="line"><span class="keyword">SET</span> path_result := <span class="keyword">CONCAT</span>(sibling_number(numer, denom),<span class="string">'.'</span>,path_temp);</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line"><span class="keyword">SET</span> path_temp := path_result;</div><div class="line"><span class="keyword">SET</span> numer_temp := parent_numer(numer, denom);</div><div class="line"><span class="keyword">SET</span> denom_temp := parent_denom(numer, denom);</div><div class="line"><span class="keyword">SET</span> numer := numer_temp;</div><div class="line"><span class="keyword">SET</span> denom := denom_temp;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN path_result;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p><code>SELECT path (11, 8)</code>的结果为 1.2</p>
<p>计算节点层级的方法：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`node_level`</span>(<span class="string">`numer`</span> <span class="built_in">int</span>,<span class="string">`denom`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">DECLARE</span> ret_num <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret_den <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">DECLARE</span> ret <span class="built_in">INT</span>;</div><div class="line"><span class="keyword">SET</span> ret =<span class="number">1</span>;</div><div class="line">IF numer=3 THEN</div><div class="line">return 1;</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">WHILE numer!=3 <span class="keyword">DO</span></div><div class="line"><span class="keyword">SET</span> ret_num := parent_numer(numer, denom);</div><div class="line"><span class="keyword">SET</span> ret_den := parent_denom(numer, denom);</div><div class="line"><span class="keyword">SET</span> numer := ret_num;</div><div class="line"><span class="keyword">SET</span> denom := ret_den;</div><div class="line"><span class="keyword">SET</span> ret := ret + <span class="number">1</span>;</div><div class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</div><div class="line">RETURN ret;</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>我们知道了如何将编码过的节点转成目录形式，如何逆转呢？以下是方法：</p>
<p>先添加2个辅助函数：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`child_numer`</span>(<span class="string">`num`</span> <span class="built_in">int</span>,<span class="string">`den`</span> <span class="built_in">int</span>,<span class="string">`child`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">RETURN</span> <span class="keyword">num</span> * <span class="keyword">power</span>(<span class="number">2</span>, <span class="keyword">child</span>) + <span class="number">3</span> - <span class="keyword">power</span>(<span class="number">2</span>, <span class="keyword">child</span>);</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> DEFINER = <span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">FUNCTION</span> <span class="string">`child_denom`</span>(<span class="string">`num`</span> <span class="built_in">int</span>,<span class="string">`den`</span> <span class="built_in">int</span>,<span class="string">`child`</span> <span class="built_in">int</span>)</div><div class="line"><span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="keyword">RETURN</span> den*<span class="keyword">power</span>(<span class="number">2</span>, <span class="keyword">child</span>);</div><div class="line"><span class="keyword">END</span>;</div></pre></td></tr></table></figure>
<p>再来编写逆转函数：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">CREATE DEFINER = `root`@`localhost` FUNCTION `path_numer`(`path` varchar(255))</div><div class="line">RETURNS int(11)</div><div class="line">BEGIN</div><div class="line">DECLARE num INT;</div><div class="line">DECLARE den INT;</div><div class="line">DECLARE postfix VARCHAR(255);</div><div class="line">DECLARE sibling VARCHAR(255);</div><div class="line">SET num := 1;</div><div class="line">SET den := 1;</div><div class="line">SET postfix := CONCAT(path,'.');</div><div class="line">WHILE length(postfix) &gt; 1 DO</div><div class="line">SET sibling := SUBSTR(postfix, 1, instr(postfix,'.')-1);</div><div class="line">SET postfix := SUBSTR(postfix, instr(postfix,'.')+1);</div><div class="line">SET num := child_numer(num,den,sibling+0);</div><div class="line">SET den := child_denom(num,den,sibling+0);</div><div class="line">END WHILE;</div><div class="line">RETURN num;</div><div class="line">END;</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">CREATE DEFINER = `root`@`localhost` FUNCTION `path_denom`(`path` varchar(255))</div><div class="line">RETURNS int(11)</div><div class="line">BEGIN</div><div class="line">DECLARE num INT;</div><div class="line">DECLARE den INT;</div><div class="line">DECLARE postfix VARCHAR(255);</div><div class="line">DECLARE sibling VARCHAR(255);</div><div class="line">SET num := 1;</div><div class="line">SET den := 1;</div><div class="line">SET postfix := CONCAT(path,'.');</div><div class="line">WHILE length(postfix) &gt; 1 DO</div><div class="line">SET sibling := SUBSTR(postfix, 1, instr(postfix,'.')-1);</div><div class="line">SET postfix := SUBSTR(postfix, instr(postfix,'.')+1);</div><div class="line">SET num := child_numer(num,den,sibling+0);</div><div class="line">SET den := child_denom(num,den,sibling+0);</div><div class="line">END WHILE;</div><div class="line">RETURN den;</div><div class="line">END;</div></pre></td></tr></table></figure>
<p><code>select CONCAT(path_numer(‘2.1.3′),’/’,path_denom(‘2.1.3’))</code>结果为51/64</p>
<p>参考资料：<br>  ● <a href="http://www.rampant-books.com/art_vadim_nested_sets_sql_trees.htm" target="_blank" rel="external">http://www.rampant-books.com/art_vadim_nested_sets_sql_trees.htm</a></p>
<p>转自<a href="https://www.biaodianfu.com/nested-intervals.html" target="_blank" rel="external">https://www.biaodianfu.com/nested-intervals.html</a></p>
<p>作者：标点符</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面的一篇文章介绍了左右值编码，不知道大家注意到了没有，如果数据庞大，每次更新都需要更新差不多全表，效率较低没有更好的方式？今天我们就来研究下区间嵌套法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;区间嵌套法原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果节点区间&lt;code&gt;[clft, crgt]&lt;/code&gt;与&lt;code&gt;[plft, prgt]&lt;/code&gt;存在如下关系：&lt;code&gt;plft &amp;lt;= clft and crgt &amp;gt;= prgt&lt;/code&gt;，则&lt;code&gt;[clft, crgt]&lt;/code&gt;区间里的点是&lt;code&gt;[plft, prgt]&lt;/code&gt;的子节点。基于此假设我们就可以通过对区间的不断的向下划来获取新的区间。举例：如果在区间&lt;code&gt;[plft, prgt]&lt;/code&gt;中存在一个空白区间&lt;code&gt;[lft1, rgt1]&lt;/code&gt;，如果要加入一个&lt;code&gt;[plft,lft1]&lt;/code&gt;、&lt;code&gt;[rgt1,prgt]&lt;/code&gt;同级的区间，只需插入节点：&lt;code&gt;[(2*lft1+rgt1)/3&lt;/code&gt;,  &lt;code&gt;(rgt1+2*lft)/3]&lt;/code&gt;。在添加完节点后我们还留下&lt;code&gt;[lft1,(2*lft1+rgt1)/3]&lt;/code&gt;和 &lt;code&gt;[(rgt1+2*lft)/3,rgt1]&lt;/code&gt;两个空余的空间用来添加更多的子节点。&lt;/p&gt;
    
    </summary>
    
      <category term="码路刺客" scheme="https://c-xuan.com/categories/%E7%A0%81%E8%B7%AF%E5%88%BA%E5%AE%A2/"/>
    
    
      <category term="数据库" scheme="https://c-xuan.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="转载" scheme="https://c-xuan.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
